import {
  __commonJS,
  __require
} from "./chunk-5FUTL2UF.js";

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:os
var require_os = __commonJS({
  "browser-external:os"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "os" has been externalized for browser compatibility. Cannot access "os.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/@hapi/accept/index.js
var require_accept = __commonJS({
  "../../../node_modules/next/dist/compiled/@hapi/accept/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 298: (e2, t2, r2) => {
        const n = r2(135);
        const o = r2(749);
        const s = {};
        t2.selection = function(e3, r3, n2) {
          const o2 = t2.selections(e3, r3, n2);
          return o2.length ? o2[0] : "";
        };
        t2.selections = function(e3, t3, r3) {
          n.assert(!t3 || Array.isArray(t3), "Preferences must be an array");
          return s.parse(e3 || "", t3, r3);
        };
        s.parse = function(e3, t3, r3) {
          const n2 = e3.replace(/[ \t]/g, "");
          const a = /* @__PURE__ */ new Map();
          if (t3) {
            let e4 = 0;
            for (const n3 of t3) {
              const t4 = n3.toLowerCase();
              a.set(t4, { orig: n3, pos: e4++ });
              if (r3.prefixMatch) {
                const r4 = t4.split("-");
                while (r4.pop(), r4.length > 0) {
                  const t5 = r4.join("-");
                  if (!a.has(t5)) {
                    a.set(t5, { orig: n3, pos: e4++ });
                  }
                }
              }
            }
          }
          const i = n2.split(",");
          const u = [];
          const c = /* @__PURE__ */ new Set();
          for (let e4 = 0; e4 < i.length; ++e4) {
            const n3 = i[e4];
            if (!n3) {
              continue;
            }
            const s2 = n3.split(";");
            if (s2.length > 2) {
              throw o.badRequest(`Invalid ${r3.type} header`);
            }
            let f2 = s2[0].toLowerCase();
            if (!f2) {
              throw o.badRequest(`Invalid ${r3.type} header`);
            }
            if (r3.equivalents && r3.equivalents.has(f2)) {
              f2 = r3.equivalents.get(f2);
            }
            const l2 = { token: f2, pos: e4, q: 1 };
            if (t3 && a.has(f2)) {
              l2.pref = a.get(f2).pos;
            }
            c.add(l2.token);
            if (s2.length === 2) {
              const e5 = s2[1];
              const [t4, n4] = e5.split("=");
              if (!n4 || t4 !== "q" && t4 !== "Q") {
                throw o.badRequest(`Invalid ${r3.type} header`);
              }
              const a2 = parseFloat(n4);
              if (a2 === 0) {
                continue;
              }
              if (Number.isFinite(a2) && a2 <= 1 && a2 >= 1e-3) {
                l2.q = a2;
              }
            }
            u.push(l2);
          }
          u.sort(s.sort);
          const f = u.map((e4) => e4.token);
          if (r3.default && !c.has(r3.default)) {
            f.push(r3.default);
          }
          if (!t3 || !t3.length) {
            return f;
          }
          const l = [];
          for (const e4 of f) {
            if (e4 === "*") {
              for (const [e5, t4] of a) {
                if (!c.has(e5)) {
                  l.push(t4.orig);
                }
              }
            } else {
              const t4 = e4.toLowerCase();
              if (a.has(t4)) {
                l.push(a.get(t4).orig);
              }
            }
          }
          return l;
        };
        s.sort = function(e3, t3) {
          const r3 = -1;
          const n2 = 1;
          if (t3.q !== e3.q) {
            return t3.q - e3.q;
          }
          if (t3.pref !== e3.pref) {
            if (e3.pref === void 0) {
              return n2;
            }
            if (t3.pref === void 0) {
              return r3;
            }
            return e3.pref - t3.pref;
          }
          return e3.pos - t3.pos;
        };
      }, 538: (e2, t2, r2) => {
        const n = r2(298);
        const o = r2(305);
        const s = { options: { charset: { type: "accept-charset" }, encoding: { type: "accept-encoding", default: "identity", equivalents: /* @__PURE__ */ new Map([["x-compress", "compress"], ["x-gzip", "gzip"]]) }, language: { type: "accept-language", prefixMatch: true } } };
        for (const e3 in s.options) {
          t2[e3] = (t3, r3) => n.selection(t3, r3, s.options[e3]);
          t2[`${e3}s`] = (t3, r3) => n.selections(t3, r3, s.options[e3]);
        }
        t2.mediaType = (e3, t3) => o.selection(e3, t3);
        t2.mediaTypes = (e3, t3) => o.selections(e3, t3);
        t2.parseAll = function(e3) {
          return { charsets: t2.charsets(e3["accept-charset"]), encodings: t2.encodings(e3["accept-encoding"]), languages: t2.languages(e3["accept-language"]), mediaTypes: t2.mediaTypes(e3.accept) };
        };
      }, 305: (e2, t2, r2) => {
        const n = r2(135);
        const o = r2(749);
        const s = {};
        t2.selection = function(e3, r3) {
          const n2 = t2.selections(e3, r3);
          return n2.length ? n2[0] : "";
        };
        t2.selections = function(e3, t3) {
          n.assert(!t3 || Array.isArray(t3), "Preferences must be an array");
          return s.parse(e3, t3);
        };
        s.validMediaRx = /^(?:\*\/\*)|(?:[\w\!#\$%&'\*\+\-\.\^`\|~]+\/\*)|(?:[\w\!#\$%&'\*\+\-\.\^`\|~]+\/[\w\!#\$%&'\*\+\-\.\^`\|~]+)$/;
        s.parse = function(e3, t3) {
          const { header: r3, quoted: n2 } = s.normalize(e3);
          const a = r3.split(",");
          const i = [];
          const u = {};
          for (let e4 = 0; e4 < a.length; ++e4) {
            const t4 = a[e4];
            if (!t4) {
              continue;
            }
            const r4 = t4.split(";");
            const c = r4.shift().toLowerCase();
            if (!s.validMediaRx.test(c)) {
              continue;
            }
            const f = { token: c, params: {}, exts: {}, pos: e4 };
            let l = "params";
            for (const e5 of r4) {
              const t5 = e5.split("=");
              if (t5.length !== 2 || !t5[1]) {
                throw o.badRequest(`Invalid accept header`);
              }
              const r5 = t5[0];
              let s2 = t5[1];
              if (r5 === "q" || r5 === "Q") {
                l = "exts";
                s2 = parseFloat(s2);
                if (!Number.isFinite(s2) || s2 > 1 || s2 < 1e-3 && s2 !== 0) {
                  s2 = 1;
                }
                f.q = s2;
              } else {
                if (s2[0] === '"') {
                  s2 = `"${n2[s2]}"`;
                }
                f[l][t5[0]] = s2;
              }
            }
            const p = Object.keys(f.params);
            f.original = [""].concat(p.map((e5) => `${e5}=${f.params[e5]}`)).join(";");
            f.specificity = p.length;
            if (f.q === void 0) {
              f.q = 1;
            }
            const d = f.token.split("/");
            f.type = d[0];
            f.subtype = d[1];
            u[f.token] = f;
            if (f.q) {
              i.push(f);
            }
          }
          i.sort(s.sort);
          return s.preferences(u, i, t3);
        };
        s.normalize = function(e3) {
          e3 = e3 || "*/*";
          const t3 = { header: e3, quoted: {} };
          if (e3.includes('"')) {
            let r3 = 0;
            t3.header = e3.replace(/="([^"]*)"/g, (e4, n2) => {
              const o2 = '"' + ++r3;
              t3.quoted[o2] = n2;
              return "=" + o2;
            });
          }
          t3.header = t3.header.replace(/[ \t]/g, "");
          return t3;
        };
        s.sort = function(e3, t3) {
          if (t3.q !== e3.q) {
            return t3.q - e3.q;
          }
          if (e3.type !== t3.type) {
            return s.innerSort(e3, t3, "type");
          }
          if (e3.subtype !== t3.subtype) {
            return s.innerSort(e3, t3, "subtype");
          }
          if (e3.specificity !== t3.specificity) {
            return t3.specificity - e3.specificity;
          }
          return e3.pos - t3.pos;
        };
        s.innerSort = function(e3, t3, r3) {
          const n2 = -1;
          const o2 = 1;
          if (e3[r3] === "*") {
            return o2;
          }
          if (t3[r3] === "*") {
            return n2;
          }
          return e3[r3] < t3[r3] ? n2 : o2;
        };
        s.preferences = function(e3, t3, r3) {
          if (!r3 || !r3.length) {
            return t3.map((e4) => e4.token + e4.original);
          }
          const o2 = /* @__PURE__ */ Object.create(null);
          const s2 = /* @__PURE__ */ Object.create(null);
          let a = false;
          for (const e4 of r3) {
            const t4 = e4.toLowerCase();
            s2[t4] = e4;
            const r4 = t4.split("/");
            const i2 = r4[0];
            const u = r4[1];
            if (i2 === "*") {
              n.assert(u === "*", "Invalid media type preference contains wildcard type with a subtype");
              a = true;
              continue;
            }
            o2[i2] = o2[i2] || /* @__PURE__ */ Object.create(null);
            o2[i2][u] = e4;
          }
          const i = [];
          for (const r4 of t3) {
            const t4 = r4.token;
            const { type: n2, subtype: u } = e3[t4];
            const c = o2[n2];
            if (n2 === "*") {
              for (const t5 of Object.keys(s2)) {
                if (!e3[t5]) {
                  i.push(s2[t5]);
                }
              }
              if (a) {
                i.push("*/*");
              }
              continue;
            }
            if (a) {
              i.push((s2[t4] || t4) + r4.original);
              continue;
            }
            if (u !== "*") {
              const e4 = s2[t4];
              if (e4 || c && c["*"]) {
                i.push((e4 || t4) + r4.original);
              }
              continue;
            }
            if (c) {
              for (const t5 of Object.keys(c)) {
                if (!e3[`${n2}/${t5}`]) {
                  i.push(c[t5]);
                }
              }
            }
          }
          return i;
        };
      }, 749: (e2, t2, r2) => {
        const n = r2(135);
        const o = { codes: /* @__PURE__ */ new Map([[100, "Continue"], [101, "Switching Protocols"], [102, "Processing"], [200, "OK"], [201, "Created"], [202, "Accepted"], [203, "Non-Authoritative Information"], [204, "No Content"], [205, "Reset Content"], [206, "Partial Content"], [207, "Multi-Status"], [300, "Multiple Choices"], [301, "Moved Permanently"], [302, "Moved Temporarily"], [303, "See Other"], [304, "Not Modified"], [305, "Use Proxy"], [307, "Temporary Redirect"], [400, "Bad Request"], [401, "Unauthorized"], [402, "Payment Required"], [403, "Forbidden"], [404, "Not Found"], [405, "Method Not Allowed"], [406, "Not Acceptable"], [407, "Proxy Authentication Required"], [408, "Request Time-out"], [409, "Conflict"], [410, "Gone"], [411, "Length Required"], [412, "Precondition Failed"], [413, "Request Entity Too Large"], [414, "Request-URI Too Large"], [415, "Unsupported Media Type"], [416, "Requested Range Not Satisfiable"], [417, "Expectation Failed"], [418, "I'm a teapot"], [422, "Unprocessable Entity"], [423, "Locked"], [424, "Failed Dependency"], [425, "Too Early"], [426, "Upgrade Required"], [428, "Precondition Required"], [429, "Too Many Requests"], [431, "Request Header Fields Too Large"], [451, "Unavailable For Legal Reasons"], [500, "Internal Server Error"], [501, "Not Implemented"], [502, "Bad Gateway"], [503, "Service Unavailable"], [504, "Gateway Time-out"], [505, "HTTP Version Not Supported"], [506, "Variant Also Negotiates"], [507, "Insufficient Storage"], [509, "Bandwidth Limit Exceeded"], [510, "Not Extended"], [511, "Network Authentication Required"]]) };
        t2.Boom = class extends Error {
          constructor(e3, r3 = {}) {
            if (e3 instanceof Error) {
              return t2.boomify(n.clone(e3), r3);
            }
            const { statusCode: s = 500, data: a = null, ctor: i = t2.Boom } = r3;
            const u = new Error(e3 ? e3 : void 0);
            Error.captureStackTrace(u, i);
            u.data = a;
            const c = o.initialize(u, s);
            Object.defineProperty(c, "typeof", { value: i });
            if (r3.decorate) {
              Object.assign(c, r3.decorate);
            }
            return c;
          }
          static [Symbol.hasInstance](e3) {
            return t2.isBoom(e3);
          }
        };
        t2.isBoom = function(e3, t3) {
          return e3 instanceof Error && !!e3.isBoom && (!t3 || e3.output.statusCode === t3);
        };
        t2.boomify = function(e3, t3) {
          n.assert(e3 instanceof Error, "Cannot wrap non-Error object");
          t3 = t3 || {};
          if (t3.data !== void 0) {
            e3.data = t3.data;
          }
          if (t3.decorate) {
            Object.assign(e3, t3.decorate);
          }
          if (!e3.isBoom) {
            return o.initialize(e3, t3.statusCode || 500, t3.message);
          }
          if (t3.override === false || !t3.statusCode && !t3.message) {
            return e3;
          }
          return o.initialize(e3, t3.statusCode || e3.output.statusCode, t3.message);
        };
        t2.badRequest = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 400, data: r3, ctor: t2.badRequest });
        };
        t2.unauthorized = function(e3, r3, o2) {
          const s = new t2.Boom(e3, { statusCode: 401, ctor: t2.unauthorized });
          if (!r3) {
            return s;
          }
          if (typeof r3 !== "string") {
            s.output.headers["WWW-Authenticate"] = r3.join(", ");
            return s;
          }
          let a = `${r3}`;
          if (o2 || e3) {
            s.output.payload.attributes = {};
          }
          if (o2) {
            if (typeof o2 === "string") {
              a += " " + n.escapeHeaderAttribute(o2);
              s.output.payload.attributes = o2;
            } else {
              a += " " + Object.keys(o2).map((e4) => {
                let t3 = o2[e4];
                if (t3 === null || t3 === void 0) {
                  t3 = "";
                }
                s.output.payload.attributes[e4] = t3;
                return `${e4}="${n.escapeHeaderAttribute(t3.toString())}"`;
              }).join(", ");
            }
          }
          if (e3) {
            if (o2) {
              a += ",";
            }
            a += ` error="${n.escapeHeaderAttribute(e3)}"`;
            s.output.payload.attributes.error = e3;
          } else {
            s.isMissing = true;
          }
          s.output.headers["WWW-Authenticate"] = a;
          return s;
        };
        t2.paymentRequired = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 402, data: r3, ctor: t2.paymentRequired });
        };
        t2.forbidden = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 403, data: r3, ctor: t2.forbidden });
        };
        t2.notFound = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 404, data: r3, ctor: t2.notFound });
        };
        t2.methodNotAllowed = function(e3, r3, n2) {
          const o2 = new t2.Boom(e3, { statusCode: 405, data: r3, ctor: t2.methodNotAllowed });
          if (typeof n2 === "string") {
            n2 = [n2];
          }
          if (Array.isArray(n2)) {
            o2.output.headers.Allow = n2.join(", ");
          }
          return o2;
        };
        t2.notAcceptable = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 406, data: r3, ctor: t2.notAcceptable });
        };
        t2.proxyAuthRequired = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 407, data: r3, ctor: t2.proxyAuthRequired });
        };
        t2.clientTimeout = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 408, data: r3, ctor: t2.clientTimeout });
        };
        t2.conflict = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 409, data: r3, ctor: t2.conflict });
        };
        t2.resourceGone = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 410, data: r3, ctor: t2.resourceGone });
        };
        t2.lengthRequired = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 411, data: r3, ctor: t2.lengthRequired });
        };
        t2.preconditionFailed = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 412, data: r3, ctor: t2.preconditionFailed });
        };
        t2.entityTooLarge = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 413, data: r3, ctor: t2.entityTooLarge });
        };
        t2.uriTooLong = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 414, data: r3, ctor: t2.uriTooLong });
        };
        t2.unsupportedMediaType = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 415, data: r3, ctor: t2.unsupportedMediaType });
        };
        t2.rangeNotSatisfiable = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 416, data: r3, ctor: t2.rangeNotSatisfiable });
        };
        t2.expectationFailed = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 417, data: r3, ctor: t2.expectationFailed });
        };
        t2.teapot = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 418, data: r3, ctor: t2.teapot });
        };
        t2.badData = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 422, data: r3, ctor: t2.badData });
        };
        t2.locked = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 423, data: r3, ctor: t2.locked });
        };
        t2.failedDependency = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 424, data: r3, ctor: t2.failedDependency });
        };
        t2.tooEarly = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 425, data: r3, ctor: t2.tooEarly });
        };
        t2.preconditionRequired = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 428, data: r3, ctor: t2.preconditionRequired });
        };
        t2.tooManyRequests = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 429, data: r3, ctor: t2.tooManyRequests });
        };
        t2.illegal = function(e3, r3) {
          return new t2.Boom(e3, { statusCode: 451, data: r3, ctor: t2.illegal });
        };
        t2.internal = function(e3, r3, n2 = 500) {
          return o.serverError(e3, r3, n2, t2.internal);
        };
        t2.notImplemented = function(e3, r3) {
          return o.serverError(e3, r3, 501, t2.notImplemented);
        };
        t2.badGateway = function(e3, r3) {
          return o.serverError(e3, r3, 502, t2.badGateway);
        };
        t2.serverUnavailable = function(e3, r3) {
          return o.serverError(e3, r3, 503, t2.serverUnavailable);
        };
        t2.gatewayTimeout = function(e3, r3) {
          return o.serverError(e3, r3, 504, t2.gatewayTimeout);
        };
        t2.badImplementation = function(e3, r3) {
          const n2 = o.serverError(e3, r3, 500, t2.badImplementation);
          n2.isDeveloperError = true;
          return n2;
        };
        o.initialize = function(e3, t3, r3) {
          const s = parseInt(t3, 10);
          n.assert(!isNaN(s) && s >= 400, "First argument must be a number (400+):", t3);
          e3.isBoom = true;
          e3.isServer = s >= 500;
          if (!e3.hasOwnProperty("data")) {
            e3.data = null;
          }
          e3.output = { statusCode: s, payload: {}, headers: {} };
          Object.defineProperty(e3, "reformat", { value: o.reformat });
          if (!r3 && !e3.message) {
            e3.reformat();
            r3 = e3.output.payload.error;
          }
          if (r3) {
            const t4 = Object.getOwnPropertyDescriptor(e3, "message") || Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e3), "message");
            n.assert(!t4 || t4.configurable && !t4.get, "The error is not compatible with boom");
            e3.message = r3 + (e3.message ? ": " + e3.message : "");
            e3.output.payload.message = e3.message;
          }
          e3.reformat();
          return e3;
        };
        o.reformat = function(e3 = false) {
          this.output.payload.statusCode = this.output.statusCode;
          this.output.payload.error = o.codes.get(this.output.statusCode) || "Unknown";
          if (this.output.statusCode === 500 && e3 !== true) {
            this.output.payload.message = "An internal server error occurred";
          } else if (this.message) {
            this.output.payload.message = this.message;
          }
        };
        o.serverError = function(e3, r3, n2, o2) {
          if (r3 instanceof Error && !r3.isBoom) {
            return t2.boomify(r3, { statusCode: n2, message: e3 });
          }
          return new t2.Boom(e3, { statusCode: n2, data: r3, ctor: o2 });
        };
      }, 181: (e2, t2, r2) => {
        const n = r2(498);
        const o = r2(920);
        const s = r2(89);
        const a = r2(938);
        const i = {};
        e2.exports = function(e3, t3, r3 = {}) {
          n(e3 && typeof e3 === "object", "Invalid defaults value: must be an object");
          n(!t3 || t3 === true || typeof t3 === "object", "Invalid source value: must be true, falsy or an object");
          n(typeof r3 === "object", "Invalid options: must be an object");
          if (!t3) {
            return null;
          }
          if (r3.shallow) {
            return i.applyToDefaultsWithShallow(e3, t3, r3);
          }
          const a2 = o(e3);
          if (t3 === true) {
            return a2;
          }
          const u = r3.nullOverride !== void 0 ? r3.nullOverride : false;
          return s(a2, t3, { nullOverride: u, mergeArrays: false });
        };
        i.applyToDefaultsWithShallow = function(e3, t3, r3) {
          const u = r3.shallow;
          n(Array.isArray(u), "Invalid keys");
          const c = /* @__PURE__ */ new Map();
          const f = t3 === true ? null : /* @__PURE__ */ new Set();
          for (let r4 of u) {
            r4 = Array.isArray(r4) ? r4 : r4.split(".");
            const n2 = a(e3, r4);
            if (n2 && typeof n2 === "object") {
              c.set(n2, f && a(t3, r4) || n2);
            } else if (f) {
              f.add(r4);
            }
          }
          const l = o(e3, {}, c);
          if (!f) {
            return l;
          }
          for (const e4 of f) {
            i.reachCopy(l, t3, e4);
          }
          return s(l, t3, { mergeArrays: false, nullOverride: false });
        };
        i.reachCopy = function(e3, t3, r3) {
          for (const e4 of r3) {
            if (!(e4 in t3)) {
              return;
            }
            t3 = t3[e4];
          }
          const n2 = t3;
          let o2 = e3;
          for (let e4 = 0; e4 < r3.length - 1; ++e4) {
            const t4 = r3[e4];
            if (typeof o2[t4] !== "object") {
              o2[t4] = {};
            }
            o2 = o2[t4];
          }
          o2[r3[r3.length - 1]] = n2;
        };
      }, 498: (e2, t2, r2) => {
        const n = r2(650);
        const o = {};
        e2.exports = function(e3, ...t3) {
          if (e3) {
            return;
          }
          if (t3.length === 1 && t3[0] instanceof Error) {
            throw t3[0];
          }
          throw new n(t3);
        };
      }, 0: (e2) => {
        const t2 = {};
        e2.exports = t2.Bench = class {
          constructor() {
            this.ts = 0;
            this.reset();
          }
          reset() {
            this.ts = t2.Bench.now();
          }
          elapsed() {
            return t2.Bench.now() - this.ts;
          }
          static now() {
            const e3 = process.hrtime();
            return e3[0] * 1e3 + e3[1] / 1e6;
          }
        };
      }, 761: (e2, t2, r2) => {
        const n = r2(908);
        const o = {};
        e2.exports = function() {
          return new Promise(n);
        };
      }, 920: (e2, t2, r2) => {
        const n = r2(938);
        const o = r2(520);
        const s = r2(932);
        const a = { needsProtoHack: /* @__PURE__ */ new Set([o.set, o.map, o.weakSet, o.weakMap]) };
        e2.exports = a.clone = function(e3, t3 = {}, r3 = null) {
          if (typeof e3 !== "object" || e3 === null) {
            return e3;
          }
          let n2 = a.clone;
          let i = r3;
          if (t3.shallow) {
            if (t3.shallow !== true) {
              return a.cloneWithShallow(e3, t3);
            }
            n2 = (e4) => e4;
          } else if (i) {
            const t4 = i.get(e3);
            if (t4) {
              return t4;
            }
          } else {
            i = /* @__PURE__ */ new Map();
          }
          const u = o.getInternalProto(e3);
          if (u === o.buffer) {
            return Buffer && Buffer.from(e3);
          }
          if (u === o.date) {
            return new Date(e3.getTime());
          }
          if (u === o.regex) {
            return new RegExp(e3);
          }
          const c = a.base(e3, u, t3);
          if (c === e3) {
            return e3;
          }
          if (i) {
            i.set(e3, c);
          }
          if (u === o.set) {
            for (const r4 of e3) {
              c.add(n2(r4, t3, i));
            }
          } else if (u === o.map) {
            for (const [r4, o2] of e3) {
              c.set(r4, n2(o2, t3, i));
            }
          }
          const f = s.keys(e3, t3);
          for (const r4 of f) {
            if (r4 === "__proto__") {
              continue;
            }
            if (u === o.array && r4 === "length") {
              c.length = e3.length;
              continue;
            }
            const s2 = Object.getOwnPropertyDescriptor(e3, r4);
            if (s2) {
              if (s2.get || s2.set) {
                Object.defineProperty(c, r4, s2);
              } else if (s2.enumerable) {
                c[r4] = n2(e3[r4], t3, i);
              } else {
                Object.defineProperty(c, r4, { enumerable: false, writable: true, configurable: true, value: n2(e3[r4], t3, i) });
              }
            } else {
              Object.defineProperty(c, r4, { enumerable: true, writable: true, configurable: true, value: n2(e3[r4], t3, i) });
            }
          }
          return c;
        };
        a.cloneWithShallow = function(e3, t3) {
          const r3 = t3.shallow;
          t3 = Object.assign({}, t3);
          t3.shallow = false;
          const o2 = /* @__PURE__ */ new Map();
          for (const t4 of r3) {
            const r4 = n(e3, t4);
            if (typeof r4 === "object" || typeof r4 === "function") {
              o2.set(r4, r4);
            }
          }
          return a.clone(e3, t3, o2);
        };
        a.base = function(e3, t3, r3) {
          if (r3.prototype === false) {
            if (a.needsProtoHack.has(t3)) {
              return new t3.constructor();
            }
            return t3 === o.array ? [] : {};
          }
          const n2 = Object.getPrototypeOf(e3);
          if (n2 && n2.isImmutable) {
            return e3;
          }
          if (t3 === o.array) {
            const e4 = [];
            if (n2 !== t3) {
              Object.setPrototypeOf(e4, n2);
            }
            return e4;
          }
          if (a.needsProtoHack.has(t3)) {
            const e4 = new n2.constructor();
            if (n2 !== t3) {
              Object.setPrototypeOf(e4, n2);
            }
            return e4;
          }
          return Object.create(n2);
        };
      }, 101: (e2, t2, r2) => {
        const n = r2(498);
        const o = r2(17);
        const s = r2(212);
        const a = r2(932);
        const i = {};
        e2.exports = function(e3, t3, r3 = {}) {
          if (typeof t3 !== "object") {
            t3 = [t3];
          }
          n(!Array.isArray(t3) || t3.length, "Values array cannot be empty");
          if (typeof e3 === "string") {
            return i.string(e3, t3, r3);
          }
          if (Array.isArray(e3)) {
            return i.array(e3, t3, r3);
          }
          n(typeof e3 === "object", "Reference must be string or an object");
          return i.object(e3, t3, r3);
        };
        i.array = function(e3, t3, r3) {
          if (!Array.isArray(t3)) {
            t3 = [t3];
          }
          if (!e3.length) {
            return false;
          }
          if (r3.only && r3.once && e3.length !== t3.length) {
            return false;
          }
          let n2;
          const o2 = /* @__PURE__ */ new Map();
          for (const e4 of t3) {
            if (!r3.deep || !e4 || typeof e4 !== "object") {
              const t4 = o2.get(e4);
              if (t4) {
                ++t4.allowed;
              } else {
                o2.set(e4, { allowed: 1, hits: 0 });
              }
            } else {
              n2 = n2 || i.compare(r3);
              let t4 = false;
              for (const [r4, s3] of o2.entries()) {
                if (n2(r4, e4)) {
                  ++s3.allowed;
                  t4 = true;
                  break;
                }
              }
              if (!t4) {
                o2.set(e4, { allowed: 1, hits: 0 });
              }
            }
          }
          let s2 = 0;
          for (const t4 of e3) {
            let e4;
            if (!r3.deep || !t4 || typeof t4 !== "object") {
              e4 = o2.get(t4);
            } else {
              n2 = n2 || i.compare(r3);
              for (const [r4, s3] of o2.entries()) {
                if (n2(r4, t4)) {
                  e4 = s3;
                  break;
                }
              }
            }
            if (e4) {
              ++e4.hits;
              ++s2;
              if (r3.once && e4.hits > e4.allowed) {
                return false;
              }
            }
          }
          if (r3.only && s2 !== e3.length) {
            return false;
          }
          for (const e4 of o2.values()) {
            if (e4.hits === e4.allowed) {
              continue;
            }
            if (e4.hits < e4.allowed && !r3.part) {
              return false;
            }
          }
          return !!s2;
        };
        i.object = function(e3, t3, r3) {
          n(r3.once === void 0, "Cannot use option once with object");
          const o2 = a.keys(e3, r3);
          if (!o2.length) {
            return false;
          }
          if (Array.isArray(t3)) {
            return i.array(o2, t3, r3);
          }
          const s2 = Object.getOwnPropertySymbols(t3).filter((e4) => t3.propertyIsEnumerable(e4));
          const u = [...Object.keys(t3), ...s2];
          const c = i.compare(r3);
          const f = new Set(u);
          for (const n2 of o2) {
            if (!f.has(n2)) {
              if (r3.only) {
                return false;
              }
              continue;
            }
            if (!c(t3[n2], e3[n2])) {
              return false;
            }
            f.delete(n2);
          }
          if (f.size) {
            return r3.part ? f.size < u.length : false;
          }
          return true;
        };
        i.string = function(e3, t3, r3) {
          if (e3 === "") {
            return t3.length === 1 && t3[0] === "" || !r3.once && !t3.some((e4) => e4 !== "");
          }
          const o2 = /* @__PURE__ */ new Map();
          const a2 = [];
          for (const e4 of t3) {
            n(typeof e4 === "string", "Cannot compare string reference to non-string value");
            if (e4) {
              const t4 = o2.get(e4);
              if (t4) {
                ++t4.allowed;
              } else {
                o2.set(e4, { allowed: 1, hits: 0 });
                a2.push(s(e4));
              }
            } else if (r3.once || r3.only) {
              return false;
            }
          }
          if (!a2.length) {
            return true;
          }
          const i2 = new RegExp(`(${a2.join("|")})`, "g");
          const u = e3.replace(i2, (e4, t4) => {
            ++o2.get(t4).hits;
            return "";
          });
          if (r3.only && u) {
            return false;
          }
          let c = false;
          for (const e4 of o2.values()) {
            if (e4.hits) {
              c = true;
            }
            if (e4.hits === e4.allowed) {
              continue;
            }
            if (e4.hits < e4.allowed && !r3.part) {
              return false;
            }
            if (r3.once) {
              return false;
            }
          }
          return !!c;
        };
        i.compare = function(e3) {
          if (!e3.deep) {
            return i.shallow;
          }
          const t3 = e3.only !== void 0;
          const r3 = e3.part !== void 0;
          const n2 = { prototype: t3 ? e3.only : r3 ? !e3.part : false, part: t3 ? !e3.only : r3 ? e3.part : false };
          return (e4, t4) => o(e4, t4, n2);
        };
        i.shallow = function(e3, t3) {
          return e3 === t3;
        };
      }, 17: (e2, t2, r2) => {
        const n = r2(520);
        const o = { mismatched: null };
        e2.exports = function(e3, t3, r3) {
          r3 = Object.assign({ prototype: true }, r3);
          return !!o.isDeepEqual(e3, t3, r3, []);
        };
        o.isDeepEqual = function(e3, t3, r3, s) {
          if (e3 === t3) {
            return e3 !== 0 || 1 / e3 === 1 / t3;
          }
          const a = typeof e3;
          if (a !== typeof t3) {
            return false;
          }
          if (e3 === null || t3 === null) {
            return false;
          }
          if (a === "function") {
            if (!r3.deepFunction || e3.toString() !== t3.toString()) {
              return false;
            }
          } else if (a !== "object") {
            return e3 !== e3 && t3 !== t3;
          }
          const i = o.getSharedType(e3, t3, !!r3.prototype);
          switch (i) {
            case n.buffer:
              return Buffer && Buffer.prototype.equals.call(e3, t3);
            case n.promise:
              return e3 === t3;
            case n.regex:
              return e3.toString() === t3.toString();
            case o.mismatched:
              return false;
          }
          for (let r4 = s.length - 1; r4 >= 0; --r4) {
            if (s[r4].isSame(e3, t3)) {
              return true;
            }
          }
          s.push(new o.SeenEntry(e3, t3));
          try {
            return !!o.isDeepEqualObj(i, e3, t3, r3, s);
          } finally {
            s.pop();
          }
        };
        o.getSharedType = function(e3, t3, r3) {
          if (r3) {
            if (Object.getPrototypeOf(e3) !== Object.getPrototypeOf(t3)) {
              return o.mismatched;
            }
            return n.getInternalProto(e3);
          }
          const s = n.getInternalProto(e3);
          if (s !== n.getInternalProto(t3)) {
            return o.mismatched;
          }
          return s;
        };
        o.valueOf = function(e3) {
          const t3 = e3.valueOf;
          if (t3 === void 0) {
            return e3;
          }
          try {
            return t3.call(e3);
          } catch (e4) {
            return e4;
          }
        };
        o.hasOwnEnumerableProperty = function(e3, t3) {
          return Object.prototype.propertyIsEnumerable.call(e3, t3);
        };
        o.isSetSimpleEqual = function(e3, t3) {
          for (const r3 of Set.prototype.values.call(e3)) {
            if (!Set.prototype.has.call(t3, r3)) {
              return false;
            }
          }
          return true;
        };
        o.isDeepEqualObj = function(e3, t3, r3, s, a) {
          const { isDeepEqual: i, valueOf: u, hasOwnEnumerableProperty: c } = o;
          const { keys: f, getOwnPropertySymbols: l } = Object;
          if (e3 === n.array) {
            if (s.part) {
              for (const e4 of t3) {
                for (const t4 of r3) {
                  if (i(e4, t4, s, a)) {
                    return true;
                  }
                }
              }
            } else {
              if (t3.length !== r3.length) {
                return false;
              }
              for (let e4 = 0; e4 < t3.length; ++e4) {
                if (!i(t3[e4], r3[e4], s, a)) {
                  return false;
                }
              }
              return true;
            }
          } else if (e3 === n.set) {
            if (t3.size !== r3.size) {
              return false;
            }
            if (!o.isSetSimpleEqual(t3, r3)) {
              const e4 = new Set(Set.prototype.values.call(r3));
              for (const r4 of Set.prototype.values.call(t3)) {
                if (e4.delete(r4)) {
                  continue;
                }
                let t4 = false;
                for (const n2 of e4) {
                  if (i(r4, n2, s, a)) {
                    e4.delete(n2);
                    t4 = true;
                    break;
                  }
                }
                if (!t4) {
                  return false;
                }
              }
            }
          } else if (e3 === n.map) {
            if (t3.size !== r3.size) {
              return false;
            }
            for (const [e4, n2] of Map.prototype.entries.call(t3)) {
              if (n2 === void 0 && !Map.prototype.has.call(r3, e4)) {
                return false;
              }
              if (!i(n2, Map.prototype.get.call(r3, e4), s, a)) {
                return false;
              }
            }
          } else if (e3 === n.error) {
            if (t3.name !== r3.name || t3.message !== r3.message) {
              return false;
            }
          }
          const p = u(t3);
          const d = u(r3);
          if ((t3 !== p || r3 !== d) && !i(p, d, s, a)) {
            return false;
          }
          const y = f(t3);
          if (!s.part && y.length !== f(r3).length && !s.skip) {
            return false;
          }
          let g = 0;
          for (const e4 of y) {
            if (s.skip && s.skip.includes(e4)) {
              if (r3[e4] === void 0) {
                ++g;
              }
              continue;
            }
            if (!c(r3, e4)) {
              return false;
            }
            if (!i(t3[e4], r3[e4], s, a)) {
              return false;
            }
          }
          if (!s.part && y.length - g !== f(r3).length) {
            return false;
          }
          if (s.symbols !== false) {
            const e4 = l(t3);
            const n2 = new Set(l(r3));
            for (const o2 of e4) {
              if (!s.skip || !s.skip.includes(o2)) {
                if (c(t3, o2)) {
                  if (!c(r3, o2)) {
                    return false;
                  }
                  if (!i(t3[o2], r3[o2], s, a)) {
                    return false;
                  }
                } else if (c(r3, o2)) {
                  return false;
                }
              }
              n2.delete(o2);
            }
            for (const e5 of n2) {
              if (c(r3, e5)) {
                return false;
              }
            }
          }
          return true;
        };
        o.SeenEntry = class {
          constructor(e3, t3) {
            this.obj = e3;
            this.ref = t3;
          }
          isSame(e3, t3) {
            return this.obj === e3 && this.ref === t3;
          }
        };
      }, 650: (e2, t2, r2) => {
        const n = r2(710);
        const o = {};
        e2.exports = class extends Error {
          constructor(e3) {
            const r3 = e3.filter((e4) => e4 !== "").map((e4) => typeof e4 === "string" ? e4 : e4 instanceof Error ? e4.message : n(e4));
            super(r3.join(" ") || "Unknown error");
            if (typeof Error.captureStackTrace === "function") {
              Error.captureStackTrace(this, t2.assert);
            }
          }
        };
      }, 401: (e2, t2, r2) => {
        const n = r2(498);
        const o = {};
        e2.exports = function(e3) {
          n(/^[ \w\!#\$%&'\(\)\*\+,\-\.\/\:;<\=>\?@\[\]\^`\{\|\}~\"\\]*$/.test(e3), "Bad attribute value (" + e3 + ")");
          return e3.replace(/\\/g, "\\\\").replace(/\"/g, '\\"');
        };
      }, 682: (e2) => {
        const t2 = {};
        e2.exports = function(e3) {
          if (!e3) {
            return "";
          }
          let r2 = "";
          for (let n = 0; n < e3.length; ++n) {
            const o = e3.charCodeAt(n);
            if (t2.isSafe(o)) {
              r2 += e3[n];
            } else {
              r2 += t2.escapeHtmlChar(o);
            }
          }
          return r2;
        };
        t2.escapeHtmlChar = function(e3) {
          const r2 = t2.namedHtml[e3];
          if (typeof r2 !== "undefined") {
            return r2;
          }
          if (e3 >= 256) {
            return "&#" + e3 + ";";
          }
          const n = e3.toString(16).padStart(2, "0");
          return `&#x${n};`;
        };
        t2.isSafe = function(e3) {
          return typeof t2.safeCharCodes[e3] !== "undefined";
        };
        t2.namedHtml = { 38: "&amp;", 60: "&lt;", 62: "&gt;", 34: "&quot;", 160: "&nbsp;", 162: "&cent;", 163: "&pound;", 164: "&curren;", 169: "&copy;", 174: "&reg;" };
        t2.safeCharCodes = function() {
          const e3 = {};
          for (let t3 = 32; t3 < 123; ++t3) {
            if (t3 >= 97 || t3 >= 65 && t3 <= 90 || t3 >= 48 && t3 <= 57 || t3 === 32 || t3 === 46 || t3 === 44 || t3 === 45 || t3 === 58 || t3 === 95) {
              e3[t3] = null;
            }
          }
          return e3;
        }();
      }, 303: (e2) => {
        const t2 = {};
        e2.exports = function(e3) {
          if (!e3) {
            return "";
          }
          const t3 = 60;
          const r2 = 62;
          const n = 38;
          const o = 8232;
          let s;
          return e3.replace(/[<>&\u2028\u2029]/g, (e4) => {
            s = e4.charCodeAt(0);
            if (s === t3) {
              return "\\u003c";
            }
            if (s === r2) {
              return "\\u003e";
            }
            if (s === n) {
              return "\\u0026";
            }
            if (s === o) {
              return "\\u2028";
            }
            return "\\u2029";
          });
        };
      }, 212: (e2) => {
        const t2 = {};
        e2.exports = function(e3) {
          return e3.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g, "\\$&");
        };
      }, 385: (e2) => {
        const t2 = {};
        e2.exports = t2.flatten = function(e3, r2) {
          const n = r2 || [];
          for (let r3 = 0; r3 < e3.length; ++r3) {
            if (Array.isArray(e3[r3])) {
              t2.flatten(e3[r3], n);
            } else {
              n.push(e3[r3]);
            }
          }
          return n;
        };
      }, 908: (e2) => {
        const t2 = {};
        e2.exports = function() {
        };
      }, 135: (e2, t2, r2) => {
        const n = {};
        e2.exports = { applyToDefaults: r2(181), assert: r2(498), Bench: r2(0), block: r2(761), clone: r2(920), contain: r2(101), deepEqual: r2(17), Error: r2(650), escapeHeaderAttribute: r2(401), escapeHtml: r2(682), escapeJson: r2(303), escapeRegex: r2(212), flatten: r2(385), ignore: r2(908), intersect: r2(332), isPromise: r2(539), merge: r2(89), once: r2(246), reach: r2(938), reachTemplate: r2(768), stringify: r2(710), wait: r2(421) };
      }, 332: (e2) => {
        const t2 = {};
        e2.exports = function(e3, r2, n = {}) {
          if (!e3 || !r2) {
            return n.first ? null : [];
          }
          const o = [];
          const s = Array.isArray(e3) ? new Set(e3) : e3;
          const a = /* @__PURE__ */ new Set();
          for (const e4 of r2) {
            if (t2.has(s, e4) && !a.has(e4)) {
              if (n.first) {
                return e4;
              }
              o.push(e4);
              a.add(e4);
            }
          }
          return n.first ? null : o;
        };
        t2.has = function(e3, t3) {
          if (typeof e3.has === "function") {
            return e3.has(t3);
          }
          return e3[t3] !== void 0;
        };
      }, 539: (e2) => {
        const t2 = {};
        e2.exports = function(e3) {
          return !!e3 && typeof e3.then === "function";
        };
      }, 89: (e2, t2, r2) => {
        const n = r2(498);
        const o = r2(920);
        const s = r2(932);
        const a = {};
        e2.exports = a.merge = function(e3, t3, r3) {
          n(e3 && typeof e3 === "object", "Invalid target value: must be an object");
          n(t3 === null || t3 === void 0 || typeof t3 === "object", "Invalid source value: must be null, undefined, or an object");
          if (!t3) {
            return e3;
          }
          r3 = Object.assign({ nullOverride: true, mergeArrays: true }, r3);
          if (Array.isArray(t3)) {
            n(Array.isArray(e3), "Cannot merge array onto an object");
            if (!r3.mergeArrays) {
              e3.length = 0;
            }
            for (let n2 = 0; n2 < t3.length; ++n2) {
              e3.push(o(t3[n2], { symbols: r3.symbols }));
            }
            return e3;
          }
          const i = s.keys(t3, r3);
          for (let n2 = 0; n2 < i.length; ++n2) {
            const s2 = i[n2];
            if (s2 === "__proto__" || !Object.prototype.propertyIsEnumerable.call(t3, s2)) {
              continue;
            }
            const u = t3[s2];
            if (u && typeof u === "object") {
              if (e3[s2] === u) {
                continue;
              }
              if (!e3[s2] || typeof e3[s2] !== "object" || Array.isArray(e3[s2]) !== Array.isArray(u) || u instanceof Date || Buffer && Buffer.isBuffer(u) || u instanceof RegExp) {
                e3[s2] = o(u, { symbols: r3.symbols });
              } else {
                a.merge(e3[s2], u, r3);
              }
            } else {
              if (u !== null && u !== void 0) {
                e3[s2] = u;
              } else if (r3.nullOverride) {
                e3[s2] = u;
              }
            }
          }
          return e3;
        };
      }, 246: (e2) => {
        const t2 = {};
        e2.exports = function(e3) {
          if (e3._hoekOnce) {
            return e3;
          }
          let t3 = false;
          const wrapped = function(...r2) {
            if (!t3) {
              t3 = true;
              e3(...r2);
            }
          };
          wrapped._hoekOnce = true;
          return wrapped;
        };
      }, 938: (e2, t2, r2) => {
        const n = r2(498);
        const o = {};
        e2.exports = function(e3, t3, r3) {
          if (t3 === false || t3 === null || t3 === void 0) {
            return e3;
          }
          r3 = r3 || {};
          if (typeof r3 === "string") {
            r3 = { separator: r3 };
          }
          const s = Array.isArray(t3);
          n(!s || !r3.separator, "Separator option no valid for array-based chain");
          const a = s ? t3 : t3.split(r3.separator || ".");
          let i = e3;
          for (let e4 = 0; e4 < a.length; ++e4) {
            let s2 = a[e4];
            const u = r3.iterables && o.iterables(i);
            if (Array.isArray(i) || u === "set") {
              const e5 = Number(s2);
              if (Number.isInteger(e5)) {
                s2 = e5 < 0 ? i.length + e5 : e5;
              }
            }
            if (!i || typeof i === "function" && r3.functions === false || !u && i[s2] === void 0) {
              n(!r3.strict || e4 + 1 === a.length, "Missing segment", s2, "in reach path ", t3);
              n(typeof i === "object" || r3.functions === true || typeof i !== "function", "Invalid segment", s2, "in reach path ", t3);
              i = r3.default;
              break;
            }
            if (!u) {
              i = i[s2];
            } else if (u === "set") {
              i = [...i][s2];
            } else {
              i = i.get(s2);
            }
          }
          return i;
        };
        o.iterables = function(e3) {
          if (e3 instanceof Set) {
            return "set";
          }
          if (e3 instanceof Map) {
            return "map";
          }
        };
      }, 768: (e2, t2, r2) => {
        const n = r2(938);
        const o = {};
        e2.exports = function(e3, t3, r3) {
          return t3.replace(/{([^}]+)}/g, (t4, o2) => {
            const s = n(e3, o2, r3);
            return s === void 0 || s === null ? "" : s;
          });
        };
      }, 710: (e2) => {
        const t2 = {};
        e2.exports = function(...e3) {
          try {
            return JSON.stringify.apply(null, e3);
          } catch (e4) {
            return "[Cannot display object: " + e4.message + "]";
          }
        };
      }, 520: (e2, t2) => {
        const r2 = {};
        t2 = e2.exports = { array: Array.prototype, buffer: Buffer && Buffer.prototype, date: Date.prototype, error: Error.prototype, generic: Object.prototype, map: Map.prototype, promise: Promise.prototype, regex: RegExp.prototype, set: Set.prototype, weakMap: WeakMap.prototype, weakSet: WeakSet.prototype };
        r2.typeMap = /* @__PURE__ */ new Map([["[object Error]", t2.error], ["[object Map]", t2.map], ["[object Promise]", t2.promise], ["[object Set]", t2.set], ["[object WeakMap]", t2.weakMap], ["[object WeakSet]", t2.weakSet]]);
        t2.getInternalProto = function(e3) {
          if (Array.isArray(e3)) {
            return t2.array;
          }
          if (Buffer && e3 instanceof Buffer) {
            return t2.buffer;
          }
          if (e3 instanceof Date) {
            return t2.date;
          }
          if (e3 instanceof RegExp) {
            return t2.regex;
          }
          if (e3 instanceof Error) {
            return t2.error;
          }
          const n = Object.prototype.toString.call(e3);
          return r2.typeMap.get(n) || t2.generic;
        };
      }, 932: (e2, t2) => {
        const r2 = {};
        t2.keys = function(e3, t3 = {}) {
          return t3.symbols !== false ? Reflect.ownKeys(e3) : Object.getOwnPropertyNames(e3);
        };
      }, 421: (e2) => {
        const t2 = {};
        e2.exports = function(e3, t3) {
          if (typeof e3 !== "number" && e3 !== void 0) {
            throw new TypeError("Timeout must be a number");
          }
          return new Promise((r2) => setTimeout(r2, e3, t3));
        };
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var n = t[r2];
        if (n !== void 0) {
          return n.exports;
        }
        var o = t[r2] = { exports: {} };
        var s = true;
        try {
          e[r2](o, o.exports, __nccwpck_require__2);
          s = false;
        } finally {
          if (s) delete t[r2];
        }
        return o.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var r = __nccwpck_require__2(538);
      module2.exports = r;
    })();
  }
});

// browser-external:buffer
var require_buffer = __commonJS({
  "browser-external:buffer"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "buffer" has been externalized for browser compatibility. Cannot access "buffer.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/content-disposition/index.js
var require_content_disposition = __commonJS({
  "../../../node_modules/next/dist/compiled/content-disposition/index.js"(exports2, module2) {
    (() => {
      var e = { 934: (e2, r2, t2) => {
        "use strict";
        e2.exports = contentDisposition;
        e2.exports.parse = parse;
        var n = t2(17).basename;
        var a = t2(291).Buffer;
        var o = /[\x00-\x20"'()*,/:;<=>?@[\\\]{}\x7f]/g;
        var i = /%[0-9A-Fa-f]{2}/;
        var f = /%([0-9A-Fa-f]{2})/g;
        var u = /[^\x20-\x7e\xa0-\xff]/g;
        var s = /\\([\u0000-\u007f])/g;
        var p = /([\\"])/g;
        var l = /;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;
        var c = /^[\x20-\x7e\x80-\xff]+$/;
        var v = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/;
        var d = /^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;
        var x = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;
        function contentDisposition(e3, r3) {
          var t3 = r3 || {};
          var n2 = t3.type || "attachment";
          var a2 = createparams(e3, t3.fallback);
          return format(new ContentDisposition(n2, a2));
        }
        function createparams(e3, r3) {
          if (e3 === void 0) {
            return;
          }
          var t3 = {};
          if (typeof e3 !== "string") {
            throw new TypeError("filename must be a string");
          }
          if (r3 === void 0) {
            r3 = true;
          }
          if (typeof r3 !== "string" && typeof r3 !== "boolean") {
            throw new TypeError("fallback must be a string or boolean");
          }
          if (typeof r3 === "string" && u.test(r3)) {
            throw new TypeError("fallback must be ISO-8859-1 string");
          }
          var a2 = n(e3);
          var o2 = c.test(a2);
          var f2 = typeof r3 !== "string" ? r3 && getlatin1(a2) : n(r3);
          var s2 = typeof f2 === "string" && f2 !== a2;
          if (s2 || !o2 || i.test(a2)) {
            t3["filename*"] = a2;
          }
          if (o2 || s2) {
            t3.filename = s2 ? f2 : a2;
          }
          return t3;
        }
        function format(e3) {
          var r3 = e3.parameters;
          var t3 = e3.type;
          if (!t3 || typeof t3 !== "string" || !v.test(t3)) {
            throw new TypeError("invalid type");
          }
          var n2 = String(t3).toLowerCase();
          if (r3 && typeof r3 === "object") {
            var a2;
            var o2 = Object.keys(r3).sort();
            for (var i2 = 0; i2 < o2.length; i2++) {
              a2 = o2[i2];
              var f2 = a2.substr(-1) === "*" ? ustring(r3[a2]) : qstring(r3[a2]);
              n2 += "; " + a2 + "=" + f2;
            }
          }
          return n2;
        }
        function decodefield(e3) {
          var r3 = d.exec(e3);
          if (!r3) {
            throw new TypeError("invalid extended field value");
          }
          var t3 = r3[1].toLowerCase();
          var n2 = r3[2];
          var o2;
          var i2 = n2.replace(f, pdecode);
          switch (t3) {
            case "iso-8859-1":
              o2 = getlatin1(i2);
              break;
            case "utf-8":
              o2 = a.from(i2, "binary").toString("utf8");
              break;
            default:
              throw new TypeError("unsupported charset in extended field");
          }
          return o2;
        }
        function getlatin1(e3) {
          return String(e3).replace(u, "?");
        }
        function parse(e3) {
          if (!e3 || typeof e3 !== "string") {
            throw new TypeError("argument string is required");
          }
          var r3 = x.exec(e3);
          if (!r3) {
            throw new TypeError("invalid type format");
          }
          var t3 = r3[0].length;
          var n2 = r3[1].toLowerCase();
          var a2;
          var o2 = [];
          var i2 = {};
          var f2;
          t3 = l.lastIndex = r3[0].substr(-1) === ";" ? t3 - 1 : t3;
          while (r3 = l.exec(e3)) {
            if (r3.index !== t3) {
              throw new TypeError("invalid parameter format");
            }
            t3 += r3[0].length;
            a2 = r3[1].toLowerCase();
            f2 = r3[2];
            if (o2.indexOf(a2) !== -1) {
              throw new TypeError("invalid duplicate parameter");
            }
            o2.push(a2);
            if (a2.indexOf("*") + 1 === a2.length) {
              a2 = a2.slice(0, -1);
              f2 = decodefield(f2);
              i2[a2] = f2;
              continue;
            }
            if (typeof i2[a2] === "string") {
              continue;
            }
            if (f2[0] === '"') {
              f2 = f2.substr(1, f2.length - 2).replace(s, "$1");
            }
            i2[a2] = f2;
          }
          if (t3 !== -1 && t3 !== e3.length) {
            throw new TypeError("invalid parameter format");
          }
          return new ContentDisposition(n2, i2);
        }
        function pdecode(e3, r3) {
          return String.fromCharCode(parseInt(r3, 16));
        }
        function pencode(e3) {
          return "%" + String(e3).charCodeAt(0).toString(16).toUpperCase();
        }
        function qstring(e3) {
          var r3 = String(e3);
          return '"' + r3.replace(p, "\\$1") + '"';
        }
        function ustring(e3) {
          var r3 = String(e3);
          var t3 = encodeURIComponent(r3).replace(o, pencode);
          return "UTF-8''" + t3;
        }
        function ContentDisposition(e3, r3) {
          this.type = e3;
          this.parameters = r3;
        }
      }, 291: (e2, r2, t2) => {
        var n = t2(300);
        var a = n.Buffer;
        function copyProps(e3, r3) {
          for (var t3 in e3) {
            r3[t3] = e3[t3];
          }
        }
        if (a.from && a.alloc && a.allocUnsafe && a.allocUnsafeSlow) {
          e2.exports = n;
        } else {
          copyProps(n, r2);
          r2.Buffer = SafeBuffer;
        }
        function SafeBuffer(e3, r3, t3) {
          return a(e3, r3, t3);
        }
        copyProps(a, SafeBuffer);
        SafeBuffer.from = function(e3, r3, t3) {
          if (typeof e3 === "number") {
            throw new TypeError("Argument must not be a number");
          }
          return a(e3, r3, t3);
        };
        SafeBuffer.alloc = function(e3, r3, t3) {
          if (typeof e3 !== "number") {
            throw new TypeError("Argument must be a number");
          }
          var n2 = a(e3);
          if (r3 !== void 0) {
            if (typeof t3 === "string") {
              n2.fill(r3, t3);
            } else {
              n2.fill(r3);
            }
          } else {
            n2.fill(0);
          }
          return n2;
        };
        SafeBuffer.allocUnsafe = function(e3) {
          if (typeof e3 !== "number") {
            throw new TypeError("Argument must be a number");
          }
          return a(e3);
        };
        SafeBuffer.allocUnsafeSlow = function(e3) {
          if (typeof e3 !== "number") {
            throw new TypeError("Argument must be a number");
          }
          return n.SlowBuffer(e3);
        };
      }, 300: (e2) => {
        "use strict";
        e2.exports = require_buffer();
      }, 17: (e2) => {
        "use strict";
        e2.exports = require_path();
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var n = r[t2];
        if (n !== void 0) {
          return n.exports;
        }
        var a = r[t2] = { exports: {} };
        var o = true;
        try {
          e[t2](a, a.exports, __nccwpck_require__2);
          o = false;
        } finally {
          if (o) delete r[t2];
        }
        return a.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(934);
      module2.exports = t;
    })();
  }
});

// browser-external:assert
var require_assert = __commonJS({
  "browser-external:assert"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "assert" has been externalized for browser compatibility. Cannot access "assert.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:tty
var require_tty = __commonJS({
  "browser-external:tty"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "tty" has been externalized for browser compatibility. Cannot access "tty.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:util
var require_util = __commonJS({
  "browser-external:util"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "util" has been externalized for browser compatibility. Cannot access "util.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/debug/index.js
var require_debug = __commonJS({
  "../../../node_modules/next/dist/compiled/debug/index.js"(exports2, module2) {
    (() => {
      var e = { 237: (e2, t2, r2) => {
        t2.log = log2;
        t2.formatArgs = formatArgs;
        t2.save = save;
        t2.load = load;
        t2.useColors = useColors;
        t2.storage = localstorage();
        t2.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"];
        function useColors() {
          if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
            return true;
          }
          if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
            return false;
          }
          return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }
        function formatArgs(t3) {
          t3[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t3[0] + (this.useColors ? "%c " : " ") + "+" + e2.exports.humanize(this.diff);
          if (!this.useColors) {
            return;
          }
          const r3 = "color: " + this.color;
          t3.splice(1, 0, r3, "color: inherit");
          let s2 = 0;
          let n = 0;
          t3[0].replace(/%[a-zA-Z%]/g, (e3) => {
            if (e3 === "%%") {
              return;
            }
            s2++;
            if (e3 === "%c") {
              n = s2;
            }
          });
          t3.splice(n, 0, r3);
        }
        function log2(...e3) {
          return typeof console === "object" && console.log && console.log(...e3);
        }
        function save(e3) {
          try {
            if (e3) {
              t2.storage.setItem("debug", e3);
            } else {
              t2.storage.removeItem("debug");
            }
          } catch (e4) {
          }
        }
        function load() {
          let e3;
          try {
            e3 = t2.storage.getItem("debug");
          } catch (e4) {
          }
          if (!e3 && typeof process !== "undefined" && "env" in process) {
            e3 = process.env.DEBUG;
          }
          return e3;
        }
        function localstorage() {
          try {
            return localStorage;
          } catch (e3) {
          }
        }
        e2.exports = r2(573)(t2);
        const { formatters: s } = e2.exports;
        s.j = function(e3) {
          try {
            return JSON.stringify(e3);
          } catch (e4) {
            return "[UnexpectedJSONParseError]: " + e4.message;
          }
        };
      }, 573: (e2, t2, r2) => {
        function setup(e3) {
          createDebug.debug = createDebug;
          createDebug.default = createDebug;
          createDebug.coerce = coerce;
          createDebug.disable = disable;
          createDebug.enable = enable;
          createDebug.enabled = enabled;
          createDebug.humanize = r2(958);
          Object.keys(e3).forEach((t3) => {
            createDebug[t3] = e3[t3];
          });
          createDebug.instances = [];
          createDebug.names = [];
          createDebug.skips = [];
          createDebug.formatters = {};
          function selectColor(e4) {
            let t3 = 0;
            for (let r3 = 0; r3 < e4.length; r3++) {
              t3 = (t3 << 5) - t3 + e4.charCodeAt(r3);
              t3 |= 0;
            }
            return createDebug.colors[Math.abs(t3) % createDebug.colors.length];
          }
          createDebug.selectColor = selectColor;
          function createDebug(e4) {
            let t3;
            function debug(...e5) {
              if (!debug.enabled) {
                return;
              }
              const r3 = debug;
              const s = Number(/* @__PURE__ */ new Date());
              const n = s - (t3 || s);
              r3.diff = n;
              r3.prev = t3;
              r3.curr = s;
              t3 = s;
              e5[0] = createDebug.coerce(e5[0]);
              if (typeof e5[0] !== "string") {
                e5.unshift("%O");
              }
              let o = 0;
              e5[0] = e5[0].replace(/%([a-zA-Z%])/g, (t4, s2) => {
                if (t4 === "%%") {
                  return t4;
                }
                o++;
                const n2 = createDebug.formatters[s2];
                if (typeof n2 === "function") {
                  const s3 = e5[o];
                  t4 = n2.call(r3, s3);
                  e5.splice(o, 1);
                  o--;
                }
                return t4;
              });
              createDebug.formatArgs.call(r3, e5);
              const c = r3.log || createDebug.log;
              c.apply(r3, e5);
            }
            debug.namespace = e4;
            debug.enabled = createDebug.enabled(e4);
            debug.useColors = createDebug.useColors();
            debug.color = selectColor(e4);
            debug.destroy = destroy;
            debug.extend = extend;
            if (typeof createDebug.init === "function") {
              createDebug.init(debug);
            }
            createDebug.instances.push(debug);
            return debug;
          }
          function destroy() {
            const e4 = createDebug.instances.indexOf(this);
            if (e4 !== -1) {
              createDebug.instances.splice(e4, 1);
              return true;
            }
            return false;
          }
          function extend(e4, t3) {
            const r3 = createDebug(this.namespace + (typeof t3 === "undefined" ? ":" : t3) + e4);
            r3.log = this.log;
            return r3;
          }
          function enable(e4) {
            createDebug.save(e4);
            createDebug.names = [];
            createDebug.skips = [];
            let t3;
            const r3 = (typeof e4 === "string" ? e4 : "").split(/[\s,]+/);
            const s = r3.length;
            for (t3 = 0; t3 < s; t3++) {
              if (!r3[t3]) {
                continue;
              }
              e4 = r3[t3].replace(/\*/g, ".*?");
              if (e4[0] === "-") {
                createDebug.skips.push(new RegExp("^" + e4.substr(1) + "$"));
              } else {
                createDebug.names.push(new RegExp("^" + e4 + "$"));
              }
            }
            for (t3 = 0; t3 < createDebug.instances.length; t3++) {
              const e5 = createDebug.instances[t3];
              e5.enabled = createDebug.enabled(e5.namespace);
            }
          }
          function disable() {
            const e4 = [...createDebug.names.map(toNamespace), ...createDebug.skips.map(toNamespace).map((e5) => "-" + e5)].join(",");
            createDebug.enable("");
            return e4;
          }
          function enabled(e4) {
            if (e4[e4.length - 1] === "*") {
              return true;
            }
            let t3;
            let r3;
            for (t3 = 0, r3 = createDebug.skips.length; t3 < r3; t3++) {
              if (createDebug.skips[t3].test(e4)) {
                return false;
              }
            }
            for (t3 = 0, r3 = createDebug.names.length; t3 < r3; t3++) {
              if (createDebug.names[t3].test(e4)) {
                return true;
              }
            }
            return false;
          }
          function toNamespace(e4) {
            return e4.toString().substring(2, e4.toString().length - 2).replace(/\.\*\?$/, "*");
          }
          function coerce(e4) {
            if (e4 instanceof Error) {
              return e4.stack || e4.message;
            }
            return e4;
          }
          createDebug.enable(createDebug.load());
          return createDebug;
        }
        e2.exports = setup;
      }, 792: (e2, t2, r2) => {
        if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
          e2.exports = r2(237);
        } else {
          e2.exports = r2(354);
        }
      }, 354: (e2, t2, r2) => {
        const s = r2(224);
        const n = r2(837);
        t2.init = init;
        t2.log = log2;
        t2.formatArgs = formatArgs;
        t2.save = save;
        t2.load = load;
        t2.useColors = useColors;
        t2.colors = [6, 2, 3, 4, 5, 1];
        try {
          const e3 = r2(178);
          if (e3 && (e3.stderr || e3).level >= 2) {
            t2.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];
          }
        } catch (e3) {
        }
        t2.inspectOpts = Object.keys(process.env).filter((e3) => /^debug_/i.test(e3)).reduce((e3, t3) => {
          const r3 = t3.substring(6).toLowerCase().replace(/_([a-z])/g, (e4, t4) => t4.toUpperCase());
          let s2 = process.env[t3];
          if (/^(yes|on|true|enabled)$/i.test(s2)) {
            s2 = true;
          } else if (/^(no|off|false|disabled)$/i.test(s2)) {
            s2 = false;
          } else if (s2 === "null") {
            s2 = null;
          } else {
            s2 = Number(s2);
          }
          e3[r3] = s2;
          return e3;
        }, {});
        function useColors() {
          return "colors" in t2.inspectOpts ? Boolean(t2.inspectOpts.colors) : s.isatty(process.stderr.fd);
        }
        function formatArgs(t3) {
          const { namespace: r3, useColors: s2 } = this;
          if (s2) {
            const s3 = this.color;
            const n2 = "\x1B[3" + (s3 < 8 ? s3 : "8;5;" + s3);
            const o2 = `  ${n2};1m${r3} \x1B[0m`;
            t3[0] = o2 + t3[0].split("\n").join("\n" + o2);
            t3.push(n2 + "m+" + e2.exports.humanize(this.diff) + "\x1B[0m");
          } else {
            t3[0] = getDate() + r3 + " " + t3[0];
          }
        }
        function getDate() {
          if (t2.inspectOpts.hideDate) {
            return "";
          }
          return (/* @__PURE__ */ new Date()).toISOString() + " ";
        }
        function log2(...e3) {
          return process.stderr.write(n.format(...e3) + "\n");
        }
        function save(e3) {
          if (e3) {
            process.env.DEBUG = e3;
          } else {
            delete process.env.DEBUG;
          }
        }
        function load() {
          return process.env.DEBUG;
        }
        function init(e3) {
          e3.inspectOpts = {};
          const r3 = Object.keys(t2.inspectOpts);
          for (let s2 = 0; s2 < r3.length; s2++) {
            e3.inspectOpts[r3[s2]] = t2.inspectOpts[r3[s2]];
          }
        }
        e2.exports = r2(573)(t2);
        const { formatters: o } = e2.exports;
        o.o = function(e3) {
          this.inspectOpts.colors = this.useColors;
          return n.inspect(e3, this.inspectOpts).replace(/\s*\n\s*/g, " ");
        };
        o.O = function(e3) {
          this.inspectOpts.colors = this.useColors;
          return n.inspect(e3, this.inspectOpts);
        };
      }, 914: (e2) => {
        "use strict";
        e2.exports = (e3, t2 = process.argv) => {
          const r2 = e3.startsWith("-") ? "" : e3.length === 1 ? "-" : "--";
          const s = t2.indexOf(r2 + e3);
          const n = t2.indexOf("--");
          return s !== -1 && (n === -1 || s < n);
        };
      }, 958: (e2) => {
        var t2 = 1e3;
        var r2 = t2 * 60;
        var s = r2 * 60;
        var n = s * 24;
        var o = n * 7;
        var c = n * 365.25;
        e2.exports = function(e3, t3) {
          t3 = t3 || {};
          var r3 = typeof e3;
          if (r3 === "string" && e3.length > 0) {
            return parse(e3);
          } else if (r3 === "number" && isFinite(e3)) {
            return t3.long ? fmtLong(e3) : fmtShort(e3);
          }
          throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e3));
        };
        function parse(e3) {
          e3 = String(e3);
          if (e3.length > 100) {
            return;
          }
          var a = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e3);
          if (!a) {
            return;
          }
          var u = parseFloat(a[1]);
          var i = (a[2] || "ms").toLowerCase();
          switch (i) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return u * c;
            case "weeks":
            case "week":
            case "w":
              return u * o;
            case "days":
            case "day":
            case "d":
              return u * n;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return u * s;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return u * r2;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return u * t2;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return u;
            default:
              return void 0;
          }
        }
        function fmtShort(e3) {
          var o2 = Math.abs(e3);
          if (o2 >= n) {
            return Math.round(e3 / n) + "d";
          }
          if (o2 >= s) {
            return Math.round(e3 / s) + "h";
          }
          if (o2 >= r2) {
            return Math.round(e3 / r2) + "m";
          }
          if (o2 >= t2) {
            return Math.round(e3 / t2) + "s";
          }
          return e3 + "ms";
        }
        function fmtLong(e3) {
          var o2 = Math.abs(e3);
          if (o2 >= n) {
            return plural(e3, o2, n, "day");
          }
          if (o2 >= s) {
            return plural(e3, o2, s, "hour");
          }
          if (o2 >= r2) {
            return plural(e3, o2, r2, "minute");
          }
          if (o2 >= t2) {
            return plural(e3, o2, t2, "second");
          }
          return e3 + " ms";
        }
        function plural(e3, t3, r3, s2) {
          var n2 = t3 >= r3 * 1.5;
          return Math.round(e3 / r3) + " " + s2 + (n2 ? "s" : "");
        }
      }, 178: (e2, t2, r2) => {
        "use strict";
        const s = r2(37);
        const n = r2(224);
        const o = r2(914);
        const { env: c } = process;
        let a;
        if (o("no-color") || o("no-colors") || o("color=false") || o("color=never")) {
          a = 0;
        } else if (o("color") || o("colors") || o("color=true") || o("color=always")) {
          a = 1;
        }
        function envForceColor() {
          if ("FORCE_COLOR" in c) {
            if (c.FORCE_COLOR === "true") {
              return 1;
            }
            if (c.FORCE_COLOR === "false") {
              return 0;
            }
            return c.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(c.FORCE_COLOR, 10), 3);
          }
        }
        function translateLevel(e3) {
          if (e3 === 0) {
            return false;
          }
          return { level: e3, hasBasic: true, has256: e3 >= 2, has16m: e3 >= 3 };
        }
        function supportsColor(e3, { streamIsTTY: t3, sniffFlags: r3 = true } = {}) {
          const n2 = envForceColor();
          if (n2 !== void 0) {
            a = n2;
          }
          const u = r3 ? a : n2;
          if (u === 0) {
            return 0;
          }
          if (r3) {
            if (o("color=16m") || o("color=full") || o("color=truecolor")) {
              return 3;
            }
            if (o("color=256")) {
              return 2;
            }
          }
          if (e3 && !t3 && u === void 0) {
            return 0;
          }
          const i = u || 0;
          if (c.TERM === "dumb") {
            return i;
          }
          if (process.platform === "win32") {
            const e4 = s.release().split(".");
            if (Number(e4[0]) >= 10 && Number(e4[2]) >= 10586) {
              return Number(e4[2]) >= 14931 ? 3 : 2;
            }
            return 1;
          }
          if ("CI" in c) {
            if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE", "DRONE"].some((e4) => e4 in c) || c.CI_NAME === "codeship") {
              return 1;
            }
            return i;
          }
          if ("TEAMCITY_VERSION" in c) {
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(c.TEAMCITY_VERSION) ? 1 : 0;
          }
          if (c.COLORTERM === "truecolor") {
            return 3;
          }
          if ("TERM_PROGRAM" in c) {
            const e4 = Number.parseInt((c.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
            switch (c.TERM_PROGRAM) {
              case "iTerm.app":
                return e4 >= 3 ? 3 : 2;
              case "Apple_Terminal":
                return 2;
            }
          }
          if (/-256(color)?$/i.test(c.TERM)) {
            return 2;
          }
          if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(c.TERM)) {
            return 1;
          }
          if ("COLORTERM" in c) {
            return 1;
          }
          return i;
        }
        function getSupportLevel(e3, t3 = {}) {
          const r3 = supportsColor(e3, { streamIsTTY: e3 && e3.isTTY, ...t3 });
          return translateLevel(r3);
        }
        e2.exports = { supportsColor: getSupportLevel, stdout: getSupportLevel({ isTTY: n.isatty(1) }), stderr: getSupportLevel({ isTTY: n.isatty(2) }) };
      }, 37: (e2) => {
        "use strict";
        e2.exports = require_os();
      }, 224: (e2) => {
        "use strict";
        e2.exports = require_tty();
      }, 837: (e2) => {
        "use strict";
        e2.exports = require_util();
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var s = t[r2];
        if (s !== void 0) {
          return s.exports;
        }
        var n = t[r2] = { exports: {} };
        var o = true;
        try {
          e[r2](n, n.exports, __nccwpck_require__2);
          o = false;
        } finally {
          if (o) delete t[r2];
        }
        return n.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var r = __nccwpck_require__2(792);
      module2.exports = r;
    })();
  }
});

// browser-external:stream
var require_stream = __commonJS({
  "browser-external:stream"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "stream" has been externalized for browser compatibility. Cannot access "stream.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/get-orientation/index.js
var require_get_orientation = __commonJS({
  "../../../node_modules/next/dist/compiled/get-orientation/index.js"(exports2, module2) {
    (() => {
      var e = { 780: (e2, t2) => {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        var r2;
        (function(e3) {
          e3[e3["TOP_LEFT"] = 1] = "TOP_LEFT";
          e3[e3["TOP_RIGHT"] = 2] = "TOP_RIGHT";
          e3[e3["BOTTOM_RIGHT"] = 3] = "BOTTOM_RIGHT";
          e3[e3["BOTTOM_LEFT"] = 4] = "BOTTOM_LEFT";
          e3[e3["LEFT_TOP"] = 5] = "LEFT_TOP";
          e3[e3["RIGHT_TOP"] = 6] = "RIGHT_TOP";
          e3[e3["RIGHT_BOTTOM"] = 7] = "RIGHT_BOTTOM";
          e3[e3["LEFT_BOTTOM"] = 8] = "LEFT_BOTTOM";
        })(r2 = t2.Orientation || (t2.Orientation = {}));
      }, 330: (e2, t2, r2) => {
        "use strict";
        Object.defineProperty(t2, "__esModule", { value: true });
        const s = r2(781);
        const i = r2(300);
        class StreamParserWritableClass extends s.Writable {
          constructor() {
            super();
            i(this);
          }
        }
        t2.StreamParserWritable = StreamParserWritableClass;
      }, 300: (e2, t2, r2) => {
        var s = r2(491);
        var i = r2(937)("stream-parser");
        e2.exports = Parser;
        var n = -1;
        var a = 0;
        var o = 1;
        var f = 2;
        function Parser(e3) {
          var t3 = e3 && "function" == typeof e3._transform;
          var r3 = e3 && "function" == typeof e3._write;
          if (!t3 && !r3) throw new Error("must pass a Writable or Transform stream in");
          i("extending Parser into stream");
          e3._bytes = _bytes;
          e3._skipBytes = _skipBytes;
          if (t3) e3._passthrough = _passthrough;
          if (t3) {
            e3._transform = transform;
          } else {
            e3._write = write;
          }
        }
        function init(e3) {
          i("initializing parser stream");
          e3._parserBytesLeft = 0;
          e3._parserBuffers = [];
          e3._parserBuffered = 0;
          e3._parserState = n;
          e3._parserCallback = null;
          if ("function" == typeof e3.push) {
            e3._parserOutput = e3.push.bind(e3);
          }
          e3._parserInit = true;
        }
        function _bytes(e3, t3) {
          s(!this._parserCallback, 'there is already a "callback" set!');
          s(isFinite(e3) && e3 > 0, 'can only buffer a finite number of bytes > 0, got "' + e3 + '"');
          if (!this._parserInit) init(this);
          i("buffering %o bytes", e3);
          this._parserBytesLeft = e3;
          this._parserCallback = t3;
          this._parserState = a;
        }
        function _skipBytes(e3, t3) {
          s(!this._parserCallback, 'there is already a "callback" set!');
          s(e3 > 0, 'can only skip > 0 bytes, got "' + e3 + '"');
          if (!this._parserInit) init(this);
          i("skipping %o bytes", e3);
          this._parserBytesLeft = e3;
          this._parserCallback = t3;
          this._parserState = o;
        }
        function _passthrough(e3, t3) {
          s(!this._parserCallback, 'There is already a "callback" set!');
          s(e3 > 0, 'can only pass through > 0 bytes, got "' + e3 + '"');
          if (!this._parserInit) init(this);
          i("passing through %o bytes", e3);
          this._parserBytesLeft = e3;
          this._parserCallback = t3;
          this._parserState = f;
        }
        function write(e3, t3, r3) {
          if (!this._parserInit) init(this);
          i("write(%o bytes)", e3.length);
          if ("function" == typeof t3) r3 = t3;
          _(this, e3, null, r3);
        }
        function transform(e3, t3, r3) {
          if (!this._parserInit) init(this);
          i("transform(%o bytes)", e3.length);
          if ("function" != typeof t3) {
            t3 = this._parserOutput;
          }
          _(this, e3, t3, r3);
        }
        function _data(e3, t3, r3, s2) {
          if (e3._parserBytesLeft <= 0) {
            return s2(new Error("got data but not currently parsing anything"));
          }
          if (t3.length <= e3._parserBytesLeft) {
            return function() {
              return process2(e3, t3, r3, s2);
            };
          } else {
            return function() {
              var i2 = t3.slice(0, e3._parserBytesLeft);
              return process2(e3, i2, r3, function(n2) {
                if (n2) return s2(n2);
                if (t3.length > i2.length) {
                  return function() {
                    return _data(e3, t3.slice(i2.length), r3, s2);
                  };
                }
              });
            };
          }
        }
        function process2(e3, t3, r3, s2) {
          e3._parserBytesLeft -= t3.length;
          i("%o bytes left for stream piece", e3._parserBytesLeft);
          if (e3._parserState === a) {
            e3._parserBuffers.push(t3);
            e3._parserBuffered += t3.length;
          } else if (e3._parserState === f) {
            r3(t3);
          }
          if (0 === e3._parserBytesLeft) {
            var o2 = e3._parserCallback;
            if (o2 && e3._parserState === a && e3._parserBuffers.length > 1) {
              t3 = Buffer.concat(e3._parserBuffers, e3._parserBuffered);
            }
            if (e3._parserState !== a) {
              t3 = null;
            }
            e3._parserCallback = null;
            e3._parserBuffered = 0;
            e3._parserState = n;
            e3._parserBuffers.splice(0);
            if (o2) {
              var _2 = [];
              if (t3) {
                _2.push(t3);
              } else {
              }
              if (r3) {
                _2.push(r3);
              }
              var p = o2.length > _2.length;
              if (p) {
                _2.push(trampoline(s2));
              }
              var u = o2.apply(e3, _2);
              if (!p || s2 === u) return s2;
            }
          } else {
            return s2;
          }
        }
        var _ = trampoline(_data);
        function trampoline(e3) {
          return function() {
            var t3 = e3.apply(this, arguments);
            while ("function" == typeof t3) {
              t3 = t3();
            }
            return t3;
          };
        }
      }, 491: (e2) => {
        "use strict";
        e2.exports = require_assert();
      }, 937: (e2) => {
        "use strict";
        e2.exports = require_debug();
      }, 781: (e2) => {
        "use strict";
        e2.exports = require_stream();
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var s = t[r2];
        if (s !== void 0) {
          return s.exports;
        }
        var i = t[r2] = { exports: {} };
        var n = true;
        try {
          e[r2](i, i.exports, __nccwpck_require__2);
          n = false;
        } finally {
          if (n) delete t[r2];
        }
        return i.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var r = {};
      (() => {
        "use strict";
        var e2 = r;
        Object.defineProperty(e2, "__esModule", { value: true });
        const t2 = __nccwpck_require__2(781);
        const s = __nccwpck_require__2(780);
        e2.Orientation = s.Orientation;
        const i = __nccwpck_require__2(330);
        const noop = () => {
        };
        class EXIFOrientationParser extends i.StreamParserWritable {
          constructor() {
            super();
            this._bytes(4, this.onSignature.bind(this));
          }
          onSignature(e3) {
            const t3 = e3.readUInt16BE(0);
            const r2 = e3.readUInt16BE(2);
            if (t3 === 65496) {
              this.onJPEGMarker(e3.slice(2));
            } else if (t3 === 18761 && r2 === 10752 || t3 === 19789 && r2 === 42) {
              this._bytes(4, (t4) => {
                this.onTIFFHeader(Buffer.concat([e3, t4]));
              });
            } else {
              this._skipBytes(Infinity, noop);
            }
          }
          onJPEGMarker(e3) {
            const t3 = e3.readUInt16BE(0);
            if (t3 === 65505) {
              this._bytes(8, (e4) => {
                const t4 = e4.readUInt16BE(2) === 17784 && e4.readUInt16BE(4) === 26982 && e4.readUInt16BE(6) === 0;
                if (t4) {
                  this._bytes(8, this.onTIFFHeader.bind(this));
                } else {
                  const t5 = e4.readUInt16BE(0);
                  const r2 = t5 - 6;
                  this._skipBytes(r2, () => {
                    this._bytes(2, this.onJPEGMarker.bind(this));
                  });
                }
              });
            } else if (65504 <= t3 && t3 <= 65519) {
              this._bytes(2, (t4) => {
                const r2 = t4.readUInt16BE(0);
                const s2 = r2 - e3.length;
                this._skipBytes(s2, () => {
                  this._bytes(2, this.onJPEGMarker.bind(this));
                });
              });
            } else {
              this._skipBytes(Infinity, noop);
            }
          }
          onTIFFHeader(e3) {
            const t3 = e3.readUInt16BE(0) === 18761;
            const readUInt16 = (e4, r3) => t3 ? e4.readUInt16LE(r3) : e4.readUInt16BE(r3);
            const readUInt32 = (e4, r3) => t3 ? e4.readUInt32LE(r3) : e4.readUInt32BE(r3);
            const r2 = readUInt32(e3, 4);
            const s2 = r2 - e3.length;
            const consumeIDFBlock = () => {
              this._bytes(2, (e4) => {
                let t4 = readUInt16(e4, 0);
                const consumeIFDFields = () => {
                  if (t4-- > 0) {
                    this._bytes(12, (e5) => {
                      const t5 = readUInt16(e5, 0);
                      if (t5 === 274) {
                        const t6 = e5.slice(8, 12);
                        const r3 = readUInt16(t6, 0);
                        if (1 <= r3 && r3 <= 8) {
                          this.emit("orientation", r3);
                        } else {
                          this.emit("error", new Error("Unexpected Orientation value"));
                        }
                        this._skipBytes(Infinity, noop);
                      } else {
                        consumeIFDFields();
                      }
                    });
                  } else {
                    this._skipBytes(Infinity, noop);
                  }
                };
                consumeIFDFields();
              });
            };
            if (s2 > 0) {
              this._skipBytes(s2, consumeIDFBlock);
            } else {
              consumeIDFBlock();
            }
          }
        }
        e2.EXIFOrientationParser = EXIFOrientationParser;
        function getOrientation(e3) {
          return new Promise((r2, i2) => {
            const n = new EXIFOrientationParser().once("error", onError).once("finish", onFinish).once("orientation", onOrientation);
            let a = false;
            function onError(e4) {
              n.removeListener("finish", onFinish);
              n.removeListener("orientation", onOrientation);
              if (!a) {
                a = true;
                i2(e4);
              }
            }
            function onFinish() {
              n.removeListener("error", onError);
              n.removeListener("orientation", onOrientation);
              if (!a) {
                a = true;
                r2(s.Orientation.TOP_LEFT);
              }
            }
            function onOrientation(e4) {
              n.removeListener("error", onError);
              n.removeListener("finish", onFinish);
              if (!a) {
                a = true;
                r2(e4);
              }
            }
            if (Buffer.isBuffer(e3)) {
              n.end(e3);
            } else if (e3 instanceof t2.Readable) {
              e3.pipe(n);
            } else {
              throw new TypeError("Unexpected input type");
            }
          });
        }
        e2.getOrientation = getOrientation;
      })();
      module2.exports = r;
    })();
  }
});

// browser-external:events
var require_events = __commonJS({
  "browser-external:events"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "events" has been externalized for browser compatibility. Cannot access "events.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/image-size/index.js
var require_image_size = __commonJS({
  "../../../node_modules/next/dist/compiled/image-size/index.js"(exports2, module2) {
    (() => {
      var t = { 399: (t2, e2, n2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.detector = void 0;
        const r = n2(230);
        const i = Object.keys(r.typeHandlers);
        const s = { 56: "psd", 66: "bmp", 68: "dds", 71: "gif", 73: "tiff", 77: "tiff", 82: "webp", 105: "icns", 137: "png", 255: "jpg" };
        function detector(t3) {
          const e3 = t3[0];
          if (e3 in s) {
            const n3 = s[e3];
            if (n3 && r.typeHandlers[n3].validate(t3)) {
              return n3;
            }
          }
          const finder = (e4) => r.typeHandlers[e4].validate(t3);
          return i.find(finder);
        }
        e2.detector = detector;
      }, 501: function(t2, e2, n2) {
        "use strict";
        var r = this && this.__awaiter || function(t3, e3, n3, r2) {
          function adopt(t4) {
            return t4 instanceof n3 ? t4 : new n3(function(e4) {
              e4(t4);
            });
          }
          return new (n3 || (n3 = Promise))(function(n4, i2) {
            function fulfilled(t4) {
              try {
                step(r2.next(t4));
              } catch (t5) {
                i2(t5);
              }
            }
            function rejected(t4) {
              try {
                step(r2["throw"](t4));
              } catch (t5) {
                i2(t5);
              }
            }
            function step(t4) {
              t4.done ? n4(t4.value) : adopt(t4.value).then(fulfilled, rejected);
            }
            step((r2 = r2.apply(t3, e3 || [])).next());
          });
        };
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.types = e2.setConcurrency = e2.disableTypes = e2.disableFS = e2.imageSize = void 0;
        const i = n2(147);
        const s = n2(17);
        const o = n2(927);
        const c = n2(230);
        const a = n2(399);
        const u = 512 * 1024;
        const l = new o.default({ concurrency: 100, autostart: true });
        const d = { disabledFS: false, disabledTypes: [] };
        function lookup(t3, e3) {
          const n3 = a.detector(t3);
          if (typeof n3 !== "undefined") {
            if (d.disabledTypes.indexOf(n3) > -1) {
              throw new TypeError("disabled file type: " + n3);
            }
            if (n3 in c.typeHandlers) {
              const r2 = c.typeHandlers[n3].calculate(t3, e3);
              if (r2 !== void 0) {
                r2.type = n3;
                return r2;
              }
            }
          }
          throw new TypeError("unsupported file type: " + n3 + " (file: " + e3 + ")");
        }
        function asyncFileToBuffer(t3) {
          return r(this, void 0, void 0, function* () {
            const e3 = yield i.promises.open(t3, "r");
            const { size: n3 } = yield e3.stat();
            if (n3 <= 0) {
              yield e3.close();
              throw new Error("Empty file");
            }
            const r2 = Math.min(n3, u);
            const s2 = Buffer.alloc(r2);
            yield e3.read(s2, 0, r2, 0);
            yield e3.close();
            return s2;
          });
        }
        function syncFileToBuffer(t3) {
          const e3 = i.openSync(t3, "r");
          const { size: n3 } = i.fstatSync(e3);
          if (n3 <= 0) {
            i.closeSync(e3);
            throw new Error("Empty file");
          }
          const r2 = Math.min(n3, u);
          const s2 = Buffer.alloc(r2);
          i.readSync(e3, s2, 0, r2, 0);
          i.closeSync(e3);
          return s2;
        }
        t2.exports = e2 = imageSize;
        e2["default"] = imageSize;
        function imageSize(t3, e3) {
          if (Buffer.isBuffer(t3)) {
            return lookup(t3);
          }
          if (typeof t3 !== "string" || d.disabledFS) {
            throw new TypeError("invalid invocation. input should be a Buffer");
          }
          const n3 = s.resolve(t3);
          if (typeof e3 === "function") {
            l.push(() => asyncFileToBuffer(n3).then((t4) => process.nextTick(e3, null, lookup(t4, n3))).catch(e3));
          } else {
            const t4 = syncFileToBuffer(n3);
            return lookup(t4, n3);
          }
        }
        e2.imageSize = imageSize;
        const disableFS = (t3) => {
          d.disabledFS = t3;
        };
        e2.disableFS = disableFS;
        const disableTypes = (t3) => {
          d.disabledTypes = t3;
        };
        e2.disableTypes = disableTypes;
        const setConcurrency = (t3) => {
          l.concurrency = t3;
        };
        e2.setConcurrency = setConcurrency;
        e2.types = Object.keys(c.typeHandlers);
      }, 326: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.readUInt = void 0;
        function readUInt(t3, e3, n2, r) {
          n2 = n2 || 0;
          const i = r ? "BE" : "LE";
          const s = "readUInt" + e3 + i;
          return t3[s].call(t3, n2);
        }
        e2.readUInt = readUInt;
      }, 230: (t2, e2, n2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.typeHandlers = void 0;
        const r = n2(798);
        const i = n2(925);
        const s = n2(813);
        const o = n2(259);
        const c = n2(341);
        const a = n2(541);
        const u = n2(852);
        const l = n2(182);
        const d = n2(32);
        const h = n2(707);
        const f = n2(179);
        const p = n2(457);
        const g = n2(438);
        const y = n2(12);
        const v = n2(167);
        const w = n2(185);
        e2.typeHandlers = { bmp: r.BMP, cur: i.CUR, dds: s.DDS, gif: o.GIF, icns: c.ICNS, ico: a.ICO, j2c: u.J2C, jp2: l.JP2, jpg: d.JPG, ktx: h.KTX, png: f.PNG, pnm: p.PNM, psd: g.PSD, svg: y.SVG, tiff: v.TIFF, webp: w.WEBP };
      }, 798: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.BMP = void 0;
        e2.BMP = { validate(t3) {
          return "BM" === t3.toString("ascii", 0, 2);
        }, calculate(t3) {
          return { height: Math.abs(t3.readInt32LE(22)), width: t3.readUInt32LE(18) };
        } };
      }, 925: (t2, e2, n2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.CUR = void 0;
        const r = n2(541);
        const i = 2;
        e2.CUR = { validate(t3) {
          if (t3.readUInt16LE(0) !== 0) {
            return false;
          }
          return t3.readUInt16LE(2) === i;
        }, calculate(t3) {
          return r.ICO.calculate(t3);
        } };
      }, 813: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.DDS = void 0;
        e2.DDS = { validate(t3) {
          return t3.readUInt32LE(0) === 542327876;
        }, calculate(t3) {
          return { height: t3.readUInt32LE(12), width: t3.readUInt32LE(16) };
        } };
      }, 259: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.GIF = void 0;
        const n2 = /^GIF8[79]a/;
        e2.GIF = { validate(t3) {
          const e3 = t3.toString("ascii", 0, 6);
          return n2.test(e3);
        }, calculate(t3) {
          return { height: t3.readUInt16LE(8), width: t3.readUInt16LE(6) };
        } };
      }, 341: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.ICNS = void 0;
        const n2 = 4 + 4;
        const r = 4;
        const i = 4;
        const s = { ICON: 32, "ICN#": 32, "icm#": 16, icm4: 16, icm8: 16, "ics#": 16, ics4: 16, ics8: 16, is32: 16, s8mk: 16, icp4: 16, icl4: 32, icl8: 32, il32: 32, l8mk: 32, icp5: 32, ic11: 32, ich4: 48, ich8: 48, ih32: 48, h8mk: 48, icp6: 64, ic12: 32, it32: 128, t8mk: 128, ic07: 128, ic08: 256, ic13: 256, ic09: 512, ic14: 512, ic10: 1024 };
        function readImageHeader(t3, e3) {
          const n3 = e3 + i;
          return [t3.toString("ascii", e3, n3), t3.readUInt32BE(n3)];
        }
        function getImageSize(t3) {
          const e3 = s[t3];
          return { width: e3, height: e3, type: t3 };
        }
        e2.ICNS = { validate(t3) {
          return "icns" === t3.toString("ascii", 0, 4);
        }, calculate(t3) {
          const e3 = t3.length;
          const i2 = t3.readUInt32BE(r);
          let s2 = n2;
          let o = readImageHeader(t3, s2);
          let c = getImageSize(o[0]);
          s2 += o[1];
          if (s2 === i2) {
            return c;
          }
          const a = { height: c.height, images: [c], width: c.width };
          while (s2 < i2 && s2 < e3) {
            o = readImageHeader(t3, s2);
            c = getImageSize(o[0]);
            s2 += o[1];
            a.images.push(c);
          }
          return a;
        } };
      }, 541: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.ICO = void 0;
        const n2 = 1;
        const r = 2 + 2 + 2;
        const i = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4;
        function getSizeFromOffset(t3, e3) {
          const n3 = t3.readUInt8(e3);
          return n3 === 0 ? 256 : n3;
        }
        function getImageSize(t3, e3) {
          const n3 = r + e3 * i;
          return { height: getSizeFromOffset(t3, n3 + 1), width: getSizeFromOffset(t3, n3) };
        }
        e2.ICO = { validate(t3) {
          if (t3.readUInt16LE(0) !== 0) {
            return false;
          }
          return t3.readUInt16LE(2) === n2;
        }, calculate(t3) {
          const e3 = t3.readUInt16LE(4);
          const n3 = getImageSize(t3, 0);
          if (e3 === 1) {
            return n3;
          }
          const r2 = [n3];
          for (let n4 = 1; n4 < e3; n4 += 1) {
            r2.push(getImageSize(t3, n4));
          }
          const i2 = { height: n3.height, images: r2, width: n3.width };
          return i2;
        } };
      }, 852: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.J2C = void 0;
        e2.J2C = { validate(t3) {
          return t3.toString("hex", 0, 4) === "ff4fff51";
        }, calculate(t3) {
          return { height: t3.readUInt32BE(12), width: t3.readUInt32BE(8) };
        } };
      }, 182: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.JP2 = void 0;
        const n2 = { ftyp: "66747970", ihdr: "69686472", jp2h: "6a703268", jp__: "6a502020", rreq: "72726571", xml_: "786d6c20" };
        const calculateRREQLength = (t3) => {
          const e3 = t3.readUInt8(0);
          let n3 = 1 + 2 * e3;
          const r = t3.readUInt16BE(n3);
          const i = r * (2 + e3);
          n3 = n3 + 2 + i;
          const s = t3.readUInt16BE(n3);
          const o = s * (16 + e3);
          return n3 + 2 + o;
        };
        const parseIHDR = (t3) => ({ height: t3.readUInt32BE(4), width: t3.readUInt32BE(8) });
        e2.JP2 = { validate(t3) {
          const e3 = t3.toString("hex", 4, 8);
          const r = t3.readUInt32BE(0);
          if (e3 !== n2.jp__ || r < 1) {
            return false;
          }
          const i = r + 4;
          const s = t3.readUInt32BE(r);
          const o = t3.slice(i, i + s);
          return o.toString("hex", 0, 4) === n2.ftyp;
        }, calculate(t3) {
          const e3 = t3.readUInt32BE(0);
          const r = t3.readUInt16BE(e3 + 2);
          let i = e3 + 4 + r;
          const s = t3.toString("hex", i, i + 4);
          switch (s) {
            case n2.rreq:
              const e4 = 4;
              i = i + 4 + e4 + calculateRREQLength(t3.slice(i + 4));
              return parseIHDR(t3.slice(i + 8, i + 24));
            case n2.jp2h:
              return parseIHDR(t3.slice(i + 8, i + 24));
            default:
              throw new TypeError("Unsupported header found: " + t3.toString("ascii", i, i + 4));
          }
        } };
      }, 32: (t2, e2, n2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.JPG = void 0;
        const r = n2(326);
        const i = "45786966";
        const s = 2;
        const o = 6;
        const c = 2;
        const a = "4d4d";
        const u = "4949";
        const l = 12;
        const d = 2;
        function isEXIF(t3) {
          return t3.toString("hex", 2, 6) === i;
        }
        function extractSize(t3, e3) {
          return { height: t3.readUInt16BE(e3), width: t3.readUInt16BE(e3 + 2) };
        }
        function extractOrientation(t3, e3) {
          const n3 = 8;
          const i2 = o + n3;
          const s2 = r.readUInt(t3, 16, i2, e3);
          for (let n4 = 0; n4 < s2; n4++) {
            const s3 = i2 + d + n4 * l;
            const o2 = s3 + l;
            if (s3 > t3.length) {
              return;
            }
            const c2 = t3.slice(s3, o2);
            const a2 = r.readUInt(c2, 16, 0, e3);
            if (a2 === 274) {
              const t4 = r.readUInt(c2, 16, 2, e3);
              if (t4 !== 3) {
                return;
              }
              const n5 = r.readUInt(c2, 32, 4, e3);
              if (n5 !== 1) {
                return;
              }
              return r.readUInt(c2, 16, 8, e3);
            }
          }
        }
        function validateExifBlock(t3, e3) {
          const n3 = t3.slice(s, e3);
          const r2 = n3.toString("hex", o, o + c);
          const i2 = r2 === a;
          const l2 = r2 === u;
          if (i2 || l2) {
            return extractOrientation(n3, i2);
          }
        }
        function validateBuffer(t3, e3) {
          if (e3 > t3.length) {
            throw new TypeError("Corrupt JPG, exceeded buffer limits");
          }
          if (t3[e3] !== 255) {
            throw new TypeError("Invalid JPG, marker table corrupted");
          }
        }
        e2.JPG = { validate(t3) {
          const e3 = t3.toString("hex", 0, 2);
          return "ffd8" === e3;
        }, calculate(t3) {
          t3 = t3.slice(4);
          let e3;
          let n3;
          while (t3.length) {
            const r2 = t3.readUInt16BE(0);
            if (isEXIF(t3)) {
              e3 = validateExifBlock(t3, r2);
            }
            validateBuffer(t3, r2);
            n3 = t3[r2 + 1];
            if (n3 === 192 || n3 === 193 || n3 === 194) {
              const n4 = extractSize(t3, r2 + 5);
              if (!e3) {
                return n4;
              }
              return { height: n4.height, orientation: e3, width: n4.width };
            }
            t3 = t3.slice(r2 + 2);
          }
          throw new TypeError("Invalid JPG, no size found");
        } };
      }, 707: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.KTX = void 0;
        const n2 = "KTX 11";
        e2.KTX = { validate(t3) {
          return n2 === t3.toString("ascii", 1, 7);
        }, calculate(t3) {
          return { height: t3.readUInt32LE(40), width: t3.readUInt32LE(36) };
        } };
      }, 179: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.PNG = void 0;
        const n2 = "PNG\r\n\n";
        const r = "IHDR";
        const i = "CgBI";
        e2.PNG = { validate(t3) {
          if (n2 === t3.toString("ascii", 1, 8)) {
            let e3 = t3.toString("ascii", 12, 16);
            if (e3 === i) {
              e3 = t3.toString("ascii", 28, 32);
            }
            if (e3 !== r) {
              throw new TypeError("Invalid PNG");
            }
            return true;
          }
          return false;
        }, calculate(t3) {
          if (t3.toString("ascii", 12, 16) === i) {
            return { height: t3.readUInt32BE(36), width: t3.readUInt32BE(32) };
          }
          return { height: t3.readUInt32BE(20), width: t3.readUInt32BE(16) };
        } };
      }, 457: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.PNM = void 0;
        const n2 = { P1: "pbm/ascii", P2: "pgm/ascii", P3: "ppm/ascii", P4: "pbm", P5: "pgm", P6: "ppm", P7: "pam", PF: "pfm" };
        const r = Object.keys(n2);
        const i = { default: (t3) => {
          let e3 = [];
          while (t3.length > 0) {
            const n3 = t3.shift();
            if (n3[0] === "#") {
              continue;
            }
            e3 = n3.split(" ");
            break;
          }
          if (e3.length === 2) {
            return { height: parseInt(e3[1], 10), width: parseInt(e3[0], 10) };
          } else {
            throw new TypeError("Invalid PNM");
          }
        }, pam: (t3) => {
          const e3 = {};
          while (t3.length > 0) {
            const n3 = t3.shift();
            if (n3.length > 16 || n3.charCodeAt(0) > 128) {
              continue;
            }
            const [r2, i2] = n3.split(" ");
            if (r2 && i2) {
              e3[r2.toLowerCase()] = parseInt(i2, 10);
            }
            if (e3.height && e3.width) {
              break;
            }
          }
          if (e3.height && e3.width) {
            return { height: e3.height, width: e3.width };
          } else {
            throw new TypeError("Invalid PAM");
          }
        } };
        e2.PNM = { validate(t3) {
          const e3 = t3.toString("ascii", 0, 2);
          return r.includes(e3);
        }, calculate(t3) {
          const e3 = t3.toString("ascii", 0, 2);
          const r2 = n2[e3];
          const s = t3.toString("ascii", 3).split(/[\r\n]+/);
          const o = i[r2] || i.default;
          return o(s);
        } };
      }, 438: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.PSD = void 0;
        e2.PSD = { validate(t3) {
          return "8BPS" === t3.toString("ascii", 0, 4);
        }, calculate(t3) {
          return { height: t3.readUInt32BE(14), width: t3.readUInt32BE(18) };
        } };
      }, 12: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.SVG = void 0;
        const n2 = /<svg\s([^>"']|"[^"]*"|'[^']*')*>/;
        const r = { height: /\sheight=(['"])([^%]+?)\1/, root: n2, viewbox: /\sviewBox=(['"])(.+?)\1/i, width: /\swidth=(['"])([^%]+?)\1/ };
        const i = 2.54;
        const s = { in: 96, cm: 96 / i, em: 16, ex: 8, m: 96 / i * 100, mm: 96 / i / 10, pc: 96 / 72 / 12, pt: 96 / 72, px: 1 };
        const o = new RegExp(`^([0-9.]+(?:e\\d+)?)(${Object.keys(s).join("|")})?$`);
        function parseLength(t3) {
          const e3 = o.exec(t3);
          if (!e3) {
            return void 0;
          }
          return Math.round(Number(e3[1]) * (s[e3[2]] || 1));
        }
        function parseViewbox(t3) {
          const e3 = t3.split(" ");
          return { height: parseLength(e3[3]), width: parseLength(e3[2]) };
        }
        function parseAttributes(t3) {
          const e3 = t3.match(r.width);
          const n3 = t3.match(r.height);
          const i2 = t3.match(r.viewbox);
          return { height: n3 && parseLength(n3[2]), viewbox: i2 && parseViewbox(i2[2]), width: e3 && parseLength(e3[2]) };
        }
        function calculateByDimensions(t3) {
          return { height: t3.height, width: t3.width };
        }
        function calculateByViewbox(t3, e3) {
          const n3 = e3.width / e3.height;
          if (t3.width) {
            return { height: Math.floor(t3.width / n3), width: t3.width };
          }
          if (t3.height) {
            return { height: t3.height, width: Math.floor(t3.height * n3) };
          }
          return { height: e3.height, width: e3.width };
        }
        e2.SVG = { validate(t3) {
          const e3 = String(t3);
          return n2.test(e3);
        }, calculate(t3) {
          const e3 = t3.toString("utf8").match(r.root);
          if (e3) {
            const t4 = parseAttributes(e3[0]);
            if (t4.width && t4.height) {
              return calculateByDimensions(t4);
            }
            if (t4.viewbox) {
              return calculateByViewbox(t4, t4.viewbox);
            }
          }
          throw new TypeError("Invalid SVG");
        } };
      }, 167: (t2, e2, n2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.TIFF = void 0;
        const r = n2(147);
        const i = n2(326);
        function readIFD(t3, e3, n3) {
          const s2 = i.readUInt(t3, 32, 4, n3);
          let o = 1024;
          const c = r.statSync(e3).size;
          if (s2 + o > c) {
            o = c - s2 - 10;
          }
          const a = Buffer.alloc(o);
          const u = r.openSync(e3, "r");
          r.readSync(u, a, 0, o, s2);
          r.closeSync(u);
          return a.slice(2);
        }
        function readValue(t3, e3) {
          const n3 = i.readUInt(t3, 16, 8, e3);
          const r2 = i.readUInt(t3, 16, 10, e3);
          return (r2 << 16) + n3;
        }
        function nextTag(t3) {
          if (t3.length > 24) {
            return t3.slice(12);
          }
        }
        function extractTags(t3, e3) {
          const n3 = {};
          let r2 = t3;
          while (r2 && r2.length) {
            const t4 = i.readUInt(r2, 16, 0, e3);
            const s2 = i.readUInt(r2, 16, 2, e3);
            const o = i.readUInt(r2, 32, 4, e3);
            if (t4 === 0) {
              break;
            } else {
              if (o === 1 && (s2 === 3 || s2 === 4)) {
                n3[t4] = readValue(r2, e3);
              }
              r2 = nextTag(r2);
            }
          }
          return n3;
        }
        function determineEndianness(t3) {
          const e3 = t3.toString("ascii", 0, 2);
          if ("II" === e3) {
            return "LE";
          } else if ("MM" === e3) {
            return "BE";
          }
        }
        const s = ["49492a00", "4d4d002a"];
        e2.TIFF = { validate(t3) {
          return s.includes(t3.toString("hex", 0, 4));
        }, calculate(t3, e3) {
          if (!e3) {
            throw new TypeError("Tiff doesn't support buffer");
          }
          const n3 = determineEndianness(t3) === "BE";
          const r2 = readIFD(t3, e3, n3);
          const i2 = extractTags(r2, n3);
          const s2 = i2[256];
          const o = i2[257];
          if (!s2 || !o) {
            throw new TypeError("Invalid Tiff. Missing tags");
          }
          return { height: o, width: s2 };
        } };
      }, 185: (t2, e2) => {
        "use strict";
        Object.defineProperty(e2, "__esModule", { value: true });
        e2.WEBP = void 0;
        function calculateExtended(t3) {
          return { height: 1 + t3.readUIntLE(7, 3), width: 1 + t3.readUIntLE(4, 3) };
        }
        function calculateLossless(t3) {
          return { height: 1 + ((t3[4] & 15) << 10 | t3[3] << 2 | (t3[2] & 192) >> 6), width: 1 + ((t3[2] & 63) << 8 | t3[1]) };
        }
        function calculateLossy(t3) {
          return { height: t3.readInt16LE(8) & 16383, width: t3.readInt16LE(6) & 16383 };
        }
        e2.WEBP = { validate(t3) {
          const e3 = "RIFF" === t3.toString("ascii", 0, 4);
          const n2 = "WEBP" === t3.toString("ascii", 8, 12);
          const r = "VP8" === t3.toString("ascii", 12, 15);
          return e3 && n2 && r;
        }, calculate(t3) {
          const e3 = t3.toString("ascii", 12, 16);
          t3 = t3.slice(20, 30);
          if (e3 === "VP8X") {
            const e4 = t3[0];
            const n3 = (e4 & 192) === 0;
            const r = (e4 & 1) === 0;
            if (n3 && r) {
              return calculateExtended(t3);
            } else {
              throw new TypeError("Invalid WebP");
            }
          }
          if (e3 === "VP8 " && t3[0] !== 47) {
            return calculateLossy(t3);
          }
          const n2 = t3.toString("hex", 3, 6);
          if (e3 === "VP8L" && n2 !== "9d012a") {
            return calculateLossless(t3);
          }
          throw new TypeError("Invalid WebP");
        } };
      }, 842: (t2, e2, n2) => {
        try {
          var r = n2(837);
          if (typeof r.inherits !== "function") throw "";
          t2.exports = r.inherits;
        } catch (e3) {
          t2.exports = n2(782);
        }
      }, 782: (t2) => {
        if (typeof Object.create === "function") {
          t2.exports = function inherits(t3, e2) {
            if (e2) {
              t3.super_ = e2;
              t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } });
            }
          };
        } else {
          t2.exports = function inherits(t3, e2) {
            if (e2) {
              t3.super_ = e2;
              var TempCtor = function() {
              };
              TempCtor.prototype = e2.prototype;
              t3.prototype = new TempCtor();
              t3.prototype.constructor = t3;
            }
          };
        }
      }, 927: (t2, e2, n2) => {
        var r = n2(842);
        var i = n2(361).EventEmitter;
        t2.exports = Queue;
        t2.exports["default"] = Queue;
        function Queue(t3) {
          if (!(this instanceof Queue)) {
            return new Queue(t3);
          }
          i.call(this);
          t3 = t3 || {};
          this.concurrency = t3.concurrency || Infinity;
          this.timeout = t3.timeout || 0;
          this.autostart = t3.autostart || false;
          this.results = t3.results || null;
          this.pending = 0;
          this.session = 0;
          this.running = false;
          this.jobs = [];
          this.timers = {};
        }
        r(Queue, i);
        var s = ["pop", "shift", "indexOf", "lastIndexOf"];
        s.forEach(function(t3) {
          Queue.prototype[t3] = function() {
            return Array.prototype[t3].apply(this.jobs, arguments);
          };
        });
        Queue.prototype.slice = function(t3, e3) {
          this.jobs = this.jobs.slice(t3, e3);
          return this;
        };
        Queue.prototype.reverse = function() {
          this.jobs.reverse();
          return this;
        };
        var o = ["push", "unshift", "splice"];
        o.forEach(function(t3) {
          Queue.prototype[t3] = function() {
            var e3 = Array.prototype[t3].apply(this.jobs, arguments);
            if (this.autostart) {
              this.start();
            }
            return e3;
          };
        });
        Object.defineProperty(Queue.prototype, "length", { get: function() {
          return this.pending + this.jobs.length;
        } });
        Queue.prototype.start = function(t3) {
          if (t3) {
            callOnErrorOrEnd.call(this, t3);
          }
          this.running = true;
          if (this.pending >= this.concurrency) {
            return;
          }
          if (this.jobs.length === 0) {
            if (this.pending === 0) {
              done.call(this);
            }
            return;
          }
          var e3 = this;
          var n3 = this.jobs.shift();
          var r2 = true;
          var i2 = this.session;
          var s2 = null;
          var o2 = false;
          var c = null;
          var a = n3.hasOwnProperty("timeout") ? n3.timeout : this.timeout;
          function next(t4, a2) {
            if (r2 && e3.session === i2) {
              r2 = false;
              e3.pending--;
              if (s2 !== null) {
                delete e3.timers[s2];
                clearTimeout(s2);
              }
              if (t4) {
                e3.emit("error", t4, n3);
              } else if (o2 === false) {
                if (c !== null) {
                  e3.results[c] = Array.prototype.slice.call(arguments, 1);
                }
                e3.emit("success", a2, n3);
              }
              if (e3.session === i2) {
                if (e3.pending === 0 && e3.jobs.length === 0) {
                  done.call(e3);
                } else if (e3.running) {
                  e3.start();
                }
              }
            }
          }
          if (a) {
            s2 = setTimeout(function() {
              o2 = true;
              if (e3.listeners("timeout").length > 0) {
                e3.emit("timeout", next, n3);
              } else {
                next();
              }
            }, a);
            this.timers[s2] = s2;
          }
          if (this.results) {
            c = this.results.length;
            this.results[c] = null;
          }
          this.pending++;
          e3.emit("start", n3);
          var u = n3(next);
          if (u && u.then && typeof u.then === "function") {
            u.then(function(t4) {
              return next(null, t4);
            }).catch(function(t4) {
              return next(t4 || true);
            });
          }
          if (this.running && this.jobs.length > 0) {
            this.start();
          }
        };
        Queue.prototype.stop = function() {
          this.running = false;
        };
        Queue.prototype.end = function(t3) {
          clearTimers.call(this);
          this.jobs.length = 0;
          this.pending = 0;
          done.call(this, t3);
        };
        function clearTimers() {
          for (var t3 in this.timers) {
            var e3 = this.timers[t3];
            delete this.timers[t3];
            clearTimeout(e3);
          }
        }
        function callOnErrorOrEnd(t3) {
          var e3 = this;
          this.on("error", onerror);
          this.on("end", onend);
          function onerror(t4) {
            e3.end(t4);
          }
          function onend(n3) {
            e3.removeListener("error", onerror);
            e3.removeListener("end", onend);
            t3(n3, this.results);
          }
        }
        function done(t3) {
          this.session++;
          this.running = false;
          this.emit("end", t3);
        }
      }, 361: (t2) => {
        "use strict";
        t2.exports = require_events();
      }, 147: (t2) => {
        "use strict";
        t2.exports = require_fs();
      }, 17: (t2) => {
        "use strict";
        t2.exports = require_path();
      }, 837: (t2) => {
        "use strict";
        t2.exports = require_util();
      } };
      var e = {};
      function __nccwpck_require__2(n2) {
        var r = e[n2];
        if (r !== void 0) {
          return r.exports;
        }
        var i = e[n2] = { exports: {} };
        var s = true;
        try {
          t[n2].call(i.exports, i, i.exports, __nccwpck_require__2);
          s = false;
        } finally {
          if (s) delete e[n2];
        }
        return i.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var n = __nccwpck_require__2(501);
      module2.exports = n;
    })();
  }
});

// ../../../node_modules/next/dist/compiled/is-animated/index.js
var require_is_animated = __commonJS({
  "../../../node_modules/next/dist/compiled/is-animated/index.js"(exports2, module2) {
    (() => {
      var e = { 199: (e2, r2, t2) => {
        "use strict";
        var a = t2(226);
        var i = t2(643);
        var n = t2(68);
        function isAnimated(e3) {
          if (a.isGIF(e3)) {
            return a.isAnimated(e3);
          }
          if (i.isPNG(e3)) {
            return i.isAnimated(e3);
          }
          if (n.isWebp(e3)) {
            return n.isAnimated(e3);
          }
          return false;
        }
        e2.exports = isAnimated;
      }, 226: (e2, r2) => {
        "use strict";
        function getDataBlocksLength(e3, r3) {
          var t2 = 0;
          while (e3[r3 + t2]) {
            t2 += e3[r3 + t2] + 1;
          }
          return t2 + 1;
        }
        r2.isGIF = function(e3) {
          var r3 = e3.slice(0, 3).toString("ascii");
          return r3 === "GIF";
        };
        r2.isAnimated = function(e3) {
          var r3, t2, a;
          var i = 0;
          var n = 0;
          a = e3.slice(0, 3).toString("ascii");
          if (a !== "GIF") {
            return false;
          }
          r3 = e3[10] & 128;
          t2 = e3[10] & 7;
          i += 6;
          i += 7;
          i += r3 ? 3 * Math.pow(2, t2 + 1) : 0;
          while (n < 2 && i < e3.length) {
            switch (e3[i]) {
              case 44:
                n += 1;
                r3 = e3[i + 9] & 128;
                t2 = e3[i + 9] & 7;
                i += 10;
                i += r3 ? 3 * Math.pow(2, t2 + 1) : 0;
                i += getDataBlocksLength(e3, i + 1) + 1;
                break;
              case 33:
                i += 2;
                i += getDataBlocksLength(e3, i);
                break;
              case 59:
                i = e3.length;
                break;
              default:
                i = e3.length;
                break;
            }
          }
          return n > 1;
        };
      }, 643: (e2, r2) => {
        r2.isPNG = function(e3) {
          var r3 = e3.slice(0, 8).toString("hex");
          return r3 === "89504e470d0a1a0a";
        };
        r2.isAnimated = function(e3) {
          var r3 = false;
          var t2 = false;
          var a = false;
          var i = null;
          var n = 8;
          while (n < e3.length) {
            var s = e3.readUInt32BE(n);
            var f = e3.slice(n + 4, n + 8).toString("ascii");
            switch (f) {
              case "acTL":
                r3 = true;
                break;
              case "IDAT":
                if (!r3) {
                  return false;
                }
                if (i !== "fcTL" && i !== "IDAT") {
                  return false;
                }
                t2 = true;
                break;
              case "fdAT":
                if (!t2) {
                  return false;
                }
                if (i !== "fcTL" && i !== "fdAT") {
                  return false;
                }
                a = true;
                break;
            }
            i = f;
            n += 4 + 4 + s + 4;
          }
          return r3 && t2 && a;
        };
      }, 68: (e2, r2) => {
        r2.isWebp = function(e3) {
          var r3 = [87, 69, 66, 80];
          for (var t2 = 0; t2 < r3.length; t2++) {
            if (e3[t2 + 8] !== r3[t2]) {
              return false;
            }
          }
          return true;
        };
        r2.isAnimated = function(e3) {
          var r3 = [65, 78, 73, 77];
          for (var t2 = 0; t2 < e3.length; t2++) {
            for (var a = 0; a < r3.length; a++) {
              if (e3[t2 + a] !== r3[a]) {
                break;
              }
            }
            if (a === r3.length) {
              return true;
            }
          }
          return false;
        };
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var a = r[t2];
        if (a !== void 0) {
          return a.exports;
        }
        var i = r[t2] = { exports: {} };
        var n = true;
        try {
          e[t2](i, i.exports, __nccwpck_require__2);
          n = false;
        } finally {
          if (n) delete r[t2];
        }
        return i.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(199);
      module2.exports = t;
    })();
  }
});

// browser-external:url
var require_url = __commonJS({
  "browser-external:url"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "url" has been externalized for browser compatibility. Cannot access "url.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/shared/lib/image-blur-svg.js
var require_image_blur_svg = __commonJS({
  "../../../node_modules/next/dist/shared/lib/image-blur-svg.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "getImageBlurSvg", {
      enumerable: true,
      get: function() {
        return getImageBlurSvg;
      }
    });
    function getImageBlurSvg(param) {
      let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;
      const std = 20;
      const svgWidth = blurWidth ? blurWidth * 40 : widthInt;
      const svgHeight = blurHeight ? blurHeight * 40 : heightInt;
      const viewBox = svgWidth && svgHeight ? "viewBox='0 0 " + svgWidth + " " + svgHeight + "'" : "";
      const preserveAspectRatio = viewBox ? "none" : objectFit === "contain" ? "xMidYMid" : objectFit === "cover" ? "xMidYMid slice" : "none";
      return "%3Csvg xmlns='http://www.w3.org/2000/svg' " + viewBox + "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" + preserveAspectRatio + "' style='filter: url(%23b);' href='" + blurDataURL + "'/%3E%3C/svg%3E";
    }
  }
});

// ../../../node_modules/next/dist/compiled/picomatch/index.js
var require_picomatch = __commonJS({
  "../../../node_modules/next/dist/compiled/picomatch/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var t = { 170: (t2, e2, u2) => {
        const n = u2(510);
        const isWindows = () => {
          if (typeof navigator !== "undefined" && navigator.platform) {
            const t3 = navigator.platform.toLowerCase();
            return t3 === "win32" || t3 === "windows";
          }
          if (typeof process !== "undefined" && process.platform) {
            return process.platform === "win32";
          }
          return false;
        };
        function picomatch(t3, e3, u3 = false) {
          if (e3 && (e3.windows === null || e3.windows === void 0)) {
            e3 = { ...e3, windows: isWindows() };
          }
          return n(t3, e3, u3);
        }
        Object.assign(picomatch, n);
        t2.exports = picomatch;
      }, 154: (t2) => {
        const e2 = "\\\\/";
        const u2 = `[^${e2}]`;
        const n = "\\.";
        const o = "\\+";
        const s = "\\?";
        const r = "\\/";
        const a = "(?=.)";
        const i = "[^/]";
        const c = `(?:${r}|$)`;
        const p = `(?:^|${r})`;
        const l = `${n}{1,2}${c}`;
        const f = `(?!${n})`;
        const A = `(?!${p}${l})`;
        const _ = `(?!${n}{0,1}${c})`;
        const R = `(?!${l})`;
        const E = `[^.${r}]`;
        const h = `${i}*?`;
        const g = "/";
        const b = { DOT_LITERAL: n, PLUS_LITERAL: o, QMARK_LITERAL: s, SLASH_LITERAL: r, ONE_CHAR: a, QMARK: i, END_ANCHOR: c, DOTS_SLASH: l, NO_DOT: f, NO_DOTS: A, NO_DOT_SLASH: _, NO_DOTS_SLASH: R, QMARK_NO_DOT: E, STAR: h, START_ANCHOR: p, SEP: g };
        const C = { ...b, SLASH_LITERAL: `[${e2}]`, QMARK: u2, STAR: `${u2}*?`, DOTS_SLASH: `${n}{1,2}(?:[${e2}]|$)`, NO_DOT: `(?!${n})`, NO_DOTS: `(?!(?:^|[${e2}])${n}{1,2}(?:[${e2}]|$))`, NO_DOT_SLASH: `(?!${n}{0,1}(?:[${e2}]|$))`, NO_DOTS_SLASH: `(?!${n}{1,2}(?:[${e2}]|$))`, QMARK_NO_DOT: `[^.${e2}]`, START_ANCHOR: `(?:^|[${e2}])`, END_ANCHOR: `(?:[${e2}]|$)`, SEP: "\\" };
        const y = { alnum: "a-zA-Z0-9", alpha: "a-zA-Z", ascii: "\\x00-\\x7F", blank: " \\t", cntrl: "\\x00-\\x1F\\x7F", digit: "0-9", graph: "\\x21-\\x7E", lower: "a-z", print: "\\x20-\\x7E ", punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~", space: " \\t\\r\\n\\v\\f", upper: "A-Z", word: "A-Za-z0-9_", xdigit: "A-Fa-f0-9" };
        t2.exports = { MAX_LENGTH: 1024 * 64, POSIX_REGEX_SOURCE: y, REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g, REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/, REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/, REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g, REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g, REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g, REPLACEMENTS: { "***": "*", "**/**": "**", "**/**/**": "**" }, CHAR_0: 48, CHAR_9: 57, CHAR_UPPERCASE_A: 65, CHAR_LOWERCASE_A: 97, CHAR_UPPERCASE_Z: 90, CHAR_LOWERCASE_Z: 122, CHAR_LEFT_PARENTHESES: 40, CHAR_RIGHT_PARENTHESES: 41, CHAR_ASTERISK: 42, CHAR_AMPERSAND: 38, CHAR_AT: 64, CHAR_BACKWARD_SLASH: 92, CHAR_CARRIAGE_RETURN: 13, CHAR_CIRCUMFLEX_ACCENT: 94, CHAR_COLON: 58, CHAR_COMMA: 44, CHAR_DOT: 46, CHAR_DOUBLE_QUOTE: 34, CHAR_EQUAL: 61, CHAR_EXCLAMATION_MARK: 33, CHAR_FORM_FEED: 12, CHAR_FORWARD_SLASH: 47, CHAR_GRAVE_ACCENT: 96, CHAR_HASH: 35, CHAR_HYPHEN_MINUS: 45, CHAR_LEFT_ANGLE_BRACKET: 60, CHAR_LEFT_CURLY_BRACE: 123, CHAR_LEFT_SQUARE_BRACKET: 91, CHAR_LINE_FEED: 10, CHAR_NO_BREAK_SPACE: 160, CHAR_PERCENT: 37, CHAR_PLUS: 43, CHAR_QUESTION_MARK: 63, CHAR_RIGHT_ANGLE_BRACKET: 62, CHAR_RIGHT_CURLY_BRACE: 125, CHAR_RIGHT_SQUARE_BRACKET: 93, CHAR_SEMICOLON: 59, CHAR_SINGLE_QUOTE: 39, CHAR_SPACE: 32, CHAR_TAB: 9, CHAR_UNDERSCORE: 95, CHAR_VERTICAL_LINE: 124, CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, extglobChars(t3) {
          return { "!": { type: "negate", open: "(?:(?!(?:", close: `))${t3.STAR})` }, "?": { type: "qmark", open: "(?:", close: ")?" }, "+": { type: "plus", open: "(?:", close: ")+" }, "*": { type: "star", open: "(?:", close: ")*" }, "@": { type: "at", open: "(?:", close: ")" } };
        }, globChars(t3) {
          return t3 === true ? C : b;
        } };
      }, 697: (t2, e2, u2) => {
        const n = u2(154);
        const o = u2(96);
        const { MAX_LENGTH: s, POSIX_REGEX_SOURCE: r, REGEX_NON_SPECIAL_CHARS: a, REGEX_SPECIAL_CHARS_BACKREF: i, REPLACEMENTS: c } = n;
        const expandRange = (t3, e3) => {
          if (typeof e3.expandRange === "function") {
            return e3.expandRange(...t3, e3);
          }
          t3.sort();
          const u3 = `[${t3.join("-")}]`;
          try {
            new RegExp(u3);
          } catch (e4) {
            return t3.map((t4) => o.escapeRegex(t4)).join("..");
          }
          return u3;
        };
        const syntaxError = (t3, e3) => `Missing ${t3}: "${e3}" - use "\\\\${e3}" to match literal characters`;
        const parse = (t3, e3) => {
          if (typeof t3 !== "string") {
            throw new TypeError("Expected a string");
          }
          t3 = c[t3] || t3;
          const u3 = { ...e3 };
          const p = typeof u3.maxLength === "number" ? Math.min(s, u3.maxLength) : s;
          let l = t3.length;
          if (l > p) {
            throw new SyntaxError(`Input length: ${l}, exceeds maximum allowed length: ${p}`);
          }
          const f = { type: "bos", value: "", output: u3.prepend || "" };
          const A = [f];
          const _ = u3.capture ? "" : "?:";
          const R = n.globChars(u3.windows);
          const E = n.extglobChars(R);
          const { DOT_LITERAL: h, PLUS_LITERAL: g, SLASH_LITERAL: b, ONE_CHAR: C, DOTS_SLASH: y, NO_DOT: $, NO_DOT_SLASH: x, NO_DOTS_SLASH: S, QMARK: H, QMARK_NO_DOT: v, STAR: d, START_ANCHOR: L } = R;
          const globstar = (t4) => `(${_}(?:(?!${L}${t4.dot ? y : h}).)*?)`;
          const T = u3.dot ? "" : $;
          const O = u3.dot ? H : v;
          let k = u3.bash === true ? globstar(u3) : d;
          if (u3.capture) {
            k = `(${k})`;
          }
          if (typeof u3.noext === "boolean") {
            u3.noextglob = u3.noext;
          }
          const m = { input: t3, index: -1, start: 0, dot: u3.dot === true, consumed: "", output: "", prefix: "", backtrack: false, negated: false, brackets: 0, braces: 0, parens: 0, quotes: 0, globstar: false, tokens: A };
          t3 = o.removePrefix(t3, m);
          l = t3.length;
          const w = [];
          const N = [];
          const I = [];
          let B = f;
          let G;
          const eos = () => m.index === l - 1;
          const D = m.peek = (e4 = 1) => t3[m.index + e4];
          const M = m.advance = () => t3[++m.index] || "";
          const remaining = () => t3.slice(m.index + 1);
          const consume = (t4 = "", e4 = 0) => {
            m.consumed += t4;
            m.index += e4;
          };
          const append = (t4) => {
            m.output += t4.output != null ? t4.output : t4.value;
            consume(t4.value);
          };
          const negate = () => {
            let t4 = 1;
            while (D() === "!" && (D(2) !== "(" || D(3) === "?")) {
              M();
              m.start++;
              t4++;
            }
            if (t4 % 2 === 0) {
              return false;
            }
            m.negated = true;
            m.start++;
            return true;
          };
          const increment = (t4) => {
            m[t4]++;
            I.push(t4);
          };
          const decrement = (t4) => {
            m[t4]--;
            I.pop();
          };
          const push = (t4) => {
            if (B.type === "globstar") {
              const e4 = m.braces > 0 && (t4.type === "comma" || t4.type === "brace");
              const u4 = t4.extglob === true || w.length && (t4.type === "pipe" || t4.type === "paren");
              if (t4.type !== "slash" && t4.type !== "paren" && !e4 && !u4) {
                m.output = m.output.slice(0, -B.output.length);
                B.type = "star";
                B.value = "*";
                B.output = k;
                m.output += B.output;
              }
            }
            if (w.length && t4.type !== "paren") {
              w[w.length - 1].inner += t4.value;
            }
            if (t4.value || t4.output) append(t4);
            if (B && B.type === "text" && t4.type === "text") {
              B.output = (B.output || B.value) + t4.value;
              B.value += t4.value;
              return;
            }
            t4.prev = B;
            A.push(t4);
            B = t4;
          };
          const extglobOpen = (t4, e4) => {
            const n2 = { ...E[e4], conditions: 1, inner: "" };
            n2.prev = B;
            n2.parens = m.parens;
            n2.output = m.output;
            const o2 = (u3.capture ? "(" : "") + n2.open;
            increment("parens");
            push({ type: t4, value: e4, output: m.output ? "" : C });
            push({ type: "paren", extglob: true, value: M(), output: o2 });
            w.push(n2);
          };
          const extglobClose = (t4) => {
            let n2 = t4.close + (u3.capture ? ")" : "");
            let o2;
            if (t4.type === "negate") {
              let s2 = k;
              if (t4.inner && t4.inner.length > 1 && t4.inner.includes("/")) {
                s2 = globstar(u3);
              }
              if (s2 !== k || eos() || /^\)+$/.test(remaining())) {
                n2 = t4.close = `)$))${s2}`;
              }
              if (t4.inner.includes("*") && (o2 = remaining()) && /^\.[^\\/.]+$/.test(o2)) {
                const u4 = parse(o2, { ...e3, fastpaths: false }).output;
                n2 = t4.close = `)${u4})${s2})`;
              }
              if (t4.prev.type === "bos") {
                m.negatedExtglob = true;
              }
            }
            push({ type: "paren", extglob: true, value: G, output: n2 });
            decrement("parens");
          };
          if (u3.fastpaths !== false && !/(^[*!]|[/()[\]{}"])/.test(t3)) {
            let n2 = false;
            let s2 = t3.replace(i, (t4, e4, u4, o2, s3, r2) => {
              if (o2 === "\\") {
                n2 = true;
                return t4;
              }
              if (o2 === "?") {
                if (e4) {
                  return e4 + o2 + (s3 ? H.repeat(s3.length) : "");
                }
                if (r2 === 0) {
                  return O + (s3 ? H.repeat(s3.length) : "");
                }
                return H.repeat(u4.length);
              }
              if (o2 === ".") {
                return h.repeat(u4.length);
              }
              if (o2 === "*") {
                if (e4) {
                  return e4 + o2 + (s3 ? k : "");
                }
                return k;
              }
              return e4 ? t4 : `\\${t4}`;
            });
            if (n2 === true) {
              if (u3.unescape === true) {
                s2 = s2.replace(/\\/g, "");
              } else {
                s2 = s2.replace(/\\+/g, (t4) => t4.length % 2 === 0 ? "\\\\" : t4 ? "\\" : "");
              }
            }
            if (s2 === t3 && u3.contains === true) {
              m.output = t3;
              return m;
            }
            m.output = o.wrapOutput(s2, m, e3);
            return m;
          }
          while (!eos()) {
            G = M();
            if (G === "\0") {
              continue;
            }
            if (G === "\\") {
              const t4 = D();
              if (t4 === "/" && u3.bash !== true) {
                continue;
              }
              if (t4 === "." || t4 === ";") {
                continue;
              }
              if (!t4) {
                G += "\\";
                push({ type: "text", value: G });
                continue;
              }
              const e5 = /^\\+/.exec(remaining());
              let n3 = 0;
              if (e5 && e5[0].length > 2) {
                n3 = e5[0].length;
                m.index += n3;
                if (n3 % 2 !== 0) {
                  G += "\\";
                }
              }
              if (u3.unescape === true) {
                G = M();
              } else {
                G += M();
              }
              if (m.brackets === 0) {
                push({ type: "text", value: G });
                continue;
              }
            }
            if (m.brackets > 0 && (G !== "]" || B.value === "[" || B.value === "[^")) {
              if (u3.posix !== false && G === ":") {
                const t4 = B.value.slice(1);
                if (t4.includes("[")) {
                  B.posix = true;
                  if (t4.includes(":")) {
                    const t5 = B.value.lastIndexOf("[");
                    const e5 = B.value.slice(0, t5);
                    const u4 = B.value.slice(t5 + 2);
                    const n3 = r[u4];
                    if (n3) {
                      B.value = e5 + n3;
                      m.backtrack = true;
                      M();
                      if (!f.output && A.indexOf(B) === 1) {
                        f.output = C;
                      }
                      continue;
                    }
                  }
                }
              }
              if (G === "[" && D() !== ":" || G === "-" && D() === "]") {
                G = `\\${G}`;
              }
              if (G === "]" && (B.value === "[" || B.value === "[^")) {
                G = `\\${G}`;
              }
              if (u3.posix === true && G === "!" && B.value === "[") {
                G = "^";
              }
              B.value += G;
              append({ value: G });
              continue;
            }
            if (m.quotes === 1 && G !== '"') {
              G = o.escapeRegex(G);
              B.value += G;
              append({ value: G });
              continue;
            }
            if (G === '"') {
              m.quotes = m.quotes === 1 ? 0 : 1;
              if (u3.keepQuotes === true) {
                push({ type: "text", value: G });
              }
              continue;
            }
            if (G === "(") {
              increment("parens");
              push({ type: "paren", value: G });
              continue;
            }
            if (G === ")") {
              if (m.parens === 0 && u3.strictBrackets === true) {
                throw new SyntaxError(syntaxError("opening", "("));
              }
              const t4 = w[w.length - 1];
              if (t4 && m.parens === t4.parens + 1) {
                extglobClose(w.pop());
                continue;
              }
              push({ type: "paren", value: G, output: m.parens ? ")" : "\\)" });
              decrement("parens");
              continue;
            }
            if (G === "[") {
              if (u3.nobracket === true || !remaining().includes("]")) {
                if (u3.nobracket !== true && u3.strictBrackets === true) {
                  throw new SyntaxError(syntaxError("closing", "]"));
                }
                G = `\\${G}`;
              } else {
                increment("brackets");
              }
              push({ type: "bracket", value: G });
              continue;
            }
            if (G === "]") {
              if (u3.nobracket === true || B && B.type === "bracket" && B.value.length === 1) {
                push({ type: "text", value: G, output: `\\${G}` });
                continue;
              }
              if (m.brackets === 0) {
                if (u3.strictBrackets === true) {
                  throw new SyntaxError(syntaxError("opening", "["));
                }
                push({ type: "text", value: G, output: `\\${G}` });
                continue;
              }
              decrement("brackets");
              const t4 = B.value.slice(1);
              if (B.posix !== true && t4[0] === "^" && !t4.includes("/")) {
                G = `/${G}`;
              }
              B.value += G;
              append({ value: G });
              if (u3.literalBrackets === false || o.hasRegexChars(t4)) {
                continue;
              }
              const e5 = o.escapeRegex(B.value);
              m.output = m.output.slice(0, -B.value.length);
              if (u3.literalBrackets === true) {
                m.output += e5;
                B.value = e5;
                continue;
              }
              B.value = `(${_}${e5}|${B.value})`;
              m.output += B.value;
              continue;
            }
            if (G === "{" && u3.nobrace !== true) {
              increment("braces");
              const t4 = { type: "brace", value: G, output: "(", outputIndex: m.output.length, tokensIndex: m.tokens.length };
              N.push(t4);
              push(t4);
              continue;
            }
            if (G === "}") {
              const t4 = N[N.length - 1];
              if (u3.nobrace === true || !t4) {
                push({ type: "text", value: G, output: G });
                continue;
              }
              let e5 = ")";
              if (t4.dots === true) {
                const t5 = A.slice();
                const n3 = [];
                for (let e6 = t5.length - 1; e6 >= 0; e6--) {
                  A.pop();
                  if (t5[e6].type === "brace") {
                    break;
                  }
                  if (t5[e6].type !== "dots") {
                    n3.unshift(t5[e6].value);
                  }
                }
                e5 = expandRange(n3, u3);
                m.backtrack = true;
              }
              if (t4.comma !== true && t4.dots !== true) {
                const u4 = m.output.slice(0, t4.outputIndex);
                const n3 = m.tokens.slice(t4.tokensIndex);
                t4.value = t4.output = "\\{";
                G = e5 = "\\}";
                m.output = u4;
                for (const t5 of n3) {
                  m.output += t5.output || t5.value;
                }
              }
              push({ type: "brace", value: G, output: e5 });
              decrement("braces");
              N.pop();
              continue;
            }
            if (G === "|") {
              if (w.length > 0) {
                w[w.length - 1].conditions++;
              }
              push({ type: "text", value: G });
              continue;
            }
            if (G === ",") {
              let t4 = G;
              const e5 = N[N.length - 1];
              if (e5 && I[I.length - 1] === "braces") {
                e5.comma = true;
                t4 = "|";
              }
              push({ type: "comma", value: G, output: t4 });
              continue;
            }
            if (G === "/") {
              if (B.type === "dot" && m.index === m.start + 1) {
                m.start = m.index + 1;
                m.consumed = "";
                m.output = "";
                A.pop();
                B = f;
                continue;
              }
              push({ type: "slash", value: G, output: b });
              continue;
            }
            if (G === ".") {
              if (m.braces > 0 && B.type === "dot") {
                if (B.value === ".") B.output = h;
                const t4 = N[N.length - 1];
                B.type = "dots";
                B.output += G;
                B.value += G;
                t4.dots = true;
                continue;
              }
              if (m.braces + m.parens === 0 && B.type !== "bos" && B.type !== "slash") {
                push({ type: "text", value: G, output: h });
                continue;
              }
              push({ type: "dot", value: G, output: h });
              continue;
            }
            if (G === "?") {
              const t4 = B && B.value === "(";
              if (!t4 && u3.noextglob !== true && D() === "(" && D(2) !== "?") {
                extglobOpen("qmark", G);
                continue;
              }
              if (B && B.type === "paren") {
                const t5 = D();
                let e5 = G;
                if (B.value === "(" && !/[!=<:]/.test(t5) || t5 === "<" && !/<([!=]|\w+>)/.test(remaining())) {
                  e5 = `\\${G}`;
                }
                push({ type: "text", value: G, output: e5 });
                continue;
              }
              if (u3.dot !== true && (B.type === "slash" || B.type === "bos")) {
                push({ type: "qmark", value: G, output: v });
                continue;
              }
              push({ type: "qmark", value: G, output: H });
              continue;
            }
            if (G === "!") {
              if (u3.noextglob !== true && D() === "(") {
                if (D(2) !== "?" || !/[!=<:]/.test(D(3))) {
                  extglobOpen("negate", G);
                  continue;
                }
              }
              if (u3.nonegate !== true && m.index === 0) {
                negate();
                continue;
              }
            }
            if (G === "+") {
              if (u3.noextglob !== true && D() === "(" && D(2) !== "?") {
                extglobOpen("plus", G);
                continue;
              }
              if (B && B.value === "(" || u3.regex === false) {
                push({ type: "plus", value: G, output: g });
                continue;
              }
              if (B && (B.type === "bracket" || B.type === "paren" || B.type === "brace") || m.parens > 0) {
                push({ type: "plus", value: G });
                continue;
              }
              push({ type: "plus", value: g });
              continue;
            }
            if (G === "@") {
              if (u3.noextglob !== true && D() === "(" && D(2) !== "?") {
                push({ type: "at", extglob: true, value: G, output: "" });
                continue;
              }
              push({ type: "text", value: G });
              continue;
            }
            if (G !== "*") {
              if (G === "$" || G === "^") {
                G = `\\${G}`;
              }
              const t4 = a.exec(remaining());
              if (t4) {
                G += t4[0];
                m.index += t4[0].length;
              }
              push({ type: "text", value: G });
              continue;
            }
            if (B && (B.type === "globstar" || B.star === true)) {
              B.type = "star";
              B.star = true;
              B.value += G;
              B.output = k;
              m.backtrack = true;
              m.globstar = true;
              consume(G);
              continue;
            }
            let e4 = remaining();
            if (u3.noextglob !== true && /^\([^?]/.test(e4)) {
              extglobOpen("star", G);
              continue;
            }
            if (B.type === "star") {
              if (u3.noglobstar === true) {
                consume(G);
                continue;
              }
              const n3 = B.prev;
              const o2 = n3.prev;
              const s2 = n3.type === "slash" || n3.type === "bos";
              const r2 = o2 && (o2.type === "star" || o2.type === "globstar");
              if (u3.bash === true && (!s2 || e4[0] && e4[0] !== "/")) {
                push({ type: "star", value: G, output: "" });
                continue;
              }
              const a2 = m.braces > 0 && (n3.type === "comma" || n3.type === "brace");
              const i2 = w.length && (n3.type === "pipe" || n3.type === "paren");
              if (!s2 && n3.type !== "paren" && !a2 && !i2) {
                push({ type: "star", value: G, output: "" });
                continue;
              }
              while (e4.slice(0, 3) === "/**") {
                const u4 = t3[m.index + 4];
                if (u4 && u4 !== "/") {
                  break;
                }
                e4 = e4.slice(3);
                consume("/**", 3);
              }
              if (n3.type === "bos" && eos()) {
                B.type = "globstar";
                B.value += G;
                B.output = globstar(u3);
                m.output = B.output;
                m.globstar = true;
                consume(G);
                continue;
              }
              if (n3.type === "slash" && n3.prev.type !== "bos" && !r2 && eos()) {
                m.output = m.output.slice(0, -(n3.output + B.output).length);
                n3.output = `(?:${n3.output}`;
                B.type = "globstar";
                B.output = globstar(u3) + (u3.strictSlashes ? ")" : "|$)");
                B.value += G;
                m.globstar = true;
                m.output += n3.output + B.output;
                consume(G);
                continue;
              }
              if (n3.type === "slash" && n3.prev.type !== "bos" && e4[0] === "/") {
                const t4 = e4[1] !== void 0 ? "|$" : "";
                m.output = m.output.slice(0, -(n3.output + B.output).length);
                n3.output = `(?:${n3.output}`;
                B.type = "globstar";
                B.output = `${globstar(u3)}${b}|${b}${t4})`;
                B.value += G;
                m.output += n3.output + B.output;
                m.globstar = true;
                consume(G + M());
                push({ type: "slash", value: "/", output: "" });
                continue;
              }
              if (n3.type === "bos" && e4[0] === "/") {
                B.type = "globstar";
                B.value += G;
                B.output = `(?:^|${b}|${globstar(u3)}${b})`;
                m.output = B.output;
                m.globstar = true;
                consume(G + M());
                push({ type: "slash", value: "/", output: "" });
                continue;
              }
              m.output = m.output.slice(0, -B.output.length);
              B.type = "globstar";
              B.output = globstar(u3);
              B.value += G;
              m.output += B.output;
              m.globstar = true;
              consume(G);
              continue;
            }
            const n2 = { type: "star", value: G, output: k };
            if (u3.bash === true) {
              n2.output = ".*?";
              if (B.type === "bos" || B.type === "slash") {
                n2.output = T + n2.output;
              }
              push(n2);
              continue;
            }
            if (B && (B.type === "bracket" || B.type === "paren") && u3.regex === true) {
              n2.output = G;
              push(n2);
              continue;
            }
            if (m.index === m.start || B.type === "slash" || B.type === "dot") {
              if (B.type === "dot") {
                m.output += x;
                B.output += x;
              } else if (u3.dot === true) {
                m.output += S;
                B.output += S;
              } else {
                m.output += T;
                B.output += T;
              }
              if (D() !== "*") {
                m.output += C;
                B.output += C;
              }
            }
            push(n2);
          }
          while (m.brackets > 0) {
            if (u3.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "]"));
            m.output = o.escapeLast(m.output, "[");
            decrement("brackets");
          }
          while (m.parens > 0) {
            if (u3.strictBrackets === true) throw new SyntaxError(syntaxError("closing", ")"));
            m.output = o.escapeLast(m.output, "(");
            decrement("parens");
          }
          while (m.braces > 0) {
            if (u3.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "}"));
            m.output = o.escapeLast(m.output, "{");
            decrement("braces");
          }
          if (u3.strictSlashes !== true && (B.type === "star" || B.type === "bracket")) {
            push({ type: "maybe_slash", value: "", output: `${b}?` });
          }
          if (m.backtrack === true) {
            m.output = "";
            for (const t4 of m.tokens) {
              m.output += t4.output != null ? t4.output : t4.value;
              if (t4.suffix) {
                m.output += t4.suffix;
              }
            }
          }
          return m;
        };
        parse.fastpaths = (t3, e3) => {
          const u3 = { ...e3 };
          const r2 = typeof u3.maxLength === "number" ? Math.min(s, u3.maxLength) : s;
          const a2 = t3.length;
          if (a2 > r2) {
            throw new SyntaxError(`Input length: ${a2}, exceeds maximum allowed length: ${r2}`);
          }
          t3 = c[t3] || t3;
          const { DOT_LITERAL: i2, SLASH_LITERAL: p, ONE_CHAR: l, DOTS_SLASH: f, NO_DOT: A, NO_DOTS: _, NO_DOTS_SLASH: R, STAR: E, START_ANCHOR: h } = n.globChars(u3.windows);
          const g = u3.dot ? _ : A;
          const b = u3.dot ? R : A;
          const C = u3.capture ? "" : "?:";
          const y = { negated: false, prefix: "" };
          let $ = u3.bash === true ? ".*?" : E;
          if (u3.capture) {
            $ = `(${$})`;
          }
          const globstar = (t4) => {
            if (t4.noglobstar === true) return $;
            return `(${C}(?:(?!${h}${t4.dot ? f : i2}).)*?)`;
          };
          const create = (t4) => {
            switch (t4) {
              case "*":
                return `${g}${l}${$}`;
              case ".*":
                return `${i2}${l}${$}`;
              case "*.*":
                return `${g}${$}${i2}${l}${$}`;
              case "*/*":
                return `${g}${$}${p}${l}${b}${$}`;
              case "**":
                return g + globstar(u3);
              case "**/*":
                return `(?:${g}${globstar(u3)}${p})?${b}${l}${$}`;
              case "**/*.*":
                return `(?:${g}${globstar(u3)}${p})?${b}${$}${i2}${l}${$}`;
              case "**/.*":
                return `(?:${g}${globstar(u3)}${p})?${i2}${l}${$}`;
              default: {
                const e4 = /^(.*?)\.(\w+)$/.exec(t4);
                if (!e4) return;
                const u4 = create(e4[1]);
                if (!u4) return;
                return u4 + i2 + e4[2];
              }
            }
          };
          const x = o.removePrefix(t3, y);
          let S = create(x);
          if (S && u3.strictSlashes !== true) {
            S += `${p}?`;
          }
          return S;
        };
        t2.exports = parse;
      }, 510: (t2, e2, u2) => {
        const n = u2(716);
        const o = u2(697);
        const s = u2(96);
        const r = u2(154);
        const isObject = (t3) => t3 && typeof t3 === "object" && !Array.isArray(t3);
        const picomatch = (t3, e3, u3 = false) => {
          if (Array.isArray(t3)) {
            const n3 = t3.map((t4) => picomatch(t4, e3, u3));
            const arrayMatcher = (t4) => {
              for (const e4 of n3) {
                const u4 = e4(t4);
                if (u4) return u4;
              }
              return false;
            };
            return arrayMatcher;
          }
          const n2 = isObject(t3) && t3.tokens && t3.input;
          if (t3 === "" || typeof t3 !== "string" && !n2) {
            throw new TypeError("Expected pattern to be a non-empty string");
          }
          const o2 = e3 || {};
          const s2 = o2.windows;
          const r2 = n2 ? picomatch.compileRe(t3, e3) : picomatch.makeRe(t3, e3, false, true);
          const a = r2.state;
          delete r2.state;
          let isIgnored = () => false;
          if (o2.ignore) {
            const t4 = { ...e3, ignore: null, onMatch: null, onResult: null };
            isIgnored = picomatch(o2.ignore, t4, u3);
          }
          const matcher = (u4, n3 = false) => {
            const { isMatch: i, match: c, output: p } = picomatch.test(u4, r2, e3, { glob: t3, posix: s2 });
            const l = { glob: t3, state: a, regex: r2, posix: s2, input: u4, output: p, match: c, isMatch: i };
            if (typeof o2.onResult === "function") {
              o2.onResult(l);
            }
            if (i === false) {
              l.isMatch = false;
              return n3 ? l : false;
            }
            if (isIgnored(u4)) {
              if (typeof o2.onIgnore === "function") {
                o2.onIgnore(l);
              }
              l.isMatch = false;
              return n3 ? l : false;
            }
            if (typeof o2.onMatch === "function") {
              o2.onMatch(l);
            }
            return n3 ? l : true;
          };
          if (u3) {
            matcher.state = a;
          }
          return matcher;
        };
        picomatch.test = (t3, e3, u3, { glob: n2, posix: o2 } = {}) => {
          if (typeof t3 !== "string") {
            throw new TypeError("Expected input to be a string");
          }
          if (t3 === "") {
            return { isMatch: false, output: "" };
          }
          const r2 = u3 || {};
          const a = r2.format || (o2 ? s.toPosixSlashes : null);
          let i = t3 === n2;
          let c = i && a ? a(t3) : t3;
          if (i === false) {
            c = a ? a(t3) : t3;
            i = c === n2;
          }
          if (i === false || r2.capture === true) {
            if (r2.matchBase === true || r2.basename === true) {
              i = picomatch.matchBase(t3, e3, u3, o2);
            } else {
              i = e3.exec(c);
            }
          }
          return { isMatch: Boolean(i), match: i, output: c };
        };
        picomatch.matchBase = (t3, e3, u3) => {
          const n2 = e3 instanceof RegExp ? e3 : picomatch.makeRe(e3, u3);
          return n2.test(s.basename(t3));
        };
        picomatch.isMatch = (t3, e3, u3) => picomatch(e3, u3)(t3);
        picomatch.parse = (t3, e3) => {
          if (Array.isArray(t3)) return t3.map((t4) => picomatch.parse(t4, e3));
          return o(t3, { ...e3, fastpaths: false });
        };
        picomatch.scan = (t3, e3) => n(t3, e3);
        picomatch.compileRe = (t3, e3, u3 = false, n2 = false) => {
          if (u3 === true) {
            return t3.output;
          }
          const o2 = e3 || {};
          const s2 = o2.contains ? "" : "^";
          const r2 = o2.contains ? "" : "$";
          let a = `${s2}(?:${t3.output})${r2}`;
          if (t3 && t3.negated === true) {
            a = `^(?!${a}).*$`;
          }
          const i = picomatch.toRegex(a, e3);
          if (n2 === true) {
            i.state = t3;
          }
          return i;
        };
        picomatch.makeRe = (t3, e3 = {}, u3 = false, n2 = false) => {
          if (!t3 || typeof t3 !== "string") {
            throw new TypeError("Expected a non-empty string");
          }
          let s2 = { negated: false, fastpaths: true };
          if (e3.fastpaths !== false && (t3[0] === "." || t3[0] === "*")) {
            s2.output = o.fastpaths(t3, e3);
          }
          if (!s2.output) {
            s2 = o(t3, e3);
          }
          return picomatch.compileRe(s2, e3, u3, n2);
        };
        picomatch.toRegex = (t3, e3) => {
          try {
            const u3 = e3 || {};
            return new RegExp(t3, u3.flags || (u3.nocase ? "i" : ""));
          } catch (t4) {
            if (e3 && e3.debug === true) throw t4;
            return /$^/;
          }
        };
        picomatch.constants = r;
        t2.exports = picomatch;
      }, 716: (t2, e2, u2) => {
        const n = u2(96);
        const { CHAR_ASTERISK: o, CHAR_AT: s, CHAR_BACKWARD_SLASH: r, CHAR_COMMA: a, CHAR_DOT: i, CHAR_EXCLAMATION_MARK: c, CHAR_FORWARD_SLASH: p, CHAR_LEFT_CURLY_BRACE: l, CHAR_LEFT_PARENTHESES: f, CHAR_LEFT_SQUARE_BRACKET: A, CHAR_PLUS: _, CHAR_QUESTION_MARK: R, CHAR_RIGHT_CURLY_BRACE: E, CHAR_RIGHT_PARENTHESES: h, CHAR_RIGHT_SQUARE_BRACKET: g } = u2(154);
        const isPathSeparator = (t3) => t3 === p || t3 === r;
        const depth = (t3) => {
          if (t3.isPrefix !== true) {
            t3.depth = t3.isGlobstar ? Infinity : 1;
          }
        };
        const scan = (t3, e3) => {
          const u3 = e3 || {};
          const b = t3.length - 1;
          const C = u3.parts === true || u3.scanToEnd === true;
          const y = [];
          const $ = [];
          const x = [];
          let S = t3;
          let H = -1;
          let v = 0;
          let d = 0;
          let L = false;
          let T = false;
          let O = false;
          let k = false;
          let m = false;
          let w = false;
          let N = false;
          let I = false;
          let B = false;
          let G = false;
          let D = 0;
          let M;
          let P;
          let K = { value: "", depth: 0, isGlob: false };
          const eos = () => H >= b;
          const peek = () => S.charCodeAt(H + 1);
          const advance = () => {
            M = P;
            return S.charCodeAt(++H);
          };
          while (H < b) {
            P = advance();
            let t4;
            if (P === r) {
              N = K.backslashes = true;
              P = advance();
              if (P === l) {
                w = true;
              }
              continue;
            }
            if (w === true || P === l) {
              D++;
              while (eos() !== true && (P = advance())) {
                if (P === r) {
                  N = K.backslashes = true;
                  advance();
                  continue;
                }
                if (P === l) {
                  D++;
                  continue;
                }
                if (w !== true && P === i && (P = advance()) === i) {
                  L = K.isBrace = true;
                  O = K.isGlob = true;
                  G = true;
                  if (C === true) {
                    continue;
                  }
                  break;
                }
                if (w !== true && P === a) {
                  L = K.isBrace = true;
                  O = K.isGlob = true;
                  G = true;
                  if (C === true) {
                    continue;
                  }
                  break;
                }
                if (P === E) {
                  D--;
                  if (D === 0) {
                    w = false;
                    L = K.isBrace = true;
                    G = true;
                    break;
                  }
                }
              }
              if (C === true) {
                continue;
              }
              break;
            }
            if (P === p) {
              y.push(H);
              $.push(K);
              K = { value: "", depth: 0, isGlob: false };
              if (G === true) continue;
              if (M === i && H === v + 1) {
                v += 2;
                continue;
              }
              d = H + 1;
              continue;
            }
            if (u3.noext !== true) {
              const t5 = P === _ || P === s || P === o || P === R || P === c;
              if (t5 === true && peek() === f) {
                O = K.isGlob = true;
                k = K.isExtglob = true;
                G = true;
                if (P === c && H === v) {
                  B = true;
                }
                if (C === true) {
                  while (eos() !== true && (P = advance())) {
                    if (P === r) {
                      N = K.backslashes = true;
                      P = advance();
                      continue;
                    }
                    if (P === h) {
                      O = K.isGlob = true;
                      G = true;
                      break;
                    }
                  }
                  continue;
                }
                break;
              }
            }
            if (P === o) {
              if (M === o) m = K.isGlobstar = true;
              O = K.isGlob = true;
              G = true;
              if (C === true) {
                continue;
              }
              break;
            }
            if (P === R) {
              O = K.isGlob = true;
              G = true;
              if (C === true) {
                continue;
              }
              break;
            }
            if (P === A) {
              while (eos() !== true && (t4 = advance())) {
                if (t4 === r) {
                  N = K.backslashes = true;
                  advance();
                  continue;
                }
                if (t4 === g) {
                  T = K.isBracket = true;
                  O = K.isGlob = true;
                  G = true;
                  break;
                }
              }
              if (C === true) {
                continue;
              }
              break;
            }
            if (u3.nonegate !== true && P === c && H === v) {
              I = K.negated = true;
              v++;
              continue;
            }
            if (u3.noparen !== true && P === f) {
              O = K.isGlob = true;
              if (C === true) {
                while (eos() !== true && (P = advance())) {
                  if (P === f) {
                    N = K.backslashes = true;
                    P = advance();
                    continue;
                  }
                  if (P === h) {
                    G = true;
                    break;
                  }
                }
                continue;
              }
              break;
            }
            if (O === true) {
              G = true;
              if (C === true) {
                continue;
              }
              break;
            }
          }
          if (u3.noext === true) {
            k = false;
            O = false;
          }
          let U = S;
          let X = "";
          let F = "";
          if (v > 0) {
            X = S.slice(0, v);
            S = S.slice(v);
            d -= v;
          }
          if (U && O === true && d > 0) {
            U = S.slice(0, d);
            F = S.slice(d);
          } else if (O === true) {
            U = "";
            F = S;
          } else {
            U = S;
          }
          if (U && U !== "" && U !== "/" && U !== S) {
            if (isPathSeparator(U.charCodeAt(U.length - 1))) {
              U = U.slice(0, -1);
            }
          }
          if (u3.unescape === true) {
            if (F) F = n.removeBackslashes(F);
            if (U && N === true) {
              U = n.removeBackslashes(U);
            }
          }
          const Q = { prefix: X, input: t3, start: v, base: U, glob: F, isBrace: L, isBracket: T, isGlob: O, isExtglob: k, isGlobstar: m, negated: I, negatedExtglob: B };
          if (u3.tokens === true) {
            Q.maxDepth = 0;
            if (!isPathSeparator(P)) {
              $.push(K);
            }
            Q.tokens = $;
          }
          if (u3.parts === true || u3.tokens === true) {
            let e4;
            for (let n2 = 0; n2 < y.length; n2++) {
              const o2 = e4 ? e4 + 1 : v;
              const s2 = y[n2];
              const r2 = t3.slice(o2, s2);
              if (u3.tokens) {
                if (n2 === 0 && v !== 0) {
                  $[n2].isPrefix = true;
                  $[n2].value = X;
                } else {
                  $[n2].value = r2;
                }
                depth($[n2]);
                Q.maxDepth += $[n2].depth;
              }
              if (n2 !== 0 || r2 !== "") {
                x.push(r2);
              }
              e4 = s2;
            }
            if (e4 && e4 + 1 < t3.length) {
              const n2 = t3.slice(e4 + 1);
              x.push(n2);
              if (u3.tokens) {
                $[$.length - 1].value = n2;
                depth($[$.length - 1]);
                Q.maxDepth += $[$.length - 1].depth;
              }
            }
            Q.slashes = y;
            Q.parts = x;
          }
          return Q;
        };
        t2.exports = scan;
      }, 96: (t2, e2, u2) => {
        const { REGEX_BACKSLASH: n, REGEX_REMOVE_BACKSLASH: o, REGEX_SPECIAL_CHARS: s, REGEX_SPECIAL_CHARS_GLOBAL: r } = u2(154);
        e2.isObject = (t3) => t3 !== null && typeof t3 === "object" && !Array.isArray(t3);
        e2.hasRegexChars = (t3) => s.test(t3);
        e2.isRegexChar = (t3) => t3.length === 1 && e2.hasRegexChars(t3);
        e2.escapeRegex = (t3) => t3.replace(r, "\\$1");
        e2.toPosixSlashes = (t3) => t3.replace(n, "/");
        e2.removeBackslashes = (t3) => t3.replace(o, (t4) => t4 === "\\" ? "" : t4);
        e2.escapeLast = (t3, u3, n2) => {
          const o2 = t3.lastIndexOf(u3, n2);
          if (o2 === -1) return t3;
          if (t3[o2 - 1] === "\\") return e2.escapeLast(t3, u3, o2 - 1);
          return `${t3.slice(0, o2)}\\${t3.slice(o2)}`;
        };
        e2.removePrefix = (t3, e3 = {}) => {
          let u3 = t3;
          if (u3.startsWith("./")) {
            u3 = u3.slice(2);
            e3.prefix = "./";
          }
          return u3;
        };
        e2.wrapOutput = (t3, e3 = {}, u3 = {}) => {
          const n2 = u3.contains ? "" : "^";
          const o2 = u3.contains ? "" : "$";
          let s2 = `${n2}(?:${t3})${o2}`;
          if (e3.negated === true) {
            s2 = `(?:^(?!${s2}).*$)`;
          }
          return s2;
        };
        e2.basename = (t3, { windows: e3 } = {}) => {
          const u3 = t3.split(e3 ? /[\\/]/ : "/");
          const n2 = u3[u3.length - 1];
          if (n2 === "") {
            return u3[u3.length - 2];
          }
          return n2;
        };
      } };
      var e = {};
      function __nccwpck_require__2(u2) {
        var n = e[u2];
        if (n !== void 0) {
          return n.exports;
        }
        var o = e[u2] = { exports: {} };
        var s = true;
        try {
          t[u2](o, o.exports, __nccwpck_require__2);
          s = false;
        } finally {
          if (s) delete e[u2];
        }
        return o.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var u = __nccwpck_require__2(170);
      module2.exports = u;
    })();
  }
});

// ../../../node_modules/next/dist/shared/lib/match-local-pattern.js
var require_match_local_pattern = __commonJS({
  "../../../node_modules/next/dist/shared/lib/match-local-pattern.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      hasLocalMatch: function() {
        return hasLocalMatch;
      },
      matchLocalPattern: function() {
        return matchLocalPattern;
      }
    });
    var _picomatch = require_picomatch();
    function matchLocalPattern(pattern, url) {
      if (pattern.search !== void 0) {
        if (pattern.search !== url.search) {
          return false;
        }
      }
      var _pattern_pathname;
      if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : "**", {
        dot: true
      }).test(url.pathname)) {
        return false;
      }
      return true;
    }
    function hasLocalMatch(localPatterns, urlPathAndQuery) {
      if (!localPatterns) {
        return true;
      }
      const url = new URL(urlPathAndQuery, "http://n");
      return localPatterns.some((p) => matchLocalPattern(p, url));
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/match-remote-pattern.js
var require_match_remote_pattern = __commonJS({
  "../../../node_modules/next/dist/shared/lib/match-remote-pattern.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      hasRemoteMatch: function() {
        return hasRemoteMatch;
      },
      matchRemotePattern: function() {
        return matchRemotePattern;
      }
    });
    var _picomatch = require_picomatch();
    function matchRemotePattern(pattern, url) {
      if (pattern.protocol !== void 0) {
        const actualProto = url.protocol.slice(0, -1);
        if (pattern.protocol !== actualProto) {
          return false;
        }
      }
      if (pattern.port !== void 0) {
        if (pattern.port !== url.port) {
          return false;
        }
      }
      if (pattern.hostname === void 0) {
        throw new Error("Pattern should define hostname but found\n" + JSON.stringify(pattern));
      } else {
        if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {
          return false;
        }
      }
      if (pattern.search !== void 0) {
        if (pattern.search !== url.search) {
          return false;
        }
      }
      var _pattern_pathname;
      if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : "**", {
        dot: true
      }).test(url.pathname)) {
        return false;
      }
      return true;
    }
    function hasRemoteMatch(domains, remotePatterns, url) {
      return domains.some((domain) => url.hostname === domain) || remotePatterns.some((p) => matchRemotePattern(p, url));
    }
  }
});

// ../../../node_modules/next/dist/server/web/utils.js
var require_utils = __commonJS({
  "../../../node_modules/next/dist/server/web/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      fromNodeOutgoingHttpHeaders: function() {
        return fromNodeOutgoingHttpHeaders;
      },
      splitCookiesString: function() {
        return splitCookiesString;
      },
      toNodeOutgoingHttpHeaders: function() {
        return toNodeOutgoingHttpHeaders;
      },
      validateURL: function() {
        return validateURL;
      }
    });
    function fromNodeOutgoingHttpHeaders(nodeHeaders) {
      const headers = new Headers();
      for (let [key, value] of Object.entries(nodeHeaders)) {
        const values = Array.isArray(value) ? value : [
          value
        ];
        for (let v of values) {
          if (typeof v === "undefined") continue;
          if (typeof v === "number") {
            v = v.toString();
          }
          headers.append(key, v);
        }
      }
      return headers;
    }
    function splitCookiesString(cookiesString) {
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    function toNodeOutgoingHttpHeaders(headers) {
      const nodeHeaders = {};
      const cookies = [];
      if (headers) {
        for (const [key, value] of headers.entries()) {
          if (key.toLowerCase() === "set-cookie") {
            cookies.push(...splitCookiesString(value));
            nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;
          } else {
            nodeHeaders[key] = value;
          }
        }
      }
      return nodeHeaders;
    }
    function validateURL(url) {
      try {
        return String(new URL(String(url)));
      } catch (error) {
        throw new Error(`URL is malformed "${String(url)}". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {
          cause: error
        });
      }
    }
  }
});

// ../../../node_modules/next/dist/server/lib/mock-request.js
var require_mock_request = __commonJS({
  "../../../node_modules/next/dist/server/lib/mock-request.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      MockedRequest: function() {
        return MockedRequest;
      },
      MockedResponse: function() {
        return MockedResponse;
      },
      createRequestResponseMocks: function() {
        return createRequestResponseMocks;
      }
    });
    var _stream = _interop_require_default(require_stream());
    var _utils = require_utils();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var MockedRequest = class extends _stream.default.Readable {
      constructor({ url, headers, method, socket = null, readable }) {
        super();
        this.httpVersion = "1.0";
        this.httpVersionMajor = 1;
        this.httpVersionMinor = 0;
        this.socket = new Proxy({}, {
          get: (_target, prop) => {
            if (prop !== "encrypted" && prop !== "remoteAddress") {
              throw new Error("Method not implemented");
            }
            if (prop === "remoteAddress") return void 0;
            return false;
          }
        });
        this.url = url;
        this.headers = headers;
        this.method = method;
        if (readable) {
          this.bodyReadable = readable;
          this.bodyReadable.on("end", () => this.emit("end"));
          this.bodyReadable.on("close", () => this.emit("close"));
        }
        if (socket) {
          this.socket = socket;
        }
      }
      get headersDistinct() {
        const headers = {};
        for (const [key, value] of Object.entries(this.headers)) {
          if (!value) continue;
          headers[key] = Array.isArray(value) ? value : [
            value
          ];
        }
        return headers;
      }
      _read(size) {
        if (this.bodyReadable) {
          return this.bodyReadable._read(size);
        } else {
          this.emit("end");
          this.emit("close");
        }
      }
      /**
      * The `connection` property is just an alias for the `socket` property.
      *
      * @deprecated — since v13.0.0 - Use socket instead.
      */
      get connection() {
        return this.socket;
      }
      // The following methods are not implemented as they are not used in the
      // Next.js codebase.
      get aborted() {
        throw new Error("Method not implemented");
      }
      get complete() {
        throw new Error("Method not implemented");
      }
      get trailers() {
        throw new Error("Method not implemented");
      }
      get trailersDistinct() {
        throw new Error("Method not implemented");
      }
      get rawTrailers() {
        throw new Error("Method not implemented");
      }
      get rawHeaders() {
        throw new Error("Method not implemented.");
      }
      setTimeout() {
        throw new Error("Method not implemented.");
      }
    };
    var MockedResponse = class extends _stream.default.Writable {
      constructor(res = {}) {
        super();
        this.statusMessage = "";
        this.finished = false;
        this.headersSent = false;
        this.buffers = [];
        this.statusCode = res.statusCode ?? 200;
        this.socket = res.socket ?? null;
        this.headers = res.headers ? (0, _utils.fromNodeOutgoingHttpHeaders)(res.headers) : new Headers();
        this.headPromise = new Promise((resolve) => {
          this.headPromiseResolve = resolve;
        });
        this.hasStreamed = new Promise((resolve, reject) => {
          this.on("finish", () => resolve(true));
          this.on("end", () => resolve(true));
          this.on("error", (err) => reject(err));
        }).then((val) => {
          this.headPromiseResolve == null ? void 0 : this.headPromiseResolve.call(this);
          return val;
        });
        if (res.resWriter) {
          this.resWriter = res.resWriter;
        }
      }
      appendHeader(name, value) {
        const values = Array.isArray(value) ? value : [
          value
        ];
        for (const v of values) {
          this.headers.append(name, v);
        }
        return this;
      }
      /**
      * Returns true if the response has been sent, false otherwise.
      *
      * @internal - used internally by Next.js
      */
      get isSent() {
        return this.finished || this.headersSent;
      }
      /**
      * The `connection` property is just an alias for the `socket` property.
      *
      * @deprecated — since v13.0.0 - Use socket instead.
      */
      get connection() {
        return this.socket;
      }
      write(chunk) {
        if (this.resWriter) {
          return this.resWriter(chunk);
        }
        this.buffers.push(Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk));
        return true;
      }
      end() {
        this.finished = true;
        return super.end(...arguments);
      }
      /**
      * This method is a no-op because the `MockedResponse` instance is not
      * actually connected to a socket. This method is not specified on the
      * interface type for `ServerResponse` but is called by Node.js.
      *
      * @see https://github.com/nodejs/node/pull/7949
      */
      _implicitHeader() {
      }
      _write(chunk, _encoding, callback) {
        this.write(chunk);
        callback();
      }
      writeHead(statusCode, statusMessage, headers) {
        if (!headers && typeof statusMessage !== "string") {
          headers = statusMessage;
        } else if (typeof statusMessage === "string" && statusMessage.length > 0) {
          this.statusMessage = statusMessage;
        }
        if (headers) {
          if (Array.isArray(headers)) {
            for (let i = 0; i < headers.length; i += 2) {
              this.setHeader(headers[i], headers[i + 1]);
            }
          } else {
            for (const [key, value] of Object.entries(headers)) {
              if (typeof value === "undefined") continue;
              this.setHeader(key, value);
            }
          }
        }
        this.statusCode = statusCode;
        this.headersSent = true;
        this.headPromiseResolve == null ? void 0 : this.headPromiseResolve.call(this);
        return this;
      }
      hasHeader(name) {
        return this.headers.has(name);
      }
      getHeader(name) {
        return this.headers.get(name) ?? void 0;
      }
      getHeaders() {
        return (0, _utils.toNodeOutgoingHttpHeaders)(this.headers);
      }
      getHeaderNames() {
        return Array.from(this.headers.keys());
      }
      setHeader(name, value) {
        if (Array.isArray(value)) {
          this.headers.delete(name);
          for (const v of value) {
            this.headers.append(name, v);
          }
        } else if (typeof value === "number") {
          this.headers.set(name, value.toString());
        } else {
          this.headers.set(name, value);
        }
        return this;
      }
      removeHeader(name) {
        this.headers.delete(name);
      }
      flushHeaders() {
      }
      // The following methods are not implemented as they are not used in the
      // Next.js codebase.
      get strictContentLength() {
        throw new Error("Method not implemented.");
      }
      writeEarlyHints() {
        throw new Error("Method not implemented.");
      }
      get req() {
        throw new Error("Method not implemented.");
      }
      assignSocket() {
        throw new Error("Method not implemented.");
      }
      detachSocket() {
        throw new Error("Method not implemented.");
      }
      writeContinue() {
        throw new Error("Method not implemented.");
      }
      writeProcessing() {
        throw new Error("Method not implemented.");
      }
      get upgrading() {
        throw new Error("Method not implemented.");
      }
      get chunkedEncoding() {
        throw new Error("Method not implemented.");
      }
      get shouldKeepAlive() {
        throw new Error("Method not implemented.");
      }
      get useChunkedEncodingByDefault() {
        throw new Error("Method not implemented.");
      }
      get sendDate() {
        throw new Error("Method not implemented.");
      }
      setTimeout() {
        throw new Error("Method not implemented.");
      }
      addTrailers() {
        throw new Error("Method not implemented.");
      }
    };
    function createRequestResponseMocks({ url, headers = {}, method = "GET", bodyReadable, resWriter, socket = null }) {
      return {
        req: new MockedRequest({
          url,
          headers,
          method,
          socket,
          readable: bodyReadable
        }),
        res: new MockedResponse({
          socket,
          resWriter
        })
      };
    }
  }
});

// ../../../node_modules/next/dist/shared/lib/utils.js
var require_utils2 = __commonJS({
  "../../../node_modules/next/dist/shared/lib/utils.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      DecodeError: function() {
        return DecodeError;
      },
      MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
      },
      MissingStaticPage: function() {
        return MissingStaticPage;
      },
      NormalizeError: function() {
        return NormalizeError;
      },
      PageNotFoundError: function() {
        return PageNotFoundError;
      },
      SP: function() {
        return SP;
      },
      ST: function() {
        return ST;
      },
      WEB_VITALS: function() {
        return WEB_VITALS;
      },
      execOnce: function() {
        return execOnce;
      },
      getDisplayName: function() {
        return getDisplayName;
      },
      getLocationOrigin: function() {
        return getLocationOrigin;
      },
      getURL: function() {
        return getURL;
      },
      isAbsoluteUrl: function() {
        return isAbsoluteUrl;
      },
      isResSent: function() {
        return isResSent;
      },
      loadGetInitialProps: function() {
        return loadGetInitialProps;
      },
      normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
      },
      stringifyError: function() {
        return stringifyError;
      }
    });
    var WEB_VITALS = [
      "CLS",
      "FCP",
      "FID",
      "INP",
      "LCP",
      "TTFB"
    ];
    function execOnce(fn2) {
      let used = false;
      let result;
      return function() {
        for (var _len = arguments.length, args2 = new Array(_len), _key = 0; _key < _len; _key++) {
          args2[_key] = arguments[_key];
        }
        if (!used) {
          used = true;
          result = fn2(...args2);
        }
        return result;
      };
    }
    var ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
    var isAbsoluteUrl = (url) => ABSOLUTE_URL_REGEX.test(url);
    function getLocationOrigin() {
      const { protocol, hostname, port } = window.location;
      return protocol + "//" + hostname + (port ? ":" + port : "");
    }
    function getURL() {
      const { href } = window.location;
      const origin = getLocationOrigin();
      return href.substring(origin.length);
    }
    function getDisplayName(Component) {
      return typeof Component === "string" ? Component : Component.displayName || Component.name || "Unknown";
    }
    function isResSent(res) {
      return res.finished || res.headersSent;
    }
    function normalizeRepeatedSlashes(url) {
      const urlParts = url.split("?");
      const urlNoQuery = urlParts[0];
      return urlNoQuery.replace(/\\/g, "/").replace(/\/\/+/g, "/") + (urlParts[1] ? "?" + urlParts.slice(1).join("?") : "");
    }
    async function loadGetInitialProps(App, ctx) {
      if (true) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
          const message2 = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
          throw new Error(message2);
        }
      }
      const res = ctx.res || ctx.ctx && ctx.ctx.res;
      if (!App.getInitialProps) {
        if (ctx.ctx && ctx.Component) {
          return {
            pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
          };
        }
        return {};
      }
      const props = await App.getInitialProps(ctx);
      if (res && isResSent(res)) {
        return props;
      }
      if (!props) {
        const message2 = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw new Error(message2);
      }
      if (true) {
        if (Object.keys(props).length === 0 && !ctx.ctx) {
          console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
      }
      return props;
    }
    var SP = typeof performance !== "undefined";
    var ST = SP && [
      "mark",
      "measure",
      "getEntriesByName"
    ].every((method) => typeof performance[method] === "function");
    var DecodeError = class extends Error {
    };
    var NormalizeError = class extends Error {
    };
    var PageNotFoundError = class extends Error {
      constructor(page) {
        super();
        this.code = "ENOENT";
        this.name = "PageNotFoundError";
        this.message = "Cannot find module for page: " + page;
      }
    };
    var MissingStaticPage = class extends Error {
      constructor(page, message2) {
        super();
        this.message = "Failed to load static file for page: " + page + " " + message2;
      }
    };
    var MiddlewareNotFoundError = class extends Error {
      constructor() {
        super();
        this.code = "ENOENT";
        this.message = "Cannot find the middleware module";
      }
    };
    function stringifyError(error) {
      return JSON.stringify({
        message: error.message,
        stack: error.stack
      });
    }
  }
});

// ../../../node_modules/next/dist/server/lib/etag.js
var require_etag = __commonJS({
  "../../../node_modules/next/dist/server/lib/etag.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      fnv1a52: function() {
        return fnv1a52;
      },
      generateETag: function() {
        return generateETag;
      }
    });
    var fnv1a52 = (str) => {
      const len = str.length;
      let i = 0, t0 = 0, v0 = 8997, t1 = 0, v1 = 33826, t2 = 0, v2 = 40164, t3 = 0, v3 = 52210;
      while (i < len) {
        v0 ^= str.charCodeAt(i++);
        t0 = v0 * 435;
        t1 = v1 * 435;
        t2 = v2 * 435;
        t3 = v3 * 435;
        t2 += v0 << 8;
        t3 += v1 << 8;
        t1 += t0 >>> 16;
        v0 = t0 & 65535;
        t2 += t1 >>> 16;
        v1 = t1 & 65535;
        v3 = t3 + (t2 >>> 16) & 65535;
        v2 = t2 & 65535;
      }
      return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);
    };
    var generateETag = (payload, weak = false) => {
      const prefix = weak ? 'W/"' : '"';
      return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '"';
    };
  }
});

// ../../../node_modules/next/dist/compiled/fresh/index.js
var require_fresh = __commonJS({
  "../../../node_modules/next/dist/compiled/fresh/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 695: (e2) => {
        var r2 = /(?:^|,)\s*?no-cache\s*?(?:,|$)/;
        e2.exports = fresh;
        function fresh(e3, a2) {
          var t = e3["if-modified-since"];
          var s = e3["if-none-match"];
          if (!t && !s) {
            return false;
          }
          var i = e3["cache-control"];
          if (i && r2.test(i)) {
            return false;
          }
          if (s && s !== "*") {
            var f = a2["etag"];
            if (!f) {
              return false;
            }
            var n = true;
            var u = parseTokenList(s);
            for (var _ = 0; _ < u.length; _++) {
              var o = u[_];
              if (o === f || o === "W/" + f || "W/" + o === f) {
                n = false;
                break;
              }
            }
            if (n) {
              return false;
            }
          }
          if (t) {
            var p = a2["last-modified"];
            var v = !p || !(parseHttpDate(p) <= parseHttpDate(t));
            if (v) {
              return false;
            }
          }
          return true;
        }
        function parseHttpDate(e3) {
          var r3 = e3 && Date.parse(e3);
          return typeof r3 === "number" ? r3 : NaN;
        }
        function parseTokenList(e3) {
          var r3 = 0;
          var a2 = [];
          var t = 0;
          for (var s = 0, i = e3.length; s < i; s++) {
            switch (e3.charCodeAt(s)) {
              case 32:
                if (t === r3) {
                  t = r3 = s + 1;
                }
                break;
              case 44:
                a2.push(e3.substring(t, r3));
                t = r3 = s + 1;
                break;
              default:
                r3 = s + 1;
                break;
            }
          }
          a2.push(e3.substring(t, r3));
          return a2;
        }
      } };
      var r = {};
      function __nccwpck_require__2(a2) {
        var t = r[a2];
        if (t !== void 0) {
          return t.exports;
        }
        var s = r[a2] = { exports: {} };
        var i = true;
        try {
          e[a2](s, s.exports, __nccwpck_require__2);
          i = false;
        } finally {
          if (i) delete r[a2];
        }
        return s.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var a = __nccwpck_require__2(695);
      module2.exports = a;
    })();
  }
});

// ../../../node_modules/next/dist/lib/constants.js
var require_constants = __commonJS({
  "../../../node_modules/next/dist/lib/constants.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      ACTION_SUFFIX: function() {
        return ACTION_SUFFIX;
      },
      APP_DIR_ALIAS: function() {
        return APP_DIR_ALIAS;
      },
      CACHE_ONE_YEAR: function() {
        return CACHE_ONE_YEAR;
      },
      DOT_NEXT_ALIAS: function() {
        return DOT_NEXT_ALIAS;
      },
      ESLINT_DEFAULT_DIRS: function() {
        return ESLINT_DEFAULT_DIRS;
      },
      GSP_NO_RETURNED_VALUE: function() {
        return GSP_NO_RETURNED_VALUE;
      },
      GSSP_COMPONENT_MEMBER_ERROR: function() {
        return GSSP_COMPONENT_MEMBER_ERROR;
      },
      GSSP_NO_RETURNED_VALUE: function() {
        return GSSP_NO_RETURNED_VALUE;
      },
      INSTRUMENTATION_HOOK_FILENAME: function() {
        return INSTRUMENTATION_HOOK_FILENAME;
      },
      MIDDLEWARE_FILENAME: function() {
        return MIDDLEWARE_FILENAME;
      },
      MIDDLEWARE_LOCATION_REGEXP: function() {
        return MIDDLEWARE_LOCATION_REGEXP;
      },
      NEXT_BODY_SUFFIX: function() {
        return NEXT_BODY_SUFFIX;
      },
      NEXT_CACHE_IMPLICIT_TAG_ID: function() {
        return NEXT_CACHE_IMPLICIT_TAG_ID;
      },
      NEXT_CACHE_REVALIDATED_TAGS_HEADER: function() {
        return NEXT_CACHE_REVALIDATED_TAGS_HEADER;
      },
      NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: function() {
        return NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER;
      },
      NEXT_CACHE_SOFT_TAGS_HEADER: function() {
        return NEXT_CACHE_SOFT_TAGS_HEADER;
      },
      NEXT_CACHE_SOFT_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_SOFT_TAG_MAX_LENGTH;
      },
      NEXT_CACHE_TAGS_HEADER: function() {
        return NEXT_CACHE_TAGS_HEADER;
      },
      NEXT_CACHE_TAG_MAX_ITEMS: function() {
        return NEXT_CACHE_TAG_MAX_ITEMS;
      },
      NEXT_CACHE_TAG_MAX_LENGTH: function() {
        return NEXT_CACHE_TAG_MAX_LENGTH;
      },
      NEXT_DATA_SUFFIX: function() {
        return NEXT_DATA_SUFFIX;
      },
      NEXT_META_SUFFIX: function() {
        return NEXT_META_SUFFIX;
      },
      NEXT_QUERY_PARAM_PREFIX: function() {
        return NEXT_QUERY_PARAM_PREFIX;
      },
      NON_STANDARD_NODE_ENV: function() {
        return NON_STANDARD_NODE_ENV;
      },
      PAGES_DIR_ALIAS: function() {
        return PAGES_DIR_ALIAS;
      },
      PRERENDER_REVALIDATE_HEADER: function() {
        return PRERENDER_REVALIDATE_HEADER;
      },
      PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {
        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;
      },
      PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {
        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;
      },
      ROOT_DIR_ALIAS: function() {
        return ROOT_DIR_ALIAS;
      },
      RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {
        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;
      },
      RSC_ACTION_ENCRYPTION_ALIAS: function() {
        return RSC_ACTION_ENCRYPTION_ALIAS;
      },
      RSC_ACTION_PROXY_ALIAS: function() {
        return RSC_ACTION_PROXY_ALIAS;
      },
      RSC_ACTION_VALIDATE_ALIAS: function() {
        return RSC_ACTION_VALIDATE_ALIAS;
      },
      RSC_MOD_REF_PROXY_ALIAS: function() {
        return RSC_MOD_REF_PROXY_ALIAS;
      },
      RSC_PREFETCH_SUFFIX: function() {
        return RSC_PREFETCH_SUFFIX;
      },
      RSC_SUFFIX: function() {
        return RSC_SUFFIX;
      },
      SERVER_PROPS_EXPORT_ERROR: function() {
        return SERVER_PROPS_EXPORT_ERROR;
      },
      SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {
        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;
      },
      SERVER_PROPS_SSG_CONFLICT: function() {
        return SERVER_PROPS_SSG_CONFLICT;
      },
      SERVER_RUNTIME: function() {
        return SERVER_RUNTIME;
      },
      SSG_FALLBACK_EXPORT_ERROR: function() {
        return SSG_FALLBACK_EXPORT_ERROR;
      },
      SSG_GET_INITIAL_PROPS_CONFLICT: function() {
        return SSG_GET_INITIAL_PROPS_CONFLICT;
      },
      STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {
        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;
      },
      UNSTABLE_REVALIDATE_RENAME_ERROR: function() {
        return UNSTABLE_REVALIDATE_RENAME_ERROR;
      },
      WEBPACK_LAYERS: function() {
        return WEBPACK_LAYERS;
      },
      WEBPACK_RESOURCE_QUERIES: function() {
        return WEBPACK_RESOURCE_QUERIES;
      }
    });
    var NEXT_QUERY_PARAM_PREFIX = "nxtP";
    var PRERENDER_REVALIDATE_HEADER = "x-prerender-revalidate";
    var PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = "x-prerender-revalidate-if-generated";
    var RSC_PREFETCH_SUFFIX = ".prefetch.rsc";
    var RSC_SUFFIX = ".rsc";
    var ACTION_SUFFIX = ".action";
    var NEXT_DATA_SUFFIX = ".json";
    var NEXT_META_SUFFIX = ".meta";
    var NEXT_BODY_SUFFIX = ".body";
    var NEXT_CACHE_TAGS_HEADER = "x-next-cache-tags";
    var NEXT_CACHE_SOFT_TAGS_HEADER = "x-next-cache-soft-tags";
    var NEXT_CACHE_REVALIDATED_TAGS_HEADER = "x-next-revalidated-tags";
    var NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = "x-next-revalidate-tag-token";
    var NEXT_CACHE_TAG_MAX_ITEMS = 128;
    var NEXT_CACHE_TAG_MAX_LENGTH = 256;
    var NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;
    var NEXT_CACHE_IMPLICIT_TAG_ID = "_N_T_";
    var CACHE_ONE_YEAR = 31536e3;
    var MIDDLEWARE_FILENAME = "middleware";
    var MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;
    var INSTRUMENTATION_HOOK_FILENAME = "instrumentation";
    var PAGES_DIR_ALIAS = "private-next-pages";
    var DOT_NEXT_ALIAS = "private-dot-next";
    var ROOT_DIR_ALIAS = "private-next-root-dir";
    var APP_DIR_ALIAS = "private-next-app-dir";
    var RSC_MOD_REF_PROXY_ALIAS = "private-next-rsc-mod-ref-proxy";
    var RSC_ACTION_VALIDATE_ALIAS = "private-next-rsc-action-validate";
    var RSC_ACTION_PROXY_ALIAS = "private-next-rsc-server-reference";
    var RSC_ACTION_ENCRYPTION_ALIAS = "private-next-rsc-action-encryption";
    var RSC_ACTION_CLIENT_WRAPPER_ALIAS = "private-next-rsc-action-client-wrapper";
    var PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;
    var SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;
    var SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;
    var SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;
    var STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;
    var SERVER_PROPS_EXPORT_ERROR = `pages with \`getServerSideProps\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;
    var GSP_NO_RETURNED_VALUE = "Your `getStaticProps` function did not return an object. Did you forget to add a `return`?";
    var GSSP_NO_RETURNED_VALUE = "Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?";
    var UNSTABLE_REVALIDATE_RENAME_ERROR = "The `unstable_revalidate` property is available for general use.\nPlease use `revalidate` instead.";
    var GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;
    var NON_STANDARD_NODE_ENV = `You are using a non-standard "NODE_ENV" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;
    var SSG_FALLBACK_EXPORT_ERROR = `Pages with \`fallback\` enabled in \`getStaticPaths\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;
    var ESLINT_DEFAULT_DIRS = [
      "app",
      "pages",
      "components",
      "lib",
      "src"
    ];
    var SERVER_RUNTIME = {
      edge: "edge",
      experimentalEdge: "experimental-edge",
      nodejs: "nodejs"
    };
    var WEBPACK_LAYERS_NAMES = {
      /**
      * The layer for the shared code between the client and server bundles.
      */
      shared: "shared",
      /**
      * React Server Components layer (rsc).
      */
      reactServerComponents: "rsc",
      /**
      * Server Side Rendering layer for app (ssr).
      */
      serverSideRendering: "ssr",
      /**
      * The browser client bundle layer for actions.
      */
      actionBrowser: "action-browser",
      /**
      * The layer for the API routes.
      */
      api: "api",
      /**
      * The layer for the middleware code.
      */
      middleware: "middleware",
      /**
      * The layer for the instrumentation hooks.
      */
      instrument: "instrument",
      /**
      * The layer for assets on the edge.
      */
      edgeAsset: "edge-asset",
      /**
      * The browser client bundle layer for App directory.
      */
      appPagesBrowser: "app-pages-browser",
      /**
      * The server bundle layer for metadata routes.
      */
      appMetadataRoute: "app-metadata-route",
      /**
      * The layer for the server bundle for App Route handlers.
      */
      appRouteHandler: "app-route-handler"
    };
    var WEBPACK_LAYERS = {
      ...WEBPACK_LAYERS_NAMES,
      GROUP: {
        serverOnly: [
          WEBPACK_LAYERS_NAMES.reactServerComponents,
          WEBPACK_LAYERS_NAMES.actionBrowser,
          WEBPACK_LAYERS_NAMES.appMetadataRoute,
          WEBPACK_LAYERS_NAMES.appRouteHandler,
          WEBPACK_LAYERS_NAMES.instrument
        ],
        clientOnly: [
          WEBPACK_LAYERS_NAMES.serverSideRendering,
          WEBPACK_LAYERS_NAMES.appPagesBrowser
        ],
        nonClientServerTarget: [
          // middleware and pages api
          WEBPACK_LAYERS_NAMES.middleware,
          WEBPACK_LAYERS_NAMES.api
        ],
        app: [
          WEBPACK_LAYERS_NAMES.reactServerComponents,
          WEBPACK_LAYERS_NAMES.actionBrowser,
          WEBPACK_LAYERS_NAMES.appMetadataRoute,
          WEBPACK_LAYERS_NAMES.appRouteHandler,
          WEBPACK_LAYERS_NAMES.serverSideRendering,
          WEBPACK_LAYERS_NAMES.appPagesBrowser,
          WEBPACK_LAYERS_NAMES.shared,
          WEBPACK_LAYERS_NAMES.instrument
        ]
      }
    };
    var WEBPACK_RESOURCE_QUERIES = {
      edgeSSREntry: "__next_edge_ssr_entry__",
      metadata: "__next_metadata__",
      metadataRoute: "__next_metadata_route__",
      metadataImageMeta: "__next_metadata_image_meta__"
    };
  }
});

// ../../../node_modules/next/dist/server/lib/revalidate.js
var require_revalidate = __commonJS({
  "../../../node_modules/next/dist/server/lib/revalidate.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    Object.defineProperty(exports2, "formatRevalidate", {
      enumerable: true,
      get: function() {
        return formatRevalidate;
      }
    });
    var _constants = require_constants();
    function formatRevalidate({ revalidate, swrDelta }) {
      const swrHeader = swrDelta ? `stale-while-revalidate=${swrDelta}` : "stale-while-revalidate";
      if (revalidate === 0) {
        return "private, no-cache, no-store, max-age=0, must-revalidate";
      } else if (typeof revalidate === "number") {
        return `s-maxage=${revalidate}, ${swrHeader}`;
      }
      return `s-maxage=${_constants.CACHE_ONE_YEAR}, ${swrHeader}`;
    }
  }
});

// ../../../node_modules/next/dist/client/components/app-router-headers.js
var require_app_router_headers = __commonJS({
  "../../../node_modules/next/dist/client/components/app-router-headers.js"(exports2, module2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      ACTION: function() {
        return ACTION;
      },
      FLIGHT_PARAMETERS: function() {
        return FLIGHT_PARAMETERS;
      },
      NEXT_DID_POSTPONE_HEADER: function() {
        return NEXT_DID_POSTPONE_HEADER;
      },
      NEXT_ROUTER_PREFETCH_HEADER: function() {
        return NEXT_ROUTER_PREFETCH_HEADER;
      },
      NEXT_ROUTER_STATE_TREE: function() {
        return NEXT_ROUTER_STATE_TREE;
      },
      NEXT_RSC_UNION_QUERY: function() {
        return NEXT_RSC_UNION_QUERY;
      },
      NEXT_URL: function() {
        return NEXT_URL;
      },
      RSC_CONTENT_TYPE_HEADER: function() {
        return RSC_CONTENT_TYPE_HEADER;
      },
      RSC_HEADER: function() {
        return RSC_HEADER;
      }
    });
    var RSC_HEADER = "RSC";
    var ACTION = "Next-Action";
    var NEXT_ROUTER_STATE_TREE = "Next-Router-State-Tree";
    var NEXT_ROUTER_PREFETCH_HEADER = "Next-Router-Prefetch";
    var NEXT_URL = "Next-Url";
    var RSC_CONTENT_TYPE_HEADER = "text/x-component";
    var FLIGHT_PARAMETERS = [
      [
        RSC_HEADER
      ],
      [
        NEXT_ROUTER_STATE_TREE
      ],
      [
        NEXT_ROUTER_PREFETCH_HEADER
      ]
    ];
    var NEXT_RSC_UNION_QUERY = "_rsc";
    var NEXT_DID_POSTPONE_HEADER = "x-nextjs-postponed";
    if ((typeof exports2.default === "function" || typeof exports2.default === "object" && exports2.default !== null) && typeof exports2.default.__esModule === "undefined") {
      Object.defineProperty(exports2.default, "__esModule", { value: true });
      Object.assign(exports2.default, exports2);
      module2.exports = exports2.default;
    }
  }
});

// ../../../node_modules/next/dist/compiled/node-html-parser/index.js
var require_node_html_parser = __commonJS({
  "../../../node_modules/next/dist/compiled/node-html-parser/index.js"(exports2, module2) {
    (function() {
      var e = { 2947: function(e2) {
        e2.exports = { trueFunc: function trueFunc() {
          return true;
        }, falseFunc: function falseFunc() {
          return false;
        } };
      }, 3387: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.attributeRules = void 0;
        var a = t2(2947);
        var n = /[-[\]{}()*+?.,\\^$|#\s]/g;
        function escapeRegex(e3) {
          return e3.replace(n, "\\$&");
        }
        var i = /* @__PURE__ */ new Set(["accept", "accept-charset", "align", "alink", "axis", "bgcolor", "charset", "checked", "clear", "codetype", "color", "compact", "declare", "defer", "dir", "direction", "disabled", "enctype", "face", "frame", "hreflang", "http-equiv", "lang", "language", "link", "media", "method", "multiple", "nohref", "noresize", "noshade", "nowrap", "readonly", "rel", "rev", "rules", "scope", "scrolling", "selected", "shape", "target", "text", "type", "valign", "valuetype", "vlink"]);
        function shouldIgnoreCase(e3, r3) {
          return typeof e3.ignoreCase === "boolean" ? e3.ignoreCase : e3.ignoreCase === "quirks" ? !!r3.quirksMode : !r3.xmlMode && i.has(e3.name);
        }
        r2.attributeRules = { equals: function(e3, r3, t3) {
          var a2 = t3.adapter;
          var n2 = r3.name;
          var i2 = r3.value;
          if (shouldIgnoreCase(r3, t3)) {
            i2 = i2.toLowerCase();
            return function(r4) {
              var t4 = a2.getAttributeValue(r4, n2);
              return t4 != null && t4.length === i2.length && t4.toLowerCase() === i2 && e3(r4);
            };
          }
          return function(r4) {
            return a2.getAttributeValue(r4, n2) === i2 && e3(r4);
          };
        }, hyphen: function(e3, r3, t3) {
          var a2 = t3.adapter;
          var n2 = r3.name;
          var i2 = r3.value;
          var o = i2.length;
          if (shouldIgnoreCase(r3, t3)) {
            i2 = i2.toLowerCase();
            return function hyphenIC(r4) {
              var t4 = a2.getAttributeValue(r4, n2);
              return t4 != null && (t4.length === o || t4.charAt(o) === "-") && t4.substr(0, o).toLowerCase() === i2 && e3(r4);
            };
          }
          return function hyphen(r4) {
            var t4 = a2.getAttributeValue(r4, n2);
            return t4 != null && (t4.length === o || t4.charAt(o) === "-") && t4.substr(0, o) === i2 && e3(r4);
          };
        }, element: function(e3, r3, t3) {
          var n2 = t3.adapter;
          var i2 = r3.name, o = r3.value;
          if (/\s/.test(o)) {
            return a.falseFunc;
          }
          var s = new RegExp("(?:^|\\s)".concat(escapeRegex(o), "(?:$|\\s)"), shouldIgnoreCase(r3, t3) ? "i" : "");
          return function element(r4) {
            var t4 = n2.getAttributeValue(r4, i2);
            return t4 != null && t4.length >= o.length && s.test(t4) && e3(r4);
          };
        }, exists: function(e3, r3, t3) {
          var a2 = r3.name;
          var n2 = t3.adapter;
          return function(r4) {
            return n2.hasAttrib(r4, a2) && e3(r4);
          };
        }, start: function(e3, r3, t3) {
          var n2 = t3.adapter;
          var i2 = r3.name;
          var o = r3.value;
          var s = o.length;
          if (s === 0) {
            return a.falseFunc;
          }
          if (shouldIgnoreCase(r3, t3)) {
            o = o.toLowerCase();
            return function(r4) {
              var t4 = n2.getAttributeValue(r4, i2);
              return t4 != null && t4.length >= s && t4.substr(0, s).toLowerCase() === o && e3(r4);
            };
          }
          return function(r4) {
            var t4;
            return !!((t4 = n2.getAttributeValue(r4, i2)) === null || t4 === void 0 ? void 0 : t4.startsWith(o)) && e3(r4);
          };
        }, end: function(e3, r3, t3) {
          var n2 = t3.adapter;
          var i2 = r3.name;
          var o = r3.value;
          var s = -o.length;
          if (s === 0) {
            return a.falseFunc;
          }
          if (shouldIgnoreCase(r3, t3)) {
            o = o.toLowerCase();
            return function(r4) {
              var t4;
              return ((t4 = n2.getAttributeValue(r4, i2)) === null || t4 === void 0 ? void 0 : t4.substr(s).toLowerCase()) === o && e3(r4);
            };
          }
          return function(r4) {
            var t4;
            return !!((t4 = n2.getAttributeValue(r4, i2)) === null || t4 === void 0 ? void 0 : t4.endsWith(o)) && e3(r4);
          };
        }, any: function(e3, r3, t3) {
          var n2 = t3.adapter;
          var i2 = r3.name, o = r3.value;
          if (o === "") {
            return a.falseFunc;
          }
          if (shouldIgnoreCase(r3, t3)) {
            var s = new RegExp(escapeRegex(o), "i");
            return function anyIC(r4) {
              var t4 = n2.getAttributeValue(r4, i2);
              return t4 != null && t4.length >= o.length && s.test(t4) && e3(r4);
            };
          }
          return function(r4) {
            var t4;
            return !!((t4 = n2.getAttributeValue(r4, i2)) === null || t4 === void 0 ? void 0 : t4.includes(o)) && e3(r4);
          };
        }, not: function(e3, r3, t3) {
          var a2 = t3.adapter;
          var n2 = r3.name;
          var i2 = r3.value;
          if (i2 === "") {
            return function(r4) {
              return !!a2.getAttributeValue(r4, n2) && e3(r4);
            };
          } else if (shouldIgnoreCase(r3, t3)) {
            i2 = i2.toLowerCase();
            return function(r4) {
              var t4 = a2.getAttributeValue(r4, n2);
              return (t4 == null || t4.length !== i2.length || t4.toLowerCase() !== i2) && e3(r4);
            };
          }
          return function(r4) {
            return a2.getAttributeValue(r4, n2) !== i2 && e3(r4);
          };
        } };
      }, 8689: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.compileToken = r2.compileUnsafe = r2.compile = void 0;
        var n = t2(8065);
        var i = t2(2947);
        var o = a(t2(4901));
        var s = t2(538);
        var u = t2(7088);
        var l = t2(4428);
        function compile(e3, r3, t3) {
          var a2 = compileUnsafe(e3, r3, t3);
          return (0, l.ensureIsTag)(a2, r3.adapter);
        }
        r2.compile = compile;
        function compileUnsafe(e3, r3, t3) {
          var a2 = typeof e3 === "string" ? (0, n.parse)(e3) : e3;
          return compileToken(a2, r3, t3);
        }
        r2.compileUnsafe = compileUnsafe;
        function includesScopePseudo(e3) {
          return e3.type === "pseudo" && (e3.name === "scope" || Array.isArray(e3.data) && e3.data.some(function(e4) {
            return e4.some(includesScopePseudo);
          }));
        }
        var c = { type: n.SelectorType.Descendant };
        var p = { type: "_flexibleDescendant" };
        var d = { type: n.SelectorType.Pseudo, name: "scope", data: null };
        function absolutize(e3, r3, t3) {
          var a2 = r3.adapter;
          var n2 = !!(t3 === null || t3 === void 0 ? void 0 : t3.every(function(e4) {
            var r4 = a2.isTag(e4) && a2.getParent(e4);
            return e4 === l.PLACEHOLDER_ELEMENT || r4 && a2.isTag(r4);
          }));
          for (var i2 = 0, o2 = e3; i2 < o2.length; i2++) {
            var u2 = o2[i2];
            if (u2.length > 0 && (0, s.isTraversal)(u2[0]) && u2[0].type !== "descendant") {
            } else if (n2 && !u2.some(includesScopePseudo)) {
              u2.unshift(c);
            } else {
              continue;
            }
            u2.unshift(d);
          }
        }
        function compileToken(e3, r3, t3) {
          var a2;
          e3 = e3.filter(function(e4) {
            return e4.length > 0;
          });
          e3.forEach(o.default);
          t3 = (a2 = r3.context) !== null && a2 !== void 0 ? a2 : t3;
          var n2 = Array.isArray(t3);
          var s2 = t3 && (Array.isArray(t3) ? t3 : [t3]);
          absolutize(e3, r3, s2);
          var u2 = false;
          var l2 = e3.map(function(e4) {
            if (e4.length >= 2) {
              var t4 = e4[0], a3 = e4[1];
              if (t4.type !== "pseudo" || t4.name !== "scope") {
              } else if (n2 && a3.type === "descendant") {
                e4[1] = p;
              } else if (a3.type === "adjacent" || a3.type === "sibling") {
                u2 = true;
              }
            }
            return compileRules(e4, r3, s2);
          }).reduce(reduceRules, i.falseFunc);
          l2.shouldTestNextSiblings = u2;
          return l2;
        }
        r2.compileToken = compileToken;
        function compileRules(e3, r3, t3) {
          var a2;
          return e3.reduce(function(e4, a3) {
            return e4 === i.falseFunc ? i.falseFunc : (0, u.compileGeneralSelector)(e4, a3, r3, t3, compileToken);
          }, (a2 = r3.rootFunc) !== null && a2 !== void 0 ? a2 : i.trueFunc);
        }
        function reduceRules(e3, r3) {
          if (r3 === i.falseFunc || e3 === i.trueFunc) {
            return e3;
          }
          if (e3 === i.falseFunc || r3 === i.trueFunc) {
            return r3;
          }
          return function combine(t3) {
            return e3(t3) || r3(t3);
          };
        }
      }, 7088: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.compileGeneralSelector = void 0;
        var a = t2(3387);
        var n = t2(6463);
        var i = t2(8065);
        function compileGeneralSelector(e3, r3, t3, o, s) {
          var u = t3.adapter, l = t3.equals;
          switch (r3.type) {
            case i.SelectorType.PseudoElement: {
              throw new Error("Pseudo-elements are not supported by css-select");
            }
            case i.SelectorType.ColumnCombinator: {
              throw new Error("Column combinators are not yet supported by css-select");
            }
            case i.SelectorType.Attribute: {
              if (r3.namespace != null) {
                throw new Error("Namespaced attributes are not yet supported by css-select");
              }
              if (!t3.xmlMode || t3.lowerCaseAttributeNames) {
                r3.name = r3.name.toLowerCase();
              }
              return a.attributeRules[r3.action](e3, r3, t3);
            }
            case i.SelectorType.Pseudo: {
              return (0, n.compilePseudoSelector)(e3, r3, t3, o, s);
            }
            case i.SelectorType.Tag: {
              if (r3.namespace != null) {
                throw new Error("Namespaced tag names are not yet supported by css-select");
              }
              var c = r3.name;
              if (!t3.xmlMode || t3.lowerCaseTags) {
                c = c.toLowerCase();
              }
              return function tag(r4) {
                return u.getName(r4) === c && e3(r4);
              };
            }
            case i.SelectorType.Descendant: {
              if (t3.cacheResults === false || typeof WeakSet === "undefined") {
                return function descendant(r4) {
                  var t4 = r4;
                  while (t4 = u.getParent(t4)) {
                    if (u.isTag(t4) && e3(t4)) {
                      return true;
                    }
                  }
                  return false;
                };
              }
              var p = /* @__PURE__ */ new WeakSet();
              return function cachedDescendant(r4) {
                var t4 = r4;
                while (t4 = u.getParent(t4)) {
                  if (!p.has(t4)) {
                    if (u.isTag(t4) && e3(t4)) {
                      return true;
                    }
                    p.add(t4);
                  }
                }
                return false;
              };
            }
            case "_flexibleDescendant": {
              return function flexibleDescendant(r4) {
                var t4 = r4;
                do {
                  if (u.isTag(t4) && e3(t4)) return true;
                } while (t4 = u.getParent(t4));
                return false;
              };
            }
            case i.SelectorType.Parent: {
              return function parent(r4) {
                return u.getChildren(r4).some(function(r5) {
                  return u.isTag(r5) && e3(r5);
                });
              };
            }
            case i.SelectorType.Child: {
              return function child(r4) {
                var t4 = u.getParent(r4);
                return t4 != null && u.isTag(t4) && e3(t4);
              };
            }
            case i.SelectorType.Sibling: {
              return function sibling(r4) {
                var t4 = u.getSiblings(r4);
                for (var a2 = 0; a2 < t4.length; a2++) {
                  var n2 = t4[a2];
                  if (l(r4, n2)) break;
                  if (u.isTag(n2) && e3(n2)) {
                    return true;
                  }
                }
                return false;
              };
            }
            case i.SelectorType.Adjacent: {
              if (u.prevElementSibling) {
                return function adjacent(r4) {
                  var t4 = u.prevElementSibling(r4);
                  return t4 != null && e3(t4);
                };
              }
              return function adjacent(r4) {
                var t4 = u.getSiblings(r4);
                var a2;
                for (var n2 = 0; n2 < t4.length; n2++) {
                  var i2 = t4[n2];
                  if (l(r4, i2)) break;
                  if (u.isTag(i2)) {
                    a2 = i2;
                  }
                }
                return !!a2 && e3(a2);
              };
            }
            case i.SelectorType.Universal: {
              if (r3.namespace != null && r3.namespace !== "*") {
                throw new Error("Namespaced universal selectors are not yet supported by css-select");
              }
              return e3;
            }
          }
        }
        r2.compileGeneralSelector = compileGeneralSelector;
      }, 1112: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__createBinding || (Object.create ? function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          var n2 = Object.getOwnPropertyDescriptor(r3, t3);
          if (!n2 || ("get" in n2 ? !r3.__esModule : n2.writable || n2.configurable)) {
            n2 = { enumerable: true, get: function() {
              return r3[t3];
            } };
          }
          Object.defineProperty(e3, a2, n2);
        } : function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          e3[a2] = r3[t3];
        });
        var n = this && this.__setModuleDefault || (Object.create ? function(e3, r3) {
          Object.defineProperty(e3, "default", { enumerable: true, value: r3 });
        } : function(e3, r3) {
          e3["default"] = r3;
        });
        var i = this && this.__importStar || function(e3) {
          if (e3 && e3.__esModule) return e3;
          var r3 = {};
          if (e3 != null) {
            for (var t3 in e3) if (t3 !== "default" && Object.prototype.hasOwnProperty.call(e3, t3)) a(r3, e3, t3);
          }
          n(r3, e3);
          return r3;
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.aliases = r2.pseudos = r2.filters = r2.is = r2.selectOne = r2.selectAll = r2.prepareContext = r2._compileToken = r2._compileUnsafe = r2.compile = void 0;
        var o = i(t2(5861));
        var s = t2(2947);
        var u = t2(8689);
        var l = t2(4428);
        var defaultEquals = function(e3, r3) {
          return e3 === r3;
        };
        var c = { adapter: o, equals: defaultEquals };
        function convertOptionFormats(e3) {
          var r3, t3, a2, n2;
          var i2 = e3 !== null && e3 !== void 0 ? e3 : c;
          (r3 = i2.adapter) !== null && r3 !== void 0 ? r3 : i2.adapter = o;
          (t3 = i2.equals) !== null && t3 !== void 0 ? t3 : i2.equals = (n2 = (a2 = i2.adapter) === null || a2 === void 0 ? void 0 : a2.equals) !== null && n2 !== void 0 ? n2 : defaultEquals;
          return i2;
        }
        function wrapCompile(e3) {
          return function addAdapter(r3, t3, a2) {
            var n2 = convertOptionFormats(t3);
            return e3(r3, n2, a2);
          };
        }
        r2.compile = wrapCompile(u.compile);
        r2._compileUnsafe = wrapCompile(u.compileUnsafe);
        r2._compileToken = wrapCompile(u.compileToken);
        function getSelectorFunc(e3) {
          return function select(r3, t3, a2) {
            var n2 = convertOptionFormats(a2);
            if (typeof r3 !== "function") {
              r3 = (0, u.compileUnsafe)(r3, n2, t3);
            }
            var i2 = prepareContext(t3, n2.adapter, r3.shouldTestNextSiblings);
            return e3(r3, i2, n2);
          };
        }
        function prepareContext(e3, r3, t3) {
          if (t3 === void 0) {
            t3 = false;
          }
          if (t3) {
            e3 = appendNextSiblings(e3, r3);
          }
          return Array.isArray(e3) ? r3.removeSubsets(e3) : r3.getChildren(e3);
        }
        r2.prepareContext = prepareContext;
        function appendNextSiblings(e3, r3) {
          var t3 = Array.isArray(e3) ? e3.slice(0) : [e3];
          var a2 = t3.length;
          for (var n2 = 0; n2 < a2; n2++) {
            var i2 = (0, l.getNextSiblings)(t3[n2], r3);
            t3.push.apply(t3, i2);
          }
          return t3;
        }
        r2.selectAll = getSelectorFunc(function(e3, r3, t3) {
          return e3 === s.falseFunc || !r3 || r3.length === 0 ? [] : t3.adapter.findAll(e3, r3);
        });
        r2.selectOne = getSelectorFunc(function(e3, r3, t3) {
          return e3 === s.falseFunc || !r3 || r3.length === 0 ? null : t3.adapter.findOne(e3, r3);
        });
        function is(e3, r3, t3) {
          var a2 = convertOptionFormats(t3);
          return (typeof r3 === "function" ? r3 : (0, u.compile)(r3, a2))(e3);
        }
        r2.is = is;
        r2["default"] = r2.selectAll;
        var p = t2(6463);
        Object.defineProperty(r2, "filters", { enumerable: true, get: function() {
          return p.filters;
        } });
        Object.defineProperty(r2, "pseudos", { enumerable: true, get: function() {
          return p.pseudos;
        } });
        Object.defineProperty(r2, "aliases", { enumerable: true, get: function() {
          return p.aliases;
        } });
      }, 538: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.isTraversal = r2.procedure = void 0;
        r2.procedure = { universal: 50, tag: 30, attribute: 1, pseudo: 0, "pseudo-element": 0, "column-combinator": -1, descendant: -1, child: -1, parent: -1, sibling: -1, adjacent: -1, _flexibleDescendant: -1 };
        function isTraversal(e3) {
          return r2.procedure[e3.type] < 0;
        }
        r2.isTraversal = isTraversal;
      }, 8680: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.aliases = void 0;
        r2.aliases = { "any-link": ":is(a, area, link)[href]", link: ":any-link:not(:visited)", disabled: ":is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )", enabled: ":not(:disabled)", checked: ":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)", required: ":is(input, select, textarea)[required]", optional: ":is(input, select, textarea):not([required])", selected: "option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)", checkbox: "[type=checkbox]", file: "[type=file]", password: "[type=password]", radio: "[type=radio]", reset: "[type=reset]", image: "[type=image]", submit: "[type=submit]", parent: ":not(:empty)", header: ":is(h1, h2, h3, h4, h5, h6)", button: ":is(button, input[type=button])", input: ":is(input, textarea, select, button)", text: "input:is(:not([type!='']), [type=text])" };
      }, 6804: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.filters = void 0;
        var n = a(t2(7118));
        var i = t2(2947);
        function getChildFunc(e3, r3) {
          return function(t3) {
            var a2 = r3.getParent(t3);
            return a2 != null && r3.isTag(a2) && e3(t3);
          };
        }
        r2.filters = { contains: function(e3, r3, t3) {
          var a2 = t3.adapter;
          return function contains(t4) {
            return e3(t4) && a2.getText(t4).includes(r3);
          };
        }, icontains: function(e3, r3, t3) {
          var a2 = t3.adapter;
          var n2 = r3.toLowerCase();
          return function icontains(r4) {
            return e3(r4) && a2.getText(r4).toLowerCase().includes(n2);
          };
        }, "nth-child": function(e3, r3, t3) {
          var a2 = t3.adapter, o = t3.equals;
          var s = (0, n.default)(r3);
          if (s === i.falseFunc) return i.falseFunc;
          if (s === i.trueFunc) return getChildFunc(e3, a2);
          return function nthChild(r4) {
            var t4 = a2.getSiblings(r4);
            var n2 = 0;
            for (var i2 = 0; i2 < t4.length; i2++) {
              if (o(r4, t4[i2])) break;
              if (a2.isTag(t4[i2])) {
                n2++;
              }
            }
            return s(n2) && e3(r4);
          };
        }, "nth-last-child": function(e3, r3, t3) {
          var a2 = t3.adapter, o = t3.equals;
          var s = (0, n.default)(r3);
          if (s === i.falseFunc) return i.falseFunc;
          if (s === i.trueFunc) return getChildFunc(e3, a2);
          return function nthLastChild(r4) {
            var t4 = a2.getSiblings(r4);
            var n2 = 0;
            for (var i2 = t4.length - 1; i2 >= 0; i2--) {
              if (o(r4, t4[i2])) break;
              if (a2.isTag(t4[i2])) {
                n2++;
              }
            }
            return s(n2) && e3(r4);
          };
        }, "nth-of-type": function(e3, r3, t3) {
          var a2 = t3.adapter, o = t3.equals;
          var s = (0, n.default)(r3);
          if (s === i.falseFunc) return i.falseFunc;
          if (s === i.trueFunc) return getChildFunc(e3, a2);
          return function nthOfType(r4) {
            var t4 = a2.getSiblings(r4);
            var n2 = 0;
            for (var i2 = 0; i2 < t4.length; i2++) {
              var u = t4[i2];
              if (o(r4, u)) break;
              if (a2.isTag(u) && a2.getName(u) === a2.getName(r4)) {
                n2++;
              }
            }
            return s(n2) && e3(r4);
          };
        }, "nth-last-of-type": function(e3, r3, t3) {
          var a2 = t3.adapter, o = t3.equals;
          var s = (0, n.default)(r3);
          if (s === i.falseFunc) return i.falseFunc;
          if (s === i.trueFunc) return getChildFunc(e3, a2);
          return function nthLastOfType(r4) {
            var t4 = a2.getSiblings(r4);
            var n2 = 0;
            for (var i2 = t4.length - 1; i2 >= 0; i2--) {
              var u = t4[i2];
              if (o(r4, u)) break;
              if (a2.isTag(u) && a2.getName(u) === a2.getName(r4)) {
                n2++;
              }
            }
            return s(n2) && e3(r4);
          };
        }, root: function(e3, r3, t3) {
          var a2 = t3.adapter;
          return function(r4) {
            var t4 = a2.getParent(r4);
            return (t4 == null || !a2.isTag(t4)) && e3(r4);
          };
        }, scope: function(e3, t3, a2, n2) {
          var i2 = a2.equals;
          if (!n2 || n2.length === 0) {
            return r2.filters.root(e3, t3, a2);
          }
          if (n2.length === 1) {
            return function(r3) {
              return i2(n2[0], r3) && e3(r3);
            };
          }
          return function(r3) {
            return n2.includes(r3) && e3(r3);
          };
        }, hover: dynamicStatePseudo("isHovered"), visited: dynamicStatePseudo("isVisited"), active: dynamicStatePseudo("isActive") };
        function dynamicStatePseudo(e3) {
          return function dynamicPseudo(r3, t3, a2) {
            var n2 = a2.adapter;
            var o = n2[e3];
            if (typeof o !== "function") {
              return i.falseFunc;
            }
            return function active(e4) {
              return o(e4) && r3(e4);
            };
          };
        }
      }, 6463: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.compilePseudoSelector = r2.aliases = r2.pseudos = r2.filters = void 0;
        var a = t2(2947);
        var n = t2(8065);
        var i = t2(6804);
        Object.defineProperty(r2, "filters", { enumerable: true, get: function() {
          return i.filters;
        } });
        var o = t2(6973);
        Object.defineProperty(r2, "pseudos", { enumerable: true, get: function() {
          return o.pseudos;
        } });
        var s = t2(8680);
        Object.defineProperty(r2, "aliases", { enumerable: true, get: function() {
          return s.aliases;
        } });
        var u = t2(4428);
        function compilePseudoSelector(e3, r3, t3, l, c) {
          var p = r3.name, d = r3.data;
          if (Array.isArray(d)) {
            return u.subselects[p](e3, d, t3, l, c);
          }
          if (p in s.aliases) {
            if (d != null) {
              throw new Error("Pseudo ".concat(p, " doesn't have any arguments"));
            }
            var f = (0, n.parse)(s.aliases[p]);
            return u.subselects.is(e3, f, t3, l, c);
          }
          if (p in i.filters) {
            return i.filters[p](e3, d, t3, l);
          }
          if (p in o.pseudos) {
            var g = o.pseudos[p];
            (0, o.verifyPseudoArgs)(g, p, d);
            return g === a.falseFunc ? a.falseFunc : e3 === a.trueFunc ? function(e4) {
              return g(e4, t3, d);
            } : function(r4) {
              return g(r4, t3, d) && e3(r4);
            };
          }
          throw new Error("unmatched pseudo-class :".concat(p));
        }
        r2.compilePseudoSelector = compilePseudoSelector;
      }, 6973: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.verifyPseudoArgs = r2.pseudos = void 0;
        r2.pseudos = { empty: function(e3, r3) {
          var t2 = r3.adapter;
          return !t2.getChildren(e3).some(function(e4) {
            return t2.isTag(e4) || t2.getText(e4) !== "";
          });
        }, "first-child": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          var n = t2.getSiblings(e3).find(function(e4) {
            return t2.isTag(e4);
          });
          return n != null && a(e3, n);
        }, "last-child": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          var n = t2.getSiblings(e3);
          for (var i = n.length - 1; i >= 0; i--) {
            if (a(e3, n[i])) return true;
            if (t2.isTag(n[i])) break;
          }
          return false;
        }, "first-of-type": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          var n = t2.getSiblings(e3);
          var i = t2.getName(e3);
          for (var o = 0; o < n.length; o++) {
            var s = n[o];
            if (a(e3, s)) return true;
            if (t2.isTag(s) && t2.getName(s) === i) {
              break;
            }
          }
          return false;
        }, "last-of-type": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          var n = t2.getSiblings(e3);
          var i = t2.getName(e3);
          for (var o = n.length - 1; o >= 0; o--) {
            var s = n[o];
            if (a(e3, s)) return true;
            if (t2.isTag(s) && t2.getName(s) === i) {
              break;
            }
          }
          return false;
        }, "only-of-type": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          var n = t2.getName(e3);
          return t2.getSiblings(e3).every(function(r4) {
            return a(e3, r4) || !t2.isTag(r4) || t2.getName(r4) !== n;
          });
        }, "only-child": function(e3, r3) {
          var t2 = r3.adapter, a = r3.equals;
          return t2.getSiblings(e3).every(function(r4) {
            return a(e3, r4) || !t2.isTag(r4);
          });
        } };
        function verifyPseudoArgs(e3, r3, t2) {
          if (t2 === null) {
            if (e3.length > 2) {
              throw new Error("pseudo-selector :".concat(r3, " requires an argument"));
            }
          } else if (e3.length === 2) {
            throw new Error("pseudo-selector :".concat(r3, " doesn't have any arguments"));
          }
        }
        r2.verifyPseudoArgs = verifyPseudoArgs;
      }, 4428: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__spreadArray || function(e3, r3, t3) {
          if (t3 || arguments.length === 2) for (var a2 = 0, n2 = r3.length, i2; a2 < n2; a2++) {
            if (i2 || !(a2 in r3)) {
              if (!i2) i2 = Array.prototype.slice.call(r3, 0, a2);
              i2[a2] = r3[a2];
            }
          }
          return e3.concat(i2 || Array.prototype.slice.call(r3));
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.subselects = r2.getNextSiblings = r2.ensureIsTag = r2.PLACEHOLDER_ELEMENT = void 0;
        var n = t2(2947);
        var i = t2(538);
        r2.PLACEHOLDER_ELEMENT = {};
        function ensureIsTag(e3, r3) {
          if (e3 === n.falseFunc) return n.falseFunc;
          return function(t3) {
            return r3.isTag(t3) && e3(t3);
          };
        }
        r2.ensureIsTag = ensureIsTag;
        function getNextSiblings(e3, r3) {
          var t3 = r3.getSiblings(e3);
          if (t3.length <= 1) return [];
          var a2 = t3.indexOf(e3);
          if (a2 < 0 || a2 === t3.length - 1) return [];
          return t3.slice(a2 + 1).filter(r3.isTag);
        }
        r2.getNextSiblings = getNextSiblings;
        var is = function(e3, r3, t3, a2, n2) {
          var i2 = { xmlMode: !!t3.xmlMode, adapter: t3.adapter, equals: t3.equals };
          var o = n2(r3, i2, a2);
          return function(r4) {
            return o(r4) && e3(r4);
          };
        };
        r2.subselects = { is, matches: is, where: is, not: function(e3, r3, t3, a2, i2) {
          var o = { xmlMode: !!t3.xmlMode, adapter: t3.adapter, equals: t3.equals };
          var s = i2(r3, o, a2);
          if (s === n.falseFunc) return e3;
          if (s === n.trueFunc) return n.falseFunc;
          return function not(r4) {
            return !s(r4) && e3(r4);
          };
        }, has: function(e3, t3, o, s, u) {
          var l = o.adapter;
          var c = { xmlMode: !!o.xmlMode, adapter: l, equals: o.equals };
          var p = t3.some(function(e4) {
            return e4.some(i.isTraversal);
          }) ? [r2.PLACEHOLDER_ELEMENT] : void 0;
          var d = u(t3, c, p);
          if (d === n.falseFunc) return n.falseFunc;
          if (d === n.trueFunc) {
            return function(r3) {
              return l.getChildren(r3).some(l.isTag) && e3(r3);
            };
          }
          var f = ensureIsTag(d, l);
          var g = d.shouldTestNextSiblings, h = g === void 0 ? false : g;
          if (p) {
            return function(r3) {
              p[0] = r3;
              var t4 = l.getChildren(r3);
              var n2 = h ? a(a([], t4, true), getNextSiblings(r3, l), true) : t4;
              return e3(r3) && l.existsOne(f, n2);
            };
          }
          return function(r3) {
            return e3(r3) && l.existsOne(f, l.getChildren(r3));
          };
        } };
      }, 4901: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        var a = t2(8065);
        var n = t2(538);
        var i = { exists: 10, equals: 8, not: 7, start: 6, end: 6, any: 5, hyphen: 4, element: 4 };
        function sortByProcedure(e3) {
          var r3 = e3.map(getProcedure);
          for (var t3 = 1; t3 < e3.length; t3++) {
            var a2 = r3[t3];
            if (a2 < 0) continue;
            for (var n2 = t3 - 1; n2 >= 0 && a2 < r3[n2]; n2--) {
              var i2 = e3[n2 + 1];
              e3[n2 + 1] = e3[n2];
              e3[n2] = i2;
              r3[n2 + 1] = r3[n2];
              r3[n2] = a2;
            }
          }
        }
        r2["default"] = sortByProcedure;
        function getProcedure(e3) {
          var r3 = n.procedure[e3.type];
          if (e3.type === a.SelectorType.Attribute) {
            r3 = i[e3.action];
            if (r3 === i.equals && e3.name === "id") {
              r3 = 9;
            }
            if (e3.ignoreCase) {
              r3 >>= 1;
            }
          } else if (e3.type === a.SelectorType.Pseudo) {
            if (!e3.data) {
              r3 = 3;
            } else if (e3.name === "has" || e3.name === "contains") {
              r3 = 0;
            } else if (Array.isArray(e3.data)) {
              r3 = 0;
              for (var t3 = 0; t3 < e3.data.length; t3++) {
                if (e3.data[t3].length !== 1) continue;
                var o = getProcedure(e3.data[t3][0]);
                if (o === 0) {
                  r3 = 0;
                  break;
                }
                if (o > r3) r3 = o;
              }
              if (e3.data.length > 1 && r3 > 0) r3 -= 1;
            } else {
              r3 = 1;
            }
          }
          return r3;
        }
      }, 8065: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__createBinding || (Object.create ? function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          var n2 = Object.getOwnPropertyDescriptor(r3, t3);
          if (!n2 || ("get" in n2 ? !r3.__esModule : n2.writable || n2.configurable)) {
            n2 = { enumerable: true, get: function() {
              return r3[t3];
            } };
          }
          Object.defineProperty(e3, a2, n2);
        } : function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          e3[a2] = r3[t3];
        });
        var n = this && this.__exportStar || function(e3, r3) {
          for (var t3 in e3) if (t3 !== "default" && !Object.prototype.hasOwnProperty.call(r3, t3)) a(r3, e3, t3);
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.stringify = r2.parse = r2.isTraversal = void 0;
        n(t2(5615), r2);
        var i = t2(2422);
        Object.defineProperty(r2, "isTraversal", { enumerable: true, get: function() {
          return i.isTraversal;
        } });
        Object.defineProperty(r2, "parse", { enumerable: true, get: function() {
          return i.parse;
        } });
        var o = t2(8279);
        Object.defineProperty(r2, "stringify", { enumerable: true, get: function() {
          return o.stringify;
        } });
      }, 2422: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.parse = r2.isTraversal = void 0;
        var a = t2(5615);
        var n = /^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;
        var i = /\\([\da-f]{1,6}\s?|(\s)|.)/gi;
        var o = /* @__PURE__ */ new Map([[126, a.AttributeAction.Element], [94, a.AttributeAction.Start], [36, a.AttributeAction.End], [42, a.AttributeAction.Any], [33, a.AttributeAction.Not], [124, a.AttributeAction.Hyphen]]);
        var s = /* @__PURE__ */ new Set(["has", "not", "matches", "is", "where", "host", "host-context"]);
        function isTraversal(e3) {
          switch (e3.type) {
            case a.SelectorType.Adjacent:
            case a.SelectorType.Child:
            case a.SelectorType.Descendant:
            case a.SelectorType.Parent:
            case a.SelectorType.Sibling:
            case a.SelectorType.ColumnCombinator:
              return true;
            default:
              return false;
          }
        }
        r2.isTraversal = isTraversal;
        var u = /* @__PURE__ */ new Set(["contains", "icontains"]);
        function funescape(e3, r3, t3) {
          var a2 = parseInt(r3, 16) - 65536;
          return a2 !== a2 || t3 ? r3 : a2 < 0 ? String.fromCharCode(a2 + 65536) : String.fromCharCode(a2 >> 10 | 55296, a2 & 1023 | 56320);
        }
        function unescapeCSS(e3) {
          return e3.replace(i, funescape);
        }
        function isQuote(e3) {
          return e3 === 39 || e3 === 34;
        }
        function isWhitespace(e3) {
          return e3 === 32 || e3 === 9 || e3 === 10 || e3 === 12 || e3 === 13;
        }
        function parse(e3) {
          var r3 = [];
          var t3 = parseSelector(r3, "".concat(e3), 0);
          if (t3 < e3.length) {
            throw new Error("Unmatched selector: ".concat(e3.slice(t3)));
          }
          return r3;
        }
        r2.parse = parse;
        function parseSelector(e3, r3, t3) {
          var i2 = [];
          function getName(e4) {
            var a2 = r3.slice(t3 + e4).match(n);
            if (!a2) {
              throw new Error("Expected name, found ".concat(r3.slice(t3)));
            }
            var i3 = a2[0];
            t3 += e4 + i3.length;
            return unescapeCSS(i3);
          }
          function stripWhitespace(e4) {
            t3 += e4;
            while (t3 < r3.length && isWhitespace(r3.charCodeAt(t3))) {
              t3++;
            }
          }
          function readValueWithParenthesis() {
            t3 += 1;
            var e4 = t3;
            var a2 = 1;
            for (; a2 > 0 && t3 < r3.length; t3++) {
              if (r3.charCodeAt(t3) === 40 && !isEscaped(t3)) {
                a2++;
              } else if (r3.charCodeAt(t3) === 41 && !isEscaped(t3)) {
                a2--;
              }
            }
            if (a2) {
              throw new Error("Parenthesis not matched");
            }
            return unescapeCSS(r3.slice(e4, t3 - 1));
          }
          function isEscaped(e4) {
            var t4 = 0;
            while (r3.charCodeAt(--e4) === 92) t4++;
            return (t4 & 1) === 1;
          }
          function ensureNotTraversal() {
            if (i2.length > 0 && isTraversal(i2[i2.length - 1])) {
              throw new Error("Did not expect successive traversals.");
            }
          }
          function addTraversal(e4) {
            if (i2.length > 0 && i2[i2.length - 1].type === a.SelectorType.Descendant) {
              i2[i2.length - 1].type = e4;
              return;
            }
            ensureNotTraversal();
            i2.push({ type: e4 });
          }
          function addSpecialAttribute(e4, r4) {
            i2.push({ type: a.SelectorType.Attribute, name: e4, action: r4, value: getName(1), namespace: null, ignoreCase: "quirks" });
          }
          function finalizeSubselector() {
            if (i2.length && i2[i2.length - 1].type === a.SelectorType.Descendant) {
              i2.pop();
            }
            if (i2.length === 0) {
              throw new Error("Empty sub-selector");
            }
            e3.push(i2);
          }
          stripWhitespace(0);
          if (r3.length === t3) {
            return t3;
          }
          e: while (t3 < r3.length) {
            var l = r3.charCodeAt(t3);
            switch (l) {
              case 32:
              case 9:
              case 10:
              case 12:
              case 13: {
                if (i2.length === 0 || i2[0].type !== a.SelectorType.Descendant) {
                  ensureNotTraversal();
                  i2.push({ type: a.SelectorType.Descendant });
                }
                stripWhitespace(1);
                break;
              }
              case 62: {
                addTraversal(a.SelectorType.Child);
                stripWhitespace(1);
                break;
              }
              case 60: {
                addTraversal(a.SelectorType.Parent);
                stripWhitespace(1);
                break;
              }
              case 126: {
                addTraversal(a.SelectorType.Sibling);
                stripWhitespace(1);
                break;
              }
              case 43: {
                addTraversal(a.SelectorType.Adjacent);
                stripWhitespace(1);
                break;
              }
              case 46: {
                addSpecialAttribute("class", a.AttributeAction.Element);
                break;
              }
              case 35: {
                addSpecialAttribute("id", a.AttributeAction.Equals);
                break;
              }
              case 91: {
                stripWhitespace(1);
                var c = void 0;
                var p = null;
                if (r3.charCodeAt(t3) === 124) {
                  c = getName(1);
                } else if (r3.startsWith("*|", t3)) {
                  p = "*";
                  c = getName(2);
                } else {
                  c = getName(0);
                  if (r3.charCodeAt(t3) === 124 && r3.charCodeAt(t3 + 1) !== 61) {
                    p = c;
                    c = getName(1);
                  }
                }
                stripWhitespace(0);
                var d = a.AttributeAction.Exists;
                var f = o.get(r3.charCodeAt(t3));
                if (f) {
                  d = f;
                  if (r3.charCodeAt(t3 + 1) !== 61) {
                    throw new Error("Expected `=`");
                  }
                  stripWhitespace(2);
                } else if (r3.charCodeAt(t3) === 61) {
                  d = a.AttributeAction.Equals;
                  stripWhitespace(1);
                }
                var g = "";
                var h = null;
                if (d !== "exists") {
                  if (isQuote(r3.charCodeAt(t3))) {
                    var m = r3.charCodeAt(t3);
                    var v = t3 + 1;
                    while (v < r3.length && (r3.charCodeAt(v) !== m || isEscaped(v))) {
                      v += 1;
                    }
                    if (r3.charCodeAt(v) !== m) {
                      throw new Error("Attribute value didn't end");
                    }
                    g = unescapeCSS(r3.slice(t3 + 1, v));
                    t3 = v + 1;
                  } else {
                    var b = t3;
                    while (t3 < r3.length && (!isWhitespace(r3.charCodeAt(t3)) && r3.charCodeAt(t3) !== 93 || isEscaped(t3))) {
                      t3 += 1;
                    }
                    g = unescapeCSS(r3.slice(b, t3));
                  }
                  stripWhitespace(0);
                  var y = r3.charCodeAt(t3) | 32;
                  if (y === 115) {
                    h = false;
                    stripWhitespace(1);
                  } else if (y === 105) {
                    h = true;
                    stripWhitespace(1);
                  }
                }
                if (r3.charCodeAt(t3) !== 93) {
                  throw new Error("Attribute selector didn't terminate");
                }
                t3 += 1;
                var w = { type: a.SelectorType.Attribute, name: c, action: d, value: g, namespace: p, ignoreCase: h };
                i2.push(w);
                break;
              }
              case 58: {
                if (r3.charCodeAt(t3 + 1) === 58) {
                  i2.push({ type: a.SelectorType.PseudoElement, name: getName(2).toLowerCase(), data: r3.charCodeAt(t3) === 40 ? readValueWithParenthesis() : null });
                  continue;
                }
                var T = getName(1).toLowerCase();
                var E = null;
                if (r3.charCodeAt(t3) === 40) {
                  if (s.has(T)) {
                    if (isQuote(r3.charCodeAt(t3 + 1))) {
                      throw new Error("Pseudo-selector ".concat(T, " cannot be quoted"));
                    }
                    E = [];
                    t3 = parseSelector(E, r3, t3 + 1);
                    if (r3.charCodeAt(t3) !== 41) {
                      throw new Error("Missing closing parenthesis in :".concat(T, " (").concat(r3, ")"));
                    }
                    t3 += 1;
                  } else {
                    E = readValueWithParenthesis();
                    if (u.has(T)) {
                      var A = E.charCodeAt(0);
                      if (A === E.charCodeAt(E.length - 1) && isQuote(A)) {
                        E = E.slice(1, -1);
                      }
                    }
                    E = unescapeCSS(E);
                  }
                }
                i2.push({ type: a.SelectorType.Pseudo, name: T, data: E });
                break;
              }
              case 44: {
                finalizeSubselector();
                i2 = [];
                stripWhitespace(1);
                break;
              }
              default: {
                if (r3.startsWith("/*", t3)) {
                  var q = r3.indexOf("*/", t3 + 2);
                  if (q < 0) {
                    throw new Error("Comment was not terminated");
                  }
                  t3 = q + 2;
                  if (i2.length === 0) {
                    stripWhitespace(0);
                  }
                  break;
                }
                var p = null;
                var x = void 0;
                if (l === 42) {
                  t3 += 1;
                  x = "*";
                } else if (l === 124) {
                  x = "";
                  if (r3.charCodeAt(t3 + 1) === 124) {
                    addTraversal(a.SelectorType.ColumnCombinator);
                    stripWhitespace(2);
                    break;
                  }
                } else if (n.test(r3.slice(t3))) {
                  x = getName(0);
                } else {
                  break e;
                }
                if (r3.charCodeAt(t3) === 124 && r3.charCodeAt(t3 + 1) !== 124) {
                  p = x;
                  if (r3.charCodeAt(t3 + 1) === 42) {
                    x = "*";
                    t3 += 2;
                  } else {
                    x = getName(1);
                  }
                }
                i2.push(x === "*" ? { type: a.SelectorType.Universal, namespace: p } : { type: a.SelectorType.Tag, name: x, namespace: p });
              }
            }
          }
          finalizeSubselector();
          return t3;
        }
      }, 8279: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__spreadArray || function(e3, r3, t3) {
          if (t3 || arguments.length === 2) for (var a2 = 0, n2 = r3.length, i2; a2 < n2; a2++) {
            if (i2 || !(a2 in r3)) {
              if (!i2) i2 = Array.prototype.slice.call(r3, 0, a2);
              i2[a2] = r3[a2];
            }
          }
          return e3.concat(i2 || Array.prototype.slice.call(r3));
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.stringify = void 0;
        var n = t2(5615);
        var i = ["\\", '"'];
        var o = a(a([], i, true), ["(", ")"], false);
        var s = new Set(i.map(function(e3) {
          return e3.charCodeAt(0);
        }));
        var u = new Set(o.map(function(e3) {
          return e3.charCodeAt(0);
        }));
        var l = new Set(a(a([], o, true), ["~", "^", "$", "*", "+", "!", "|", ":", "[", "]", " ", "."], false).map(function(e3) {
          return e3.charCodeAt(0);
        }));
        function stringify(e3) {
          return e3.map(function(e4) {
            return e4.map(stringifyToken).join("");
          }).join(", ");
        }
        r2.stringify = stringify;
        function stringifyToken(e3, r3, t3) {
          switch (e3.type) {
            case n.SelectorType.Child:
              return r3 === 0 ? "> " : " > ";
            case n.SelectorType.Parent:
              return r3 === 0 ? "< " : " < ";
            case n.SelectorType.Sibling:
              return r3 === 0 ? "~ " : " ~ ";
            case n.SelectorType.Adjacent:
              return r3 === 0 ? "+ " : " + ";
            case n.SelectorType.Descendant:
              return " ";
            case n.SelectorType.ColumnCombinator:
              return r3 === 0 ? "|| " : " || ";
            case n.SelectorType.Universal:
              return e3.namespace === "*" && r3 + 1 < t3.length && "name" in t3[r3 + 1] ? "" : "".concat(getNamespace(e3.namespace), "*");
            case n.SelectorType.Tag:
              return getNamespacedName(e3);
            case n.SelectorType.PseudoElement:
              return "::".concat(escapeName(e3.name, l)).concat(e3.data === null ? "" : "(".concat(escapeName(e3.data, u), ")"));
            case n.SelectorType.Pseudo:
              return ":".concat(escapeName(e3.name, l)).concat(e3.data === null ? "" : "(".concat(typeof e3.data === "string" ? escapeName(e3.data, u) : stringify(e3.data), ")"));
            case n.SelectorType.Attribute: {
              if (e3.name === "id" && e3.action === n.AttributeAction.Equals && e3.ignoreCase === "quirks" && !e3.namespace) {
                return "#".concat(escapeName(e3.value, l));
              }
              if (e3.name === "class" && e3.action === n.AttributeAction.Element && e3.ignoreCase === "quirks" && !e3.namespace) {
                return ".".concat(escapeName(e3.value, l));
              }
              var a2 = getNamespacedName(e3);
              if (e3.action === n.AttributeAction.Exists) {
                return "[".concat(a2, "]");
              }
              return "[".concat(a2).concat(getActionValue(e3.action), '="').concat(escapeName(e3.value, s), '"').concat(e3.ignoreCase === null ? "" : e3.ignoreCase ? " i" : " s", "]");
            }
          }
        }
        function getActionValue(e3) {
          switch (e3) {
            case n.AttributeAction.Equals:
              return "";
            case n.AttributeAction.Element:
              return "~";
            case n.AttributeAction.Start:
              return "^";
            case n.AttributeAction.End:
              return "$";
            case n.AttributeAction.Any:
              return "*";
            case n.AttributeAction.Not:
              return "!";
            case n.AttributeAction.Hyphen:
              return "|";
            case n.AttributeAction.Exists:
              throw new Error("Shouldn't be here");
          }
        }
        function getNamespacedName(e3) {
          return "".concat(getNamespace(e3.namespace)).concat(escapeName(e3.name, l));
        }
        function getNamespace(e3) {
          return e3 !== null ? "".concat(e3 === "*" ? "*" : escapeName(e3, l), "|") : "";
        }
        function escapeName(e3, r3) {
          var t3 = 0;
          var a2 = "";
          for (var n2 = 0; n2 < e3.length; n2++) {
            if (r3.has(e3.charCodeAt(n2))) {
              a2 += "".concat(e3.slice(t3, n2), "\\").concat(e3.charAt(n2));
              t3 = n2 + 1;
            }
          }
          return a2.length > 0 ? a2 + e3.slice(t3) : e3;
        }
      }, 5615: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.AttributeAction = r2.IgnoreCaseMode = r2.SelectorType = void 0;
        var t2;
        (function(e3) {
          e3["Attribute"] = "attribute";
          e3["Pseudo"] = "pseudo";
          e3["PseudoElement"] = "pseudo-element";
          e3["Tag"] = "tag";
          e3["Universal"] = "universal";
          e3["Adjacent"] = "adjacent";
          e3["Child"] = "child";
          e3["Descendant"] = "descendant";
          e3["Parent"] = "parent";
          e3["Sibling"] = "sibling";
          e3["ColumnCombinator"] = "column-combinator";
        })(t2 = r2.SelectorType || (r2.SelectorType = {}));
        r2.IgnoreCaseMode = { Unknown: null, QuirksMode: "quirks", IgnoreCase: true, CaseSensitive: false };
        var a;
        (function(e3) {
          e3["Any"] = "any";
          e3["Element"] = "element";
          e3["End"] = "end";
          e3["Equals"] = "equals";
          e3["Exists"] = "exists";
          e3["Hyphen"] = "hyphen";
          e3["Not"] = "not";
          e3["Start"] = "start";
        })(a = r2.AttributeAction || (r2.AttributeAction = {}));
      }, 7537: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.attributeNames = r2.elementNames = void 0;
        r2.elementNames = /* @__PURE__ */ new Map([["altglyph", "altGlyph"], ["altglyphdef", "altGlyphDef"], ["altglyphitem", "altGlyphItem"], ["animatecolor", "animateColor"], ["animatemotion", "animateMotion"], ["animatetransform", "animateTransform"], ["clippath", "clipPath"], ["feblend", "feBlend"], ["fecolormatrix", "feColorMatrix"], ["fecomponenttransfer", "feComponentTransfer"], ["fecomposite", "feComposite"], ["feconvolvematrix", "feConvolveMatrix"], ["fediffuselighting", "feDiffuseLighting"], ["fedisplacementmap", "feDisplacementMap"], ["fedistantlight", "feDistantLight"], ["fedropshadow", "feDropShadow"], ["feflood", "feFlood"], ["fefunca", "feFuncA"], ["fefuncb", "feFuncB"], ["fefuncg", "feFuncG"], ["fefuncr", "feFuncR"], ["fegaussianblur", "feGaussianBlur"], ["feimage", "feImage"], ["femerge", "feMerge"], ["femergenode", "feMergeNode"], ["femorphology", "feMorphology"], ["feoffset", "feOffset"], ["fepointlight", "fePointLight"], ["fespecularlighting", "feSpecularLighting"], ["fespotlight", "feSpotLight"], ["fetile", "feTile"], ["feturbulence", "feTurbulence"], ["foreignobject", "foreignObject"], ["glyphref", "glyphRef"], ["lineargradient", "linearGradient"], ["radialgradient", "radialGradient"], ["textpath", "textPath"]]);
        r2.attributeNames = /* @__PURE__ */ new Map([["definitionurl", "definitionURL"], ["attributename", "attributeName"], ["attributetype", "attributeType"], ["basefrequency", "baseFrequency"], ["baseprofile", "baseProfile"], ["calcmode", "calcMode"], ["clippathunits", "clipPathUnits"], ["diffuseconstant", "diffuseConstant"], ["edgemode", "edgeMode"], ["filterunits", "filterUnits"], ["glyphref", "glyphRef"], ["gradienttransform", "gradientTransform"], ["gradientunits", "gradientUnits"], ["kernelmatrix", "kernelMatrix"], ["kernelunitlength", "kernelUnitLength"], ["keypoints", "keyPoints"], ["keysplines", "keySplines"], ["keytimes", "keyTimes"], ["lengthadjust", "lengthAdjust"], ["limitingconeangle", "limitingConeAngle"], ["markerheight", "markerHeight"], ["markerunits", "markerUnits"], ["markerwidth", "markerWidth"], ["maskcontentunits", "maskContentUnits"], ["maskunits", "maskUnits"], ["numoctaves", "numOctaves"], ["pathlength", "pathLength"], ["patterncontentunits", "patternContentUnits"], ["patterntransform", "patternTransform"], ["patternunits", "patternUnits"], ["pointsatx", "pointsAtX"], ["pointsaty", "pointsAtY"], ["pointsatz", "pointsAtZ"], ["preservealpha", "preserveAlpha"], ["preserveaspectratio", "preserveAspectRatio"], ["primitiveunits", "primitiveUnits"], ["refx", "refX"], ["refy", "refY"], ["repeatcount", "repeatCount"], ["repeatdur", "repeatDur"], ["requiredextensions", "requiredExtensions"], ["requiredfeatures", "requiredFeatures"], ["specularconstant", "specularConstant"], ["specularexponent", "specularExponent"], ["spreadmethod", "spreadMethod"], ["startoffset", "startOffset"], ["stddeviation", "stdDeviation"], ["stitchtiles", "stitchTiles"], ["surfacescale", "surfaceScale"], ["systemlanguage", "systemLanguage"], ["tablevalues", "tableValues"], ["targetx", "targetX"], ["targety", "targetY"], ["textlength", "textLength"], ["viewbox", "viewBox"], ["viewtarget", "viewTarget"], ["xchannelselector", "xChannelSelector"], ["ychannelselector", "yChannelSelector"], ["zoomandpan", "zoomAndPan"]]);
      }, 4614: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__assign || function() {
          a = Object.assign || function(e3) {
            for (var r3, t3 = 1, a2 = arguments.length; t3 < a2; t3++) {
              r3 = arguments[t3];
              for (var n2 in r3) if (Object.prototype.hasOwnProperty.call(r3, n2)) e3[n2] = r3[n2];
            }
            return e3;
          };
          return a.apply(this, arguments);
        };
        var n = this && this.__createBinding || (Object.create ? function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          Object.defineProperty(e3, a2, { enumerable: true, get: function() {
            return r3[t3];
          } });
        } : function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          e3[a2] = r3[t3];
        });
        var i = this && this.__setModuleDefault || (Object.create ? function(e3, r3) {
          Object.defineProperty(e3, "default", { enumerable: true, value: r3 });
        } : function(e3, r3) {
          e3["default"] = r3;
        });
        var o = this && this.__importStar || function(e3) {
          if (e3 && e3.__esModule) return e3;
          var r3 = {};
          if (e3 != null) {
            for (var t3 in e3) if (t3 !== "default" && Object.prototype.hasOwnProperty.call(e3, t3)) n(r3, e3, t3);
          }
          i(r3, e3);
          return r3;
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var s = o(t2(9391));
        var u = t2(9280);
        var l = t2(7537);
        var c = /* @__PURE__ */ new Set(["style", "script", "xmp", "iframe", "noembed", "noframes", "plaintext", "noscript"]);
        function formatAttributes(e3, r3) {
          if (!e3) return;
          return Object.keys(e3).map(function(t3) {
            var a2, n2;
            var i2 = (a2 = e3[t3]) !== null && a2 !== void 0 ? a2 : "";
            if (r3.xmlMode === "foreign") {
              t3 = (n2 = l.attributeNames.get(t3)) !== null && n2 !== void 0 ? n2 : t3;
            }
            if (!r3.emptyAttrs && !r3.xmlMode && i2 === "") {
              return t3;
            }
            return t3 + '="' + (r3.decodeEntities !== false ? u.encodeXML(i2) : i2.replace(/"/g, "&quot;")) + '"';
          }).join(" ");
        }
        var p = /* @__PURE__ */ new Set(["area", "base", "basefont", "br", "col", "command", "embed", "frame", "hr", "img", "input", "isindex", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
        function render(e3, r3) {
          if (r3 === void 0) {
            r3 = {};
          }
          var t3 = Array.isArray(e3) || e3.cheerio ? e3 : [e3];
          var a2 = "";
          for (var n2 = 0; n2 < t3.length; n2++) {
            a2 += renderNode(t3[n2], r3);
          }
          return a2;
        }
        r2["default"] = render;
        function renderNode(e3, r3) {
          switch (e3.type) {
            case s.Root:
              return render(e3.children, r3);
            case s.Directive:
            case s.Doctype:
              return renderDirective(e3);
            case s.Comment:
              return renderComment(e3);
            case s.CDATA:
              return renderCdata(e3);
            case s.Script:
            case s.Style:
            case s.Tag:
              return renderTag(e3, r3);
            case s.Text:
              return renderText(e3, r3);
          }
        }
        var d = /* @__PURE__ */ new Set(["mi", "mo", "mn", "ms", "mtext", "annotation-xml", "foreignObject", "desc", "title"]);
        var f = /* @__PURE__ */ new Set(["svg", "math"]);
        function renderTag(e3, r3) {
          var t3;
          if (r3.xmlMode === "foreign") {
            e3.name = (t3 = l.elementNames.get(e3.name)) !== null && t3 !== void 0 ? t3 : e3.name;
            if (e3.parent && d.has(e3.parent.name)) {
              r3 = a(a({}, r3), { xmlMode: false });
            }
          }
          if (!r3.xmlMode && f.has(e3.name)) {
            r3 = a(a({}, r3), { xmlMode: "foreign" });
          }
          var n2 = "<" + e3.name;
          var i2 = formatAttributes(e3.attribs, r3);
          if (i2) {
            n2 += " " + i2;
          }
          if (e3.children.length === 0 && (r3.xmlMode ? r3.selfClosingTags !== false : r3.selfClosingTags && p.has(e3.name))) {
            if (!r3.xmlMode) n2 += " ";
            n2 += "/>";
          } else {
            n2 += ">";
            if (e3.children.length > 0) {
              n2 += render(e3.children, r3);
            }
            if (r3.xmlMode || !p.has(e3.name)) {
              n2 += "</" + e3.name + ">";
            }
          }
          return n2;
        }
        function renderDirective(e3) {
          return "<" + e3.data + ">";
        }
        function renderText(e3, r3) {
          var t3 = e3.data || "";
          if (r3.decodeEntities !== false && !(!r3.xmlMode && e3.parent && c.has(e3.parent.name))) {
            t3 = u.encodeXML(t3);
          }
          return t3;
        }
        function renderCdata(e3) {
          return "<![CDATA[" + e3.children[0].data + "]]>";
        }
        function renderComment(e3) {
          return "<!--" + e3.data + "-->";
        }
      }, 9391: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.Doctype = r2.CDATA = r2.Tag = r2.Style = r2.Script = r2.Comment = r2.Directive = r2.Text = r2.Root = r2.isTag = r2.ElementType = void 0;
        var t2;
        (function(e3) {
          e3["Root"] = "root";
          e3["Text"] = "text";
          e3["Directive"] = "directive";
          e3["Comment"] = "comment";
          e3["Script"] = "script";
          e3["Style"] = "style";
          e3["Tag"] = "tag";
          e3["CDATA"] = "cdata";
          e3["Doctype"] = "doctype";
        })(t2 = r2.ElementType || (r2.ElementType = {}));
        function isTag(e3) {
          return e3.type === t2.Tag || e3.type === t2.Script || e3.type === t2.Style;
        }
        r2.isTag = isTag;
        r2.Root = t2.Root;
        r2.Text = t2.Text;
        r2.Directive = t2.Directive;
        r2.Comment = t2.Comment;
        r2.Script = t2.Script;
        r2.Style = t2.Style;
        r2.Tag = t2.Tag;
        r2.CDATA = t2.CDATA;
        r2.Doctype = t2.Doctype;
      }, 2472: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__createBinding || (Object.create ? function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          var n2 = Object.getOwnPropertyDescriptor(r3, t3);
          if (!n2 || ("get" in n2 ? !r3.__esModule : n2.writable || n2.configurable)) {
            n2 = { enumerable: true, get: function() {
              return r3[t3];
            } };
          }
          Object.defineProperty(e3, a2, n2);
        } : function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          e3[a2] = r3[t3];
        });
        var n = this && this.__exportStar || function(e3, r3) {
          for (var t3 in e3) if (t3 !== "default" && !Object.prototype.hasOwnProperty.call(r3, t3)) a(r3, e3, t3);
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.DomHandler = void 0;
        var i = t2(9391);
        var o = t2(1508);
        n(t2(1508), r2);
        var s = /\s+/g;
        var u = { normalizeWhitespace: false, withStartIndices: false, withEndIndices: false, xmlMode: false };
        var l = function() {
          function DomHandler(e3, r3, t3) {
            this.dom = [];
            this.root = new o.Document(this.dom);
            this.done = false;
            this.tagStack = [this.root];
            this.lastNode = null;
            this.parser = null;
            if (typeof r3 === "function") {
              t3 = r3;
              r3 = u;
            }
            if (typeof e3 === "object") {
              r3 = e3;
              e3 = void 0;
            }
            this.callback = e3 !== null && e3 !== void 0 ? e3 : null;
            this.options = r3 !== null && r3 !== void 0 ? r3 : u;
            this.elementCB = t3 !== null && t3 !== void 0 ? t3 : null;
          }
          DomHandler.prototype.onparserinit = function(e3) {
            this.parser = e3;
          };
          DomHandler.prototype.onreset = function() {
            this.dom = [];
            this.root = new o.Document(this.dom);
            this.done = false;
            this.tagStack = [this.root];
            this.lastNode = null;
            this.parser = null;
          };
          DomHandler.prototype.onend = function() {
            if (this.done) return;
            this.done = true;
            this.parser = null;
            this.handleCallback(null);
          };
          DomHandler.prototype.onerror = function(e3) {
            this.handleCallback(e3);
          };
          DomHandler.prototype.onclosetag = function() {
            this.lastNode = null;
            var e3 = this.tagStack.pop();
            if (this.options.withEndIndices) {
              e3.endIndex = this.parser.endIndex;
            }
            if (this.elementCB) this.elementCB(e3);
          };
          DomHandler.prototype.onopentag = function(e3, r3) {
            var t3 = this.options.xmlMode ? i.ElementType.Tag : void 0;
            var a2 = new o.Element(e3, r3, void 0, t3);
            this.addNode(a2);
            this.tagStack.push(a2);
          };
          DomHandler.prototype.ontext = function(e3) {
            var r3 = this.options.normalizeWhitespace;
            var t3 = this.lastNode;
            if (t3 && t3.type === i.ElementType.Text) {
              if (r3) {
                t3.data = (t3.data + e3).replace(s, " ");
              } else {
                t3.data += e3;
              }
              if (this.options.withEndIndices) {
                t3.endIndex = this.parser.endIndex;
              }
            } else {
              if (r3) {
                e3 = e3.replace(s, " ");
              }
              var a2 = new o.Text(e3);
              this.addNode(a2);
              this.lastNode = a2;
            }
          };
          DomHandler.prototype.oncomment = function(e3) {
            if (this.lastNode && this.lastNode.type === i.ElementType.Comment) {
              this.lastNode.data += e3;
              return;
            }
            var r3 = new o.Comment(e3);
            this.addNode(r3);
            this.lastNode = r3;
          };
          DomHandler.prototype.oncommentend = function() {
            this.lastNode = null;
          };
          DomHandler.prototype.oncdatastart = function() {
            var e3 = new o.Text("");
            var r3 = new o.NodeWithChildren(i.ElementType.CDATA, [e3]);
            this.addNode(r3);
            e3.parent = r3;
            this.lastNode = e3;
          };
          DomHandler.prototype.oncdataend = function() {
            this.lastNode = null;
          };
          DomHandler.prototype.onprocessinginstruction = function(e3, r3) {
            var t3 = new o.ProcessingInstruction(e3, r3);
            this.addNode(t3);
          };
          DomHandler.prototype.handleCallback = function(e3) {
            if (typeof this.callback === "function") {
              this.callback(e3, this.dom);
            } else if (e3) {
              throw e3;
            }
          };
          DomHandler.prototype.addNode = function(e3) {
            var r3 = this.tagStack[this.tagStack.length - 1];
            var t3 = r3.children[r3.children.length - 1];
            if (this.options.withStartIndices) {
              e3.startIndex = this.parser.startIndex;
            }
            if (this.options.withEndIndices) {
              e3.endIndex = this.parser.endIndex;
            }
            r3.children.push(e3);
            if (t3) {
              e3.prev = t3;
              t3.next = e3;
            }
            e3.parent = r3;
            this.lastNode = null;
          };
          return DomHandler;
        }();
        r2.DomHandler = l;
        r2["default"] = l;
      }, 1508: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__extends || /* @__PURE__ */ function() {
          var extendStatics = function(e3, r3) {
            extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, r4) {
              e4.__proto__ = r4;
            } || function(e4, r4) {
              for (var t3 in r4) if (Object.prototype.hasOwnProperty.call(r4, t3)) e4[t3] = r4[t3];
            };
            return extendStatics(e3, r3);
          };
          return function(e3, r3) {
            if (typeof r3 !== "function" && r3 !== null) throw new TypeError("Class extends value " + String(r3) + " is not a constructor or null");
            extendStatics(e3, r3);
            function __() {
              this.constructor = e3;
            }
            e3.prototype = r3 === null ? Object.create(r3) : (__.prototype = r3.prototype, new __());
          };
        }();
        var n = this && this.__assign || function() {
          n = Object.assign || function(e3) {
            for (var r3, t3 = 1, a2 = arguments.length; t3 < a2; t3++) {
              r3 = arguments[t3];
              for (var n2 in r3) if (Object.prototype.hasOwnProperty.call(r3, n2)) e3[n2] = r3[n2];
            }
            return e3;
          };
          return n.apply(this, arguments);
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.cloneNode = r2.hasChildren = r2.isDocument = r2.isDirective = r2.isComment = r2.isText = r2.isCDATA = r2.isTag = r2.Element = r2.Document = r2.NodeWithChildren = r2.ProcessingInstruction = r2.Comment = r2.Text = r2.DataNode = r2.Node = void 0;
        var i = t2(9391);
        var o = /* @__PURE__ */ new Map([[i.ElementType.Tag, 1], [i.ElementType.Script, 1], [i.ElementType.Style, 1], [i.ElementType.Directive, 1], [i.ElementType.Text, 3], [i.ElementType.CDATA, 4], [i.ElementType.Comment, 8], [i.ElementType.Root, 9]]);
        var s = function() {
          function Node(e3) {
            this.type = e3;
            this.parent = null;
            this.prev = null;
            this.next = null;
            this.startIndex = null;
            this.endIndex = null;
          }
          Object.defineProperty(Node.prototype, "nodeType", { get: function() {
            var e3;
            return (e3 = o.get(this.type)) !== null && e3 !== void 0 ? e3 : 1;
          }, enumerable: false, configurable: true });
          Object.defineProperty(Node.prototype, "parentNode", { get: function() {
            return this.parent;
          }, set: function(e3) {
            this.parent = e3;
          }, enumerable: false, configurable: true });
          Object.defineProperty(Node.prototype, "previousSibling", { get: function() {
            return this.prev;
          }, set: function(e3) {
            this.prev = e3;
          }, enumerable: false, configurable: true });
          Object.defineProperty(Node.prototype, "nextSibling", { get: function() {
            return this.next;
          }, set: function(e3) {
            this.next = e3;
          }, enumerable: false, configurable: true });
          Node.prototype.cloneNode = function(e3) {
            if (e3 === void 0) {
              e3 = false;
            }
            return cloneNode(this, e3);
          };
          return Node;
        }();
        r2.Node = s;
        var u = function(e3) {
          a(DataNode, e3);
          function DataNode(r3, t3) {
            var a2 = e3.call(this, r3) || this;
            a2.data = t3;
            return a2;
          }
          Object.defineProperty(DataNode.prototype, "nodeValue", { get: function() {
            return this.data;
          }, set: function(e4) {
            this.data = e4;
          }, enumerable: false, configurable: true });
          return DataNode;
        }(s);
        r2.DataNode = u;
        var l = function(e3) {
          a(Text, e3);
          function Text(r3) {
            return e3.call(this, i.ElementType.Text, r3) || this;
          }
          return Text;
        }(u);
        r2.Text = l;
        var c = function(e3) {
          a(Comment, e3);
          function Comment(r3) {
            return e3.call(this, i.ElementType.Comment, r3) || this;
          }
          return Comment;
        }(u);
        r2.Comment = c;
        var p = function(e3) {
          a(ProcessingInstruction, e3);
          function ProcessingInstruction(r3, t3) {
            var a2 = e3.call(this, i.ElementType.Directive, t3) || this;
            a2.name = r3;
            return a2;
          }
          return ProcessingInstruction;
        }(u);
        r2.ProcessingInstruction = p;
        var d = function(e3) {
          a(NodeWithChildren, e3);
          function NodeWithChildren(r3, t3) {
            var a2 = e3.call(this, r3) || this;
            a2.children = t3;
            return a2;
          }
          Object.defineProperty(NodeWithChildren.prototype, "firstChild", { get: function() {
            var e4;
            return (e4 = this.children[0]) !== null && e4 !== void 0 ? e4 : null;
          }, enumerable: false, configurable: true });
          Object.defineProperty(NodeWithChildren.prototype, "lastChild", { get: function() {
            return this.children.length > 0 ? this.children[this.children.length - 1] : null;
          }, enumerable: false, configurable: true });
          Object.defineProperty(NodeWithChildren.prototype, "childNodes", { get: function() {
            return this.children;
          }, set: function(e4) {
            this.children = e4;
          }, enumerable: false, configurable: true });
          return NodeWithChildren;
        }(s);
        r2.NodeWithChildren = d;
        var f = function(e3) {
          a(Document, e3);
          function Document(r3) {
            return e3.call(this, i.ElementType.Root, r3) || this;
          }
          return Document;
        }(d);
        r2.Document = f;
        var g = function(e3) {
          a(Element, e3);
          function Element(r3, t3, a2, n2) {
            if (a2 === void 0) {
              a2 = [];
            }
            if (n2 === void 0) {
              n2 = r3 === "script" ? i.ElementType.Script : r3 === "style" ? i.ElementType.Style : i.ElementType.Tag;
            }
            var o2 = e3.call(this, n2, a2) || this;
            o2.name = r3;
            o2.attribs = t3;
            return o2;
          }
          Object.defineProperty(Element.prototype, "tagName", { get: function() {
            return this.name;
          }, set: function(e4) {
            this.name = e4;
          }, enumerable: false, configurable: true });
          Object.defineProperty(Element.prototype, "attributes", { get: function() {
            var e4 = this;
            return Object.keys(this.attribs).map(function(r3) {
              var t3, a2;
              return { name: r3, value: e4.attribs[r3], namespace: (t3 = e4["x-attribsNamespace"]) === null || t3 === void 0 ? void 0 : t3[r3], prefix: (a2 = e4["x-attribsPrefix"]) === null || a2 === void 0 ? void 0 : a2[r3] };
            });
          }, enumerable: false, configurable: true });
          return Element;
        }(d);
        r2.Element = g;
        function isTag(e3) {
          return (0, i.isTag)(e3);
        }
        r2.isTag = isTag;
        function isCDATA(e3) {
          return e3.type === i.ElementType.CDATA;
        }
        r2.isCDATA = isCDATA;
        function isText(e3) {
          return e3.type === i.ElementType.Text;
        }
        r2.isText = isText;
        function isComment(e3) {
          return e3.type === i.ElementType.Comment;
        }
        r2.isComment = isComment;
        function isDirective(e3) {
          return e3.type === i.ElementType.Directive;
        }
        r2.isDirective = isDirective;
        function isDocument(e3) {
          return e3.type === i.ElementType.Root;
        }
        r2.isDocument = isDocument;
        function hasChildren(e3) {
          return Object.prototype.hasOwnProperty.call(e3, "children");
        }
        r2.hasChildren = hasChildren;
        function cloneNode(e3, r3) {
          if (r3 === void 0) {
            r3 = false;
          }
          var t3;
          if (isText(e3)) {
            t3 = new l(e3.data);
          } else if (isComment(e3)) {
            t3 = new c(e3.data);
          } else if (isTag(e3)) {
            var a2 = r3 ? cloneChildren(e3.children) : [];
            var o2 = new g(e3.name, n({}, e3.attribs), a2);
            a2.forEach(function(e4) {
              return e4.parent = o2;
            });
            if (e3.namespace != null) {
              o2.namespace = e3.namespace;
            }
            if (e3["x-attribsNamespace"]) {
              o2["x-attribsNamespace"] = n({}, e3["x-attribsNamespace"]);
            }
            if (e3["x-attribsPrefix"]) {
              o2["x-attribsPrefix"] = n({}, e3["x-attribsPrefix"]);
            }
            t3 = o2;
          } else if (isCDATA(e3)) {
            var a2 = r3 ? cloneChildren(e3.children) : [];
            var s2 = new d(i.ElementType.CDATA, a2);
            a2.forEach(function(e4) {
              return e4.parent = s2;
            });
            t3 = s2;
          } else if (isDocument(e3)) {
            var a2 = r3 ? cloneChildren(e3.children) : [];
            var u2 = new f(a2);
            a2.forEach(function(e4) {
              return e4.parent = u2;
            });
            if (e3["x-mode"]) {
              u2["x-mode"] = e3["x-mode"];
            }
            t3 = u2;
          } else if (isDirective(e3)) {
            var h = new p(e3.name, e3.data);
            if (e3["x-name"] != null) {
              h["x-name"] = e3["x-name"];
              h["x-publicId"] = e3["x-publicId"];
              h["x-systemId"] = e3["x-systemId"];
            }
            t3 = h;
          } else {
            throw new Error("Not implemented yet: ".concat(e3.type));
          }
          t3.startIndex = e3.startIndex;
          t3.endIndex = e3.endIndex;
          if (e3.sourceCodeLocation != null) {
            t3.sourceCodeLocation = e3.sourceCodeLocation;
          }
          return t3;
        }
        r2.cloneNode = cloneNode;
        function cloneChildren(e3) {
          var r3 = e3.map(function(e4) {
            return cloneNode(e4, true);
          });
          for (var t3 = 1; t3 < r3.length; t3++) {
            r3[t3].prev = r3[t3 - 1];
            r3[t3 - 1].next = r3[t3];
          }
          return r3;
        }
      }, 3442: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.getFeed = void 0;
        var a = t2(3930);
        var n = t2(7102);
        function getFeed(e3) {
          var r3 = getOneElement(isValidFeed, e3);
          return !r3 ? null : r3.name === "feed" ? getAtomFeed(r3) : getRssFeed(r3);
        }
        r2.getFeed = getFeed;
        function getAtomFeed(e3) {
          var r3;
          var t3 = e3.children;
          var a2 = { type: "atom", items: (0, n.getElementsByTagName)("entry", t3).map(function(e4) {
            var r4;
            var t4 = e4.children;
            var a3 = { media: getMediaElements(t4) };
            addConditionally(a3, "id", "id", t4);
            addConditionally(a3, "title", "title", t4);
            var n2 = (r4 = getOneElement("link", t4)) === null || r4 === void 0 ? void 0 : r4.attribs.href;
            if (n2) {
              a3.link = n2;
            }
            var i3 = fetch2("summary", t4) || fetch2("content", t4);
            if (i3) {
              a3.description = i3;
            }
            var o3 = fetch2("updated", t4);
            if (o3) {
              a3.pubDate = new Date(o3);
            }
            return a3;
          }) };
          addConditionally(a2, "id", "id", t3);
          addConditionally(a2, "title", "title", t3);
          var i2 = (r3 = getOneElement("link", t3)) === null || r3 === void 0 ? void 0 : r3.attribs.href;
          if (i2) {
            a2.link = i2;
          }
          addConditionally(a2, "description", "subtitle", t3);
          var o2 = fetch2("updated", t3);
          if (o2) {
            a2.updated = new Date(o2);
          }
          addConditionally(a2, "author", "email", t3, true);
          return a2;
        }
        function getRssFeed(e3) {
          var r3, t3;
          var a2 = (t3 = (r3 = getOneElement("channel", e3.children)) === null || r3 === void 0 ? void 0 : r3.children) !== null && t3 !== void 0 ? t3 : [];
          var i2 = { type: e3.name.substr(0, 3), id: "", items: (0, n.getElementsByTagName)("item", e3.children).map(function(e4) {
            var r4 = e4.children;
            var t4 = { media: getMediaElements(r4) };
            addConditionally(t4, "id", "guid", r4);
            addConditionally(t4, "title", "title", r4);
            addConditionally(t4, "link", "link", r4);
            addConditionally(t4, "description", "description", r4);
            var a3 = fetch2("pubDate", r4);
            if (a3) t4.pubDate = new Date(a3);
            return t4;
          }) };
          addConditionally(i2, "title", "title", a2);
          addConditionally(i2, "link", "link", a2);
          addConditionally(i2, "description", "description", a2);
          var o2 = fetch2("lastBuildDate", a2);
          if (o2) {
            i2.updated = new Date(o2);
          }
          addConditionally(i2, "author", "managingEditor", a2, true);
          return i2;
        }
        var i = ["url", "type", "lang"];
        var o = ["fileSize", "bitrate", "framerate", "samplingrate", "channels", "duration", "height", "width"];
        function getMediaElements(e3) {
          return (0, n.getElementsByTagName)("media:content", e3).map(function(e4) {
            var r3 = e4.attribs;
            var t3 = { medium: r3.medium, isDefault: !!r3.isDefault };
            for (var a2 = 0, n2 = i; a2 < n2.length; a2++) {
              var s = n2[a2];
              if (r3[s]) {
                t3[s] = r3[s];
              }
            }
            for (var u = 0, l = o; u < l.length; u++) {
              var s = l[u];
              if (r3[s]) {
                t3[s] = parseInt(r3[s], 10);
              }
            }
            if (r3.expression) {
              t3.expression = r3.expression;
            }
            return t3;
          });
        }
        function getOneElement(e3, r3) {
          return (0, n.getElementsByTagName)(e3, r3, true, 1)[0];
        }
        function fetch2(e3, r3, t3) {
          if (t3 === void 0) {
            t3 = false;
          }
          return (0, a.textContent)((0, n.getElementsByTagName)(e3, r3, t3, 1)).trim();
        }
        function addConditionally(e3, r3, t3, a2, n2) {
          if (n2 === void 0) {
            n2 = false;
          }
          var i2 = fetch2(t3, a2, n2);
          if (i2) e3[r3] = i2;
        }
        function isValidFeed(e3) {
          return e3 === "rss" || e3 === "feed" || e3 === "rdf:RDF";
        }
      }, 5509: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.uniqueSort = r2.compareDocumentPosition = r2.removeSubsets = void 0;
        var a = t2(2472);
        function removeSubsets(e3) {
          var r3 = e3.length;
          while (--r3 >= 0) {
            var t3 = e3[r3];
            if (r3 > 0 && e3.lastIndexOf(t3, r3 - 1) >= 0) {
              e3.splice(r3, 1);
              continue;
            }
            for (var a2 = t3.parent; a2; a2 = a2.parent) {
              if (e3.includes(a2)) {
                e3.splice(r3, 1);
                break;
              }
            }
          }
          return e3;
        }
        r2.removeSubsets = removeSubsets;
        function compareDocumentPosition(e3, r3) {
          var t3 = [];
          var n = [];
          if (e3 === r3) {
            return 0;
          }
          var i = (0, a.hasChildren)(e3) ? e3 : e3.parent;
          while (i) {
            t3.unshift(i);
            i = i.parent;
          }
          i = (0, a.hasChildren)(r3) ? r3 : r3.parent;
          while (i) {
            n.unshift(i);
            i = i.parent;
          }
          var o = Math.min(t3.length, n.length);
          var s = 0;
          while (s < o && t3[s] === n[s]) {
            s++;
          }
          if (s === 0) {
            return 1;
          }
          var u = t3[s - 1];
          var l = u.children;
          var c = t3[s];
          var p = n[s];
          if (l.indexOf(c) > l.indexOf(p)) {
            if (u === r3) {
              return 4 | 16;
            }
            return 4;
          }
          if (u === e3) {
            return 2 | 8;
          }
          return 2;
        }
        r2.compareDocumentPosition = compareDocumentPosition;
        function uniqueSort(e3) {
          e3 = e3.filter(function(e4, r3, t3) {
            return !t3.includes(e4, r3 + 1);
          });
          e3.sort(function(e4, r3) {
            var t3 = compareDocumentPosition(e4, r3);
            if (t3 & 2) {
              return -1;
            } else if (t3 & 4) {
              return 1;
            }
            return 0;
          });
          return e3;
        }
        r2.uniqueSort = uniqueSort;
      }, 5861: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__createBinding || (Object.create ? function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          Object.defineProperty(e3, a2, { enumerable: true, get: function() {
            return r3[t3];
          } });
        } : function(e3, r3, t3, a2) {
          if (a2 === void 0) a2 = t3;
          e3[a2] = r3[t3];
        });
        var n = this && this.__exportStar || function(e3, r3) {
          for (var t3 in e3) if (t3 !== "default" && !Object.prototype.hasOwnProperty.call(r3, t3)) a(r3, e3, t3);
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.hasChildren = r2.isDocument = r2.isComment = r2.isText = r2.isCDATA = r2.isTag = void 0;
        n(t2(3930), r2);
        n(t2(8298), r2);
        n(t2(1655), r2);
        n(t2(8929), r2);
        n(t2(7102), r2);
        n(t2(5509), r2);
        n(t2(3442), r2);
        var i = t2(2472);
        Object.defineProperty(r2, "isTag", { enumerable: true, get: function() {
          return i.isTag;
        } });
        Object.defineProperty(r2, "isCDATA", { enumerable: true, get: function() {
          return i.isCDATA;
        } });
        Object.defineProperty(r2, "isText", { enumerable: true, get: function() {
          return i.isText;
        } });
        Object.defineProperty(r2, "isComment", { enumerable: true, get: function() {
          return i.isComment;
        } });
        Object.defineProperty(r2, "isDocument", { enumerable: true, get: function() {
          return i.isDocument;
        } });
        Object.defineProperty(r2, "hasChildren", { enumerable: true, get: function() {
          return i.hasChildren;
        } });
      }, 7102: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.getElementsByTagType = r2.getElementsByTagName = r2.getElementById = r2.getElements = r2.testElement = void 0;
        var a = t2(2472);
        var n = t2(8929);
        var i = { tag_name: function(e3) {
          if (typeof e3 === "function") {
            return function(r3) {
              return (0, a.isTag)(r3) && e3(r3.name);
            };
          } else if (e3 === "*") {
            return a.isTag;
          }
          return function(r3) {
            return (0, a.isTag)(r3) && r3.name === e3;
          };
        }, tag_type: function(e3) {
          if (typeof e3 === "function") {
            return function(r3) {
              return e3(r3.type);
            };
          }
          return function(r3) {
            return r3.type === e3;
          };
        }, tag_contains: function(e3) {
          if (typeof e3 === "function") {
            return function(r3) {
              return (0, a.isText)(r3) && e3(r3.data);
            };
          }
          return function(r3) {
            return (0, a.isText)(r3) && r3.data === e3;
          };
        } };
        function getAttribCheck(e3, r3) {
          if (typeof r3 === "function") {
            return function(t3) {
              return (0, a.isTag)(t3) && r3(t3.attribs[e3]);
            };
          }
          return function(t3) {
            return (0, a.isTag)(t3) && t3.attribs[e3] === r3;
          };
        }
        function combineFuncs(e3, r3) {
          return function(t3) {
            return e3(t3) || r3(t3);
          };
        }
        function compileTest(e3) {
          var r3 = Object.keys(e3).map(function(r4) {
            var t3 = e3[r4];
            return Object.prototype.hasOwnProperty.call(i, r4) ? i[r4](t3) : getAttribCheck(r4, t3);
          });
          return r3.length === 0 ? null : r3.reduce(combineFuncs);
        }
        function testElement(e3, r3) {
          var t3 = compileTest(e3);
          return t3 ? t3(r3) : true;
        }
        r2.testElement = testElement;
        function getElements(e3, r3, t3, a2) {
          if (a2 === void 0) {
            a2 = Infinity;
          }
          var i2 = compileTest(e3);
          return i2 ? (0, n.filter)(i2, r3, t3, a2) : [];
        }
        r2.getElements = getElements;
        function getElementById(e3, r3, t3) {
          if (t3 === void 0) {
            t3 = true;
          }
          if (!Array.isArray(r3)) r3 = [r3];
          return (0, n.findOne)(getAttribCheck("id", e3), r3, t3);
        }
        r2.getElementById = getElementById;
        function getElementsByTagName(e3, r3, t3, a2) {
          if (t3 === void 0) {
            t3 = true;
          }
          if (a2 === void 0) {
            a2 = Infinity;
          }
          return (0, n.filter)(i.tag_name(e3), r3, t3, a2);
        }
        r2.getElementsByTagName = getElementsByTagName;
        function getElementsByTagType(e3, r3, t3, a2) {
          if (t3 === void 0) {
            t3 = true;
          }
          if (a2 === void 0) {
            a2 = Infinity;
          }
          return (0, n.filter)(i.tag_type(e3), r3, t3, a2);
        }
        r2.getElementsByTagType = getElementsByTagType;
      }, 1655: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.prepend = r2.prependChild = r2.append = r2.appendChild = r2.replaceElement = r2.removeElement = void 0;
        function removeElement(e3) {
          if (e3.prev) e3.prev.next = e3.next;
          if (e3.next) e3.next.prev = e3.prev;
          if (e3.parent) {
            var r3 = e3.parent.children;
            r3.splice(r3.lastIndexOf(e3), 1);
          }
        }
        r2.removeElement = removeElement;
        function replaceElement(e3, r3) {
          var t2 = r3.prev = e3.prev;
          if (t2) {
            t2.next = r3;
          }
          var a = r3.next = e3.next;
          if (a) {
            a.prev = r3;
          }
          var n = r3.parent = e3.parent;
          if (n) {
            var i = n.children;
            i[i.lastIndexOf(e3)] = r3;
          }
        }
        r2.replaceElement = replaceElement;
        function appendChild(e3, r3) {
          removeElement(r3);
          r3.next = null;
          r3.parent = e3;
          if (e3.children.push(r3) > 1) {
            var t2 = e3.children[e3.children.length - 2];
            t2.next = r3;
            r3.prev = t2;
          } else {
            r3.prev = null;
          }
        }
        r2.appendChild = appendChild;
        function append(e3, r3) {
          removeElement(r3);
          var t2 = e3.parent;
          var a = e3.next;
          r3.next = a;
          r3.prev = e3;
          e3.next = r3;
          r3.parent = t2;
          if (a) {
            a.prev = r3;
            if (t2) {
              var n = t2.children;
              n.splice(n.lastIndexOf(a), 0, r3);
            }
          } else if (t2) {
            t2.children.push(r3);
          }
        }
        r2.append = append;
        function prependChild(e3, r3) {
          removeElement(r3);
          r3.parent = e3;
          r3.prev = null;
          if (e3.children.unshift(r3) !== 1) {
            var t2 = e3.children[1];
            t2.prev = r3;
            r3.next = t2;
          } else {
            r3.next = null;
          }
        }
        r2.prependChild = prependChild;
        function prepend(e3, r3) {
          removeElement(r3);
          var t2 = e3.parent;
          if (t2) {
            var a = t2.children;
            a.splice(a.indexOf(e3), 0, r3);
          }
          if (e3.prev) {
            e3.prev.next = r3;
          }
          r3.parent = t2;
          r3.prev = e3.prev;
          r3.next = e3;
          e3.prev = r3;
        }
        r2.prepend = prepend;
      }, 8929: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.findAll = r2.existsOne = r2.findOne = r2.findOneChild = r2.find = r2.filter = void 0;
        var a = t2(2472);
        function filter(e3, r3, t3, a2) {
          if (t3 === void 0) {
            t3 = true;
          }
          if (a2 === void 0) {
            a2 = Infinity;
          }
          if (!Array.isArray(r3)) r3 = [r3];
          return find(e3, r3, t3, a2);
        }
        r2.filter = filter;
        function find(e3, r3, t3, n) {
          var i = [];
          for (var o = 0, s = r3; o < s.length; o++) {
            var u = s[o];
            if (e3(u)) {
              i.push(u);
              if (--n <= 0) break;
            }
            if (t3 && (0, a.hasChildren)(u) && u.children.length > 0) {
              var l = find(e3, u.children, t3, n);
              i.push.apply(i, l);
              n -= l.length;
              if (n <= 0) break;
            }
          }
          return i;
        }
        r2.find = find;
        function findOneChild(e3, r3) {
          return r3.find(e3);
        }
        r2.findOneChild = findOneChild;
        function findOne(e3, r3, t3) {
          if (t3 === void 0) {
            t3 = true;
          }
          var n = null;
          for (var i = 0; i < r3.length && !n; i++) {
            var o = r3[i];
            if (!(0, a.isTag)(o)) {
              continue;
            } else if (e3(o)) {
              n = o;
            } else if (t3 && o.children.length > 0) {
              n = findOne(e3, o.children);
            }
          }
          return n;
        }
        r2.findOne = findOne;
        function existsOne(e3, r3) {
          return r3.some(function(r4) {
            return (0, a.isTag)(r4) && (e3(r4) || r4.children.length > 0 && existsOne(e3, r4.children));
          });
        }
        r2.existsOne = existsOne;
        function findAll(e3, r3) {
          var t3;
          var n = [];
          var i = r3.filter(a.isTag);
          var o;
          while (o = i.shift()) {
            var s = (t3 = o.children) === null || t3 === void 0 ? void 0 : t3.filter(a.isTag);
            if (s && s.length > 0) {
              i.unshift.apply(i, s);
            }
            if (e3(o)) n.push(o);
          }
          return n;
        }
        r2.findAll = findAll;
      }, 3930: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.innerText = r2.textContent = r2.getText = r2.getInnerHTML = r2.getOuterHTML = void 0;
        var n = t2(2472);
        var i = a(t2(4614));
        var o = t2(9391);
        function getOuterHTML(e3, r3) {
          return (0, i.default)(e3, r3);
        }
        r2.getOuterHTML = getOuterHTML;
        function getInnerHTML(e3, r3) {
          return (0, n.hasChildren)(e3) ? e3.children.map(function(e4) {
            return getOuterHTML(e4, r3);
          }).join("") : "";
        }
        r2.getInnerHTML = getInnerHTML;
        function getText(e3) {
          if (Array.isArray(e3)) return e3.map(getText).join("");
          if ((0, n.isTag)(e3)) return e3.name === "br" ? "\n" : getText(e3.children);
          if ((0, n.isCDATA)(e3)) return getText(e3.children);
          if ((0, n.isText)(e3)) return e3.data;
          return "";
        }
        r2.getText = getText;
        function textContent(e3) {
          if (Array.isArray(e3)) return e3.map(textContent).join("");
          if ((0, n.hasChildren)(e3) && !(0, n.isComment)(e3)) {
            return textContent(e3.children);
          }
          if ((0, n.isText)(e3)) return e3.data;
          return "";
        }
        r2.textContent = textContent;
        function innerText(e3) {
          if (Array.isArray(e3)) return e3.map(innerText).join("");
          if ((0, n.hasChildren)(e3) && (e3.type === o.ElementType.Tag || (0, n.isCDATA)(e3))) {
            return innerText(e3.children);
          }
          if ((0, n.isText)(e3)) return e3.data;
          return "";
        }
        r2.innerText = innerText;
      }, 8298: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.prevElementSibling = r2.nextElementSibling = r2.getName = r2.hasAttrib = r2.getAttributeValue = r2.getSiblings = r2.getParent = r2.getChildren = void 0;
        var a = t2(2472);
        var n = [];
        function getChildren(e3) {
          var r3;
          return (r3 = e3.children) !== null && r3 !== void 0 ? r3 : n;
        }
        r2.getChildren = getChildren;
        function getParent(e3) {
          return e3.parent || null;
        }
        r2.getParent = getParent;
        function getSiblings(e3) {
          var r3, t3;
          var a2 = getParent(e3);
          if (a2 != null) return getChildren(a2);
          var n2 = [e3];
          var i = e3.prev, o = e3.next;
          while (i != null) {
            n2.unshift(i);
            r3 = i, i = r3.prev;
          }
          while (o != null) {
            n2.push(o);
            t3 = o, o = t3.next;
          }
          return n2;
        }
        r2.getSiblings = getSiblings;
        function getAttributeValue(e3, r3) {
          var t3;
          return (t3 = e3.attribs) === null || t3 === void 0 ? void 0 : t3[r3];
        }
        r2.getAttributeValue = getAttributeValue;
        function hasAttrib(e3, r3) {
          return e3.attribs != null && Object.prototype.hasOwnProperty.call(e3.attribs, r3) && e3.attribs[r3] != null;
        }
        r2.hasAttrib = hasAttrib;
        function getName(e3) {
          return e3.name;
        }
        r2.getName = getName;
        function nextElementSibling(e3) {
          var r3;
          var t3 = e3.next;
          while (t3 !== null && !(0, a.isTag)(t3)) r3 = t3, t3 = r3.next;
          return t3;
        }
        r2.nextElementSibling = nextElementSibling;
        function prevElementSibling(e3) {
          var r3;
          var t3 = e3.prev;
          while (t3 !== null && !(0, a.isTag)(t3)) r3 = t3, t3 = r3.prev;
          return t3;
        }
        r2.prevElementSibling = prevElementSibling;
      }, 6674: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var n = a(t2(1859));
        var i = a(t2(2128));
        var o = a(t2(4931));
        var s = a(t2(9281));
        r2.decodeXML = getStrictDecoder(o.default);
        r2.decodeHTMLStrict = getStrictDecoder(n.default);
        function getStrictDecoder(e3) {
          var r3 = Object.keys(e3).join("|");
          var t3 = getReplacer(e3);
          r3 += "|#[xX][\\da-fA-F]+|#\\d+";
          var a2 = new RegExp("&(?:" + r3 + ");", "g");
          return function(e4) {
            return String(e4).replace(a2, t3);
          };
        }
        var sorter = function(e3, r3) {
          return e3 < r3 ? 1 : -1;
        };
        r2.decodeHTML = function() {
          var e3 = Object.keys(i.default).sort(sorter);
          var r3 = Object.keys(n.default).sort(sorter);
          for (var t3 = 0, a2 = 0; t3 < r3.length; t3++) {
            if (e3[a2] === r3[t3]) {
              r3[t3] += ";?";
              a2++;
            } else {
              r3[t3] += ";";
            }
          }
          var o2 = new RegExp("&(?:" + r3.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g");
          var s2 = getReplacer(n.default);
          function replacer(e4) {
            if (e4.substr(-1) !== ";") e4 += ";";
            return s2(e4);
          }
          return function(e4) {
            return String(e4).replace(o2, replacer);
          };
        }();
        function getReplacer(e3) {
          return function replace(r3) {
            if (r3.charAt(1) === "#") {
              if (r3.charAt(2) === "X" || r3.charAt(2) === "x") {
                return s.default(parseInt(r3.substr(3), 16));
              }
              return s.default(parseInt(r3.substr(2), 10));
            }
            return e3[r3.slice(1, -1)];
          };
        }
      }, 9281: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var n = a(t2(7971));
        function decodeCodePoint(e3) {
          if (e3 >= 55296 && e3 <= 57343 || e3 > 1114111) {
            return "�";
          }
          if (e3 in n.default) {
            e3 = n.default[e3];
          }
          var r3 = "";
          if (e3 > 65535) {
            e3 -= 65536;
            r3 += String.fromCharCode(e3 >>> 10 & 1023 | 55296);
            e3 = 56320 | e3 & 1023;
          }
          r3 += String.fromCharCode(e3);
          return r3;
        }
        r2["default"] = decodeCodePoint;
      }, 6032: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var n = a(t2(4931));
        var i = getInverseObj(n.default);
        var o = getInverseReplacer(i);
        r2.encodeXML = getInverse(i, o);
        var s = a(t2(1859));
        var u = getInverseObj(s.default);
        var l = getInverseReplacer(u);
        r2.encodeHTML = getInverse(u, l);
        function getInverseObj(e3) {
          return Object.keys(e3).sort().reduce(function(r3, t3) {
            r3[e3[t3]] = "&" + t3 + ";";
            return r3;
          }, {});
        }
        function getInverseReplacer(e3) {
          var r3 = [];
          var t3 = [];
          Object.keys(e3).forEach(function(e4) {
            return e4.length === 1 ? r3.push("\\" + e4) : t3.push(e4);
          });
          t3.unshift("[" + r3.join("") + "]");
          return new RegExp(t3.join("|"), "g");
        }
        var c = /[^\0-\x7F]/g;
        var p = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
        function singleCharReplacer(e3) {
          return "&#x" + e3.charCodeAt(0).toString(16).toUpperCase() + ";";
        }
        function astralReplacer(e3, r3) {
          var t3 = e3.charCodeAt(0);
          var a2 = e3.charCodeAt(1);
          var n2 = (t3 - 55296) * 1024 + a2 - 56320 + 65536;
          return "&#x" + n2.toString(16).toUpperCase() + ";";
        }
        function getInverse(e3, r3) {
          return function(t3) {
            return t3.replace(r3, function(r4) {
              return e3[r4];
            }).replace(p, astralReplacer).replace(c, singleCharReplacer);
          };
        }
        var d = getInverseReplacer(i);
        function escape(e3) {
          return e3.replace(d, singleCharReplacer).replace(p, astralReplacer).replace(c, singleCharReplacer);
        }
        r2.escape = escape;
      }, 9280: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        var a = t2(6674);
        var n = t2(6032);
        function decode(e3, r3) {
          return (!r3 || r3 <= 0 ? a.decodeXML : a.decodeHTML)(e3);
        }
        r2.decode = decode;
        function decodeStrict(e3, r3) {
          return (!r3 || r3 <= 0 ? a.decodeXML : a.decodeHTMLStrict)(e3);
        }
        r2.decodeStrict = decodeStrict;
        function encode(e3, r3) {
          return (!r3 || r3 <= 0 ? n.encodeXML : n.encodeHTML)(e3);
        }
        r2.encode = encode;
        var i = t2(6032);
        r2.encodeXML = i.encodeXML;
        r2.encodeHTML = i.encodeHTML;
        r2.escape = i.escape;
        r2.encodeHTML4 = i.encodeHTML;
        r2.encodeHTML5 = i.encodeHTML;
        var o = t2(6674);
        r2.decodeXML = o.decodeXML;
        r2.decodeHTML = o.decodeHTML;
        r2.decodeHTMLStrict = o.decodeHTMLStrict;
        r2.decodeHTML4 = o.decodeHTML;
        r2.decodeHTML5 = o.decodeHTML;
        r2.decodeHTML4Strict = o.decodeHTMLStrict;
        r2.decodeHTML5Strict = o.decodeHTMLStrict;
        r2.decodeXMLStrict = o.decodeXML;
      }, 5902: function(e2, r2, t2) {
        e2 = t2.nmd(e2);
        (function(t3) {
          var a = r2;
          var n = e2 && e2.exports == a && e2;
          var i = typeof global == "object" && global;
          if (i.global === i || i.window === i) {
            t3 = i;
          }
          var o = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
          var s = /[\x01-\x7F]/g;
          var u = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g;
          var l = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g;
          var c = { "­": "shy", "‌": "zwnj", "‍": "zwj", "‎": "lrm", "⁣": "ic", "⁢": "it", "⁡": "af", "‏": "rlm", "​": "ZeroWidthSpace", "⁠": "NoBreak", "̑": "DownBreve", "⃛": "tdot", "⃜": "DotDot", "	": "Tab", "\n": "NewLine", " ": "puncsp", " ": "MediumSpace", " ": "thinsp", " ": "hairsp", " ": "emsp13", " ": "ensp", " ": "emsp14", " ": "emsp", " ": "numsp", " ": "nbsp", "  ": "ThickSpace", "‾": "oline", _: "lowbar", "‐": "dash", "–": "ndash", "—": "mdash", "―": "horbar", ",": "comma", ";": "semi", "⁏": "bsemi", ":": "colon", "⩴": "Colone", "!": "excl", "¡": "iexcl", "?": "quest", "¿": "iquest", ".": "period", "‥": "nldr", "…": "mldr", "·": "middot", "'": "apos", "‘": "lsquo", "’": "rsquo", "‚": "sbquo", "‹": "lsaquo", "›": "rsaquo", '"': "quot", "“": "ldquo", "”": "rdquo", "„": "bdquo", "«": "laquo", "»": "raquo", "(": "lpar", ")": "rpar", "[": "lsqb", "]": "rsqb", "{": "lcub", "}": "rcub", "⌈": "lceil", "⌉": "rceil", "⌊": "lfloor", "⌋": "rfloor", "⦅": "lopar", "⦆": "ropar", "⦋": "lbrke", "⦌": "rbrke", "⦍": "lbrkslu", "⦎": "rbrksld", "⦏": "lbrksld", "⦐": "rbrkslu", "⦑": "langd", "⦒": "rangd", "⦓": "lparlt", "⦔": "rpargt", "⦕": "gtlPar", "⦖": "ltrPar", "⟦": "lobrk", "⟧": "robrk", "⟨": "lang", "⟩": "rang", "⟪": "Lang", "⟫": "Rang", "⟬": "loang", "⟭": "roang", "❲": "lbbrk", "❳": "rbbrk", "‖": "Vert", "§": "sect", "¶": "para", "@": "commat", "*": "ast", "/": "sol", undefined: null, "&": "amp", "#": "num", "%": "percnt", "‰": "permil", "‱": "pertenk", "†": "dagger", "‡": "Dagger", "•": "bull", "⁃": "hybull", "′": "prime", "″": "Prime", "‴": "tprime", "⁗": "qprime", "‵": "bprime", "⁁": "caret", "`": "grave", "´": "acute", "˜": "tilde", "^": "Hat", "¯": "macr", "˘": "breve", "˙": "dot", "¨": "die", "˚": "ring", "˝": "dblac", "¸": "cedil", "˛": "ogon", "ˆ": "circ", "ˇ": "caron", "°": "deg", "©": "copy", "®": "reg", "℗": "copysr", "℘": "wp", "℞": "rx", "℧": "mho", "℩": "iiota", "←": "larr", "↚": "nlarr", "→": "rarr", "↛": "nrarr", "↑": "uarr", "↓": "darr", "↔": "harr", "↮": "nharr", "↕": "varr", "↖": "nwarr", "↗": "nearr", "↘": "searr", "↙": "swarr", "↝": "rarrw", "↝̸": "nrarrw", "↞": "Larr", "↟": "Uarr", "↠": "Rarr", "↡": "Darr", "↢": "larrtl", "↣": "rarrtl", "↤": "mapstoleft", "↥": "mapstoup", "↦": "map", "↧": "mapstodown", "↩": "larrhk", "↪": "rarrhk", "↫": "larrlp", "↬": "rarrlp", "↭": "harrw", "↰": "lsh", "↱": "rsh", "↲": "ldsh", "↳": "rdsh", "↵": "crarr", "↶": "cularr", "↷": "curarr", "↺": "olarr", "↻": "orarr", "↼": "lharu", "↽": "lhard", "↾": "uharr", "↿": "uharl", "⇀": "rharu", "⇁": "rhard", "⇂": "dharr", "⇃": "dharl", "⇄": "rlarr", "⇅": "udarr", "⇆": "lrarr", "⇇": "llarr", "⇈": "uuarr", "⇉": "rrarr", "⇊": "ddarr", "⇋": "lrhar", "⇌": "rlhar", "⇐": "lArr", "⇍": "nlArr", "⇑": "uArr", "⇒": "rArr", "⇏": "nrArr", "⇓": "dArr", "⇔": "iff", "⇎": "nhArr", "⇕": "vArr", "⇖": "nwArr", "⇗": "neArr", "⇘": "seArr", "⇙": "swArr", "⇚": "lAarr", "⇛": "rAarr", "⇝": "zigrarr", "⇤": "larrb", "⇥": "rarrb", "⇵": "duarr", "⇽": "loarr", "⇾": "roarr", "⇿": "hoarr", "∀": "forall", "∁": "comp", "∂": "part", "∂̸": "npart", "∃": "exist", "∄": "nexist", "∅": "empty", "∇": "Del", "∈": "in", "∉": "notin", "∋": "ni", "∌": "notni", "϶": "bepsi", "∏": "prod", "∐": "coprod", "∑": "sum", "+": "plus", "±": "pm", "÷": "div", "×": "times", "<": "lt", "≮": "nlt", "<⃒": "nvlt", "=": "equals", "≠": "ne", "=⃥": "bne", "⩵": "Equal", ">": "gt", "≯": "ngt", ">⃒": "nvgt", "¬": "not", "|": "vert", "¦": "brvbar", "−": "minus", "∓": "mp", "∔": "plusdo", "⁄": "frasl", "∖": "setmn", "∗": "lowast", "∘": "compfn", "√": "Sqrt", "∝": "prop", "∞": "infin", "∟": "angrt", "∠": "ang", "∠⃒": "nang", "∡": "angmsd", "∢": "angsph", "∣": "mid", "∤": "nmid", "∥": "par", "∦": "npar", "∧": "and", "∨": "or", "∩": "cap", "∩︀": "caps", "∪": "cup", "∪︀": "cups", "∫": "int", "∬": "Int", "∭": "tint", "⨌": "qint", "∮": "oint", "∯": "Conint", "∰": "Cconint", "∱": "cwint", "∲": "cwconint", "∳": "awconint", "∴": "there4", "∵": "becaus", "∶": "ratio", "∷": "Colon", "∸": "minusd", "∺": "mDDot", "∻": "homtht", "∼": "sim", "≁": "nsim", "∼⃒": "nvsim", "∽": "bsim", "∽̱": "race", "∾": "ac", "∾̳": "acE", "∿": "acd", "≀": "wr", "≂": "esim", "≂̸": "nesim", "≃": "sime", "≄": "nsime", "≅": "cong", "≇": "ncong", "≆": "simne", "≈": "ap", "≉": "nap", "≊": "ape", "≋": "apid", "≋̸": "napid", "≌": "bcong", "≍": "CupCap", "≭": "NotCupCap", "≍⃒": "nvap", "≎": "bump", "≎̸": "nbump", "≏": "bumpe", "≏̸": "nbumpe", "≐": "doteq", "≐̸": "nedot", "≑": "eDot", "≒": "efDot", "≓": "erDot", "≔": "colone", "≕": "ecolon", "≖": "ecir", "≗": "cire", "≙": "wedgeq", "≚": "veeeq", "≜": "trie", "≟": "equest", "≡": "equiv", "≢": "nequiv", "≡⃥": "bnequiv", "≤": "le", "≰": "nle", "≤⃒": "nvle", "≥": "ge", "≱": "nge", "≥⃒": "nvge", "≦": "lE", "≦̸": "nlE", "≧": "gE", "≧̸": "ngE", "≨︀": "lvnE", "≨": "lnE", "≩": "gnE", "≩︀": "gvnE", "≪": "ll", "≪̸": "nLtv", "≪⃒": "nLt", "≫": "gg", "≫̸": "nGtv", "≫⃒": "nGt", "≬": "twixt", "≲": "lsim", "≴": "nlsim", "≳": "gsim", "≵": "ngsim", "≶": "lg", "≸": "ntlg", "≷": "gl", "≹": "ntgl", "≺": "pr", "⊀": "npr", "≻": "sc", "⊁": "nsc", "≼": "prcue", "⋠": "nprcue", "≽": "sccue", "⋡": "nsccue", "≾": "prsim", "≿": "scsim", "≿̸": "NotSucceedsTilde", "⊂": "sub", "⊄": "nsub", "⊂⃒": "vnsub", "⊃": "sup", "⊅": "nsup", "⊃⃒": "vnsup", "⊆": "sube", "⊈": "nsube", "⊇": "supe", "⊉": "nsupe", "⊊︀": "vsubne", "⊊": "subne", "⊋︀": "vsupne", "⊋": "supne", "⊍": "cupdot", "⊎": "uplus", "⊏": "sqsub", "⊏̸": "NotSquareSubset", "⊐": "sqsup", "⊐̸": "NotSquareSuperset", "⊑": "sqsube", "⋢": "nsqsube", "⊒": "sqsupe", "⋣": "nsqsupe", "⊓": "sqcap", "⊓︀": "sqcaps", "⊔": "sqcup", "⊔︀": "sqcups", "⊕": "oplus", "⊖": "ominus", "⊗": "otimes", "⊘": "osol", "⊙": "odot", "⊚": "ocir", "⊛": "oast", "⊝": "odash", "⊞": "plusb", "⊟": "minusb", "⊠": "timesb", "⊡": "sdotb", "⊢": "vdash", "⊬": "nvdash", "⊣": "dashv", "⊤": "top", "⊥": "bot", "⊧": "models", "⊨": "vDash", "⊭": "nvDash", "⊩": "Vdash", "⊮": "nVdash", "⊪": "Vvdash", "⊫": "VDash", "⊯": "nVDash", "⊰": "prurel", "⊲": "vltri", "⋪": "nltri", "⊳": "vrtri", "⋫": "nrtri", "⊴": "ltrie", "⋬": "nltrie", "⊴⃒": "nvltrie", "⊵": "rtrie", "⋭": "nrtrie", "⊵⃒": "nvrtrie", "⊶": "origof", "⊷": "imof", "⊸": "mumap", "⊹": "hercon", "⊺": "intcal", "⊻": "veebar", "⊽": "barvee", "⊾": "angrtvb", "⊿": "lrtri", "⋀": "Wedge", "⋁": "Vee", "⋂": "xcap", "⋃": "xcup", "⋄": "diam", "⋅": "sdot", "⋆": "Star", "⋇": "divonx", "⋈": "bowtie", "⋉": "ltimes", "⋊": "rtimes", "⋋": "lthree", "⋌": "rthree", "⋍": "bsime", "⋎": "cuvee", "⋏": "cuwed", "⋐": "Sub", "⋑": "Sup", "⋒": "Cap", "⋓": "Cup", "⋔": "fork", "⋕": "epar", "⋖": "ltdot", "⋗": "gtdot", "⋘": "Ll", "⋘̸": "nLl", "⋙": "Gg", "⋙̸": "nGg", "⋚︀": "lesg", "⋚": "leg", "⋛": "gel", "⋛︀": "gesl", "⋞": "cuepr", "⋟": "cuesc", "⋦": "lnsim", "⋧": "gnsim", "⋨": "prnsim", "⋩": "scnsim", "⋮": "vellip", "⋯": "ctdot", "⋰": "utdot", "⋱": "dtdot", "⋲": "disin", "⋳": "isinsv", "⋴": "isins", "⋵": "isindot", "⋵̸": "notindot", "⋶": "notinvc", "⋷": "notinvb", "⋹": "isinE", "⋹̸": "notinE", "⋺": "nisd", "⋻": "xnis", "⋼": "nis", "⋽": "notnivc", "⋾": "notnivb", "⌅": "barwed", "⌆": "Barwed", "⌌": "drcrop", "⌍": "dlcrop", "⌎": "urcrop", "⌏": "ulcrop", "⌐": "bnot", "⌒": "profline", "⌓": "profsurf", "⌕": "telrec", "⌖": "target", "⌜": "ulcorn", "⌝": "urcorn", "⌞": "dlcorn", "⌟": "drcorn", "⌢": "frown", "⌣": "smile", "⌭": "cylcty", "⌮": "profalar", "⌶": "topbot", "⌽": "ovbar", "⌿": "solbar", "⍼": "angzarr", "⎰": "lmoust", "⎱": "rmoust", "⎴": "tbrk", "⎵": "bbrk", "⎶": "bbrktbrk", "⏜": "OverParenthesis", "⏝": "UnderParenthesis", "⏞": "OverBrace", "⏟": "UnderBrace", "⏢": "trpezium", "⏧": "elinters", "␣": "blank", "─": "boxh", "│": "boxv", "┌": "boxdr", "┐": "boxdl", "└": "boxur", "┘": "boxul", "├": "boxvr", "┤": "boxvl", "┬": "boxhd", "┴": "boxhu", "┼": "boxvh", "═": "boxH", "║": "boxV", "╒": "boxdR", "╓": "boxDr", "╔": "boxDR", "╕": "boxdL", "╖": "boxDl", "╗": "boxDL", "╘": "boxuR", "╙": "boxUr", "╚": "boxUR", "╛": "boxuL", "╜": "boxUl", "╝": "boxUL", "╞": "boxvR", "╟": "boxVr", "╠": "boxVR", "╡": "boxvL", "╢": "boxVl", "╣": "boxVL", "╤": "boxHd", "╥": "boxhD", "╦": "boxHD", "╧": "boxHu", "╨": "boxhU", "╩": "boxHU", "╪": "boxvH", "╫": "boxVh", "╬": "boxVH", "▀": "uhblk", "▄": "lhblk", "█": "block", "░": "blk14", "▒": "blk12", "▓": "blk34", "□": "squ", "▪": "squf", "▫": "EmptyVerySmallSquare", "▭": "rect", "▮": "marker", "▱": "fltns", "△": "xutri", "▴": "utrif", "▵": "utri", "▸": "rtrif", "▹": "rtri", "▽": "xdtri", "▾": "dtrif", "▿": "dtri", "◂": "ltrif", "◃": "ltri", "◊": "loz", "○": "cir", "◬": "tridot", "◯": "xcirc", "◸": "ultri", "◹": "urtri", "◺": "lltri", "◻": "EmptySmallSquare", "◼": "FilledSmallSquare", "★": "starf", "☆": "star", "☎": "phone", "♀": "female", "♂": "male", "♠": "spades", "♣": "clubs", "♥": "hearts", "♦": "diams", "♪": "sung", "✓": "check", "✗": "cross", "✠": "malt", "✶": "sext", "❘": "VerticalSeparator", "⟈": "bsolhsub", "⟉": "suphsol", "⟵": "xlarr", "⟶": "xrarr", "⟷": "xharr", "⟸": "xlArr", "⟹": "xrArr", "⟺": "xhArr", "⟼": "xmap", "⟿": "dzigrarr", "⤂": "nvlArr", "⤃": "nvrArr", "⤄": "nvHarr", "⤅": "Map", "⤌": "lbarr", "⤍": "rbarr", "⤎": "lBarr", "⤏": "rBarr", "⤐": "RBarr", "⤑": "DDotrahd", "⤒": "UpArrowBar", "⤓": "DownArrowBar", "⤖": "Rarrtl", "⤙": "latail", "⤚": "ratail", "⤛": "lAtail", "⤜": "rAtail", "⤝": "larrfs", "⤞": "rarrfs", "⤟": "larrbfs", "⤠": "rarrbfs", "⤣": "nwarhk", "⤤": "nearhk", "⤥": "searhk", "⤦": "swarhk", "⤧": "nwnear", "⤨": "toea", "⤩": "tosa", "⤪": "swnwar", "⤳": "rarrc", "⤳̸": "nrarrc", "⤵": "cudarrr", "⤶": "ldca", "⤷": "rdca", "⤸": "cudarrl", "⤹": "larrpl", "⤼": "curarrm", "⤽": "cularrp", "⥅": "rarrpl", "⥈": "harrcir", "⥉": "Uarrocir", "⥊": "lurdshar", "⥋": "ldrushar", "⥎": "LeftRightVector", "⥏": "RightUpDownVector", "⥐": "DownLeftRightVector", "⥑": "LeftUpDownVector", "⥒": "LeftVectorBar", "⥓": "RightVectorBar", "⥔": "RightUpVectorBar", "⥕": "RightDownVectorBar", "⥖": "DownLeftVectorBar", "⥗": "DownRightVectorBar", "⥘": "LeftUpVectorBar", "⥙": "LeftDownVectorBar", "⥚": "LeftTeeVector", "⥛": "RightTeeVector", "⥜": "RightUpTeeVector", "⥝": "RightDownTeeVector", "⥞": "DownLeftTeeVector", "⥟": "DownRightTeeVector", "⥠": "LeftUpTeeVector", "⥡": "LeftDownTeeVector", "⥢": "lHar", "⥣": "uHar", "⥤": "rHar", "⥥": "dHar", "⥦": "luruhar", "⥧": "ldrdhar", "⥨": "ruluhar", "⥩": "rdldhar", "⥪": "lharul", "⥫": "llhard", "⥬": "rharul", "⥭": "lrhard", "⥮": "udhar", "⥯": "duhar", "⥰": "RoundImplies", "⥱": "erarr", "⥲": "simrarr", "⥳": "larrsim", "⥴": "rarrsim", "⥵": "rarrap", "⥶": "ltlarr", "⥸": "gtrarr", "⥹": "subrarr", "⥻": "suplarr", "⥼": "lfisht", "⥽": "rfisht", "⥾": "ufisht", "⥿": "dfisht", "⦚": "vzigzag", "⦜": "vangrt", "⦝": "angrtvbd", "⦤": "ange", "⦥": "range", "⦦": "dwangle", "⦧": "uwangle", "⦨": "angmsdaa", "⦩": "angmsdab", "⦪": "angmsdac", "⦫": "angmsdad", "⦬": "angmsdae", "⦭": "angmsdaf", "⦮": "angmsdag", "⦯": "angmsdah", "⦰": "bemptyv", "⦱": "demptyv", "⦲": "cemptyv", "⦳": "raemptyv", "⦴": "laemptyv", "⦵": "ohbar", "⦶": "omid", "⦷": "opar", "⦹": "operp", "⦻": "olcross", "⦼": "odsold", "⦾": "olcir", "⦿": "ofcir", "⧀": "olt", "⧁": "ogt", "⧂": "cirscir", "⧃": "cirE", "⧄": "solb", "⧅": "bsolb", "⧉": "boxbox", "⧍": "trisb", "⧎": "rtriltri", "⧏": "LeftTriangleBar", "⧏̸": "NotLeftTriangleBar", "⧐": "RightTriangleBar", "⧐̸": "NotRightTriangleBar", "⧜": "iinfin", "⧝": "infintie", "⧞": "nvinfin", "⧣": "eparsl", "⧤": "smeparsl", "⧥": "eqvparsl", "⧫": "lozf", "⧴": "RuleDelayed", "⧶": "dsol", "⨀": "xodot", "⨁": "xoplus", "⨂": "xotime", "⨄": "xuplus", "⨆": "xsqcup", "⨍": "fpartint", "⨐": "cirfnint", "⨑": "awint", "⨒": "rppolint", "⨓": "scpolint", "⨔": "npolint", "⨕": "pointint", "⨖": "quatint", "⨗": "intlarhk", "⨢": "pluscir", "⨣": "plusacir", "⨤": "simplus", "⨥": "plusdu", "⨦": "plussim", "⨧": "plustwo", "⨩": "mcomma", "⨪": "minusdu", "⨭": "loplus", "⨮": "roplus", "⨯": "Cross", "⨰": "timesd", "⨱": "timesbar", "⨳": "smashp", "⨴": "lotimes", "⨵": "rotimes", "⨶": "otimesas", "⨷": "Otimes", "⨸": "odiv", "⨹": "triplus", "⨺": "triminus", "⨻": "tritime", "⨼": "iprod", "⨿": "amalg", "⩀": "capdot", "⩂": "ncup", "⩃": "ncap", "⩄": "capand", "⩅": "cupor", "⩆": "cupcap", "⩇": "capcup", "⩈": "cupbrcap", "⩉": "capbrcup", "⩊": "cupcup", "⩋": "capcap", "⩌": "ccups", "⩍": "ccaps", "⩐": "ccupssm", "⩓": "And", "⩔": "Or", "⩕": "andand", "⩖": "oror", "⩗": "orslope", "⩘": "andslope", "⩚": "andv", "⩛": "orv", "⩜": "andd", "⩝": "ord", "⩟": "wedbar", "⩦": "sdote", "⩪": "simdot", "⩭": "congdot", "⩭̸": "ncongdot", "⩮": "easter", "⩯": "apacir", "⩰": "apE", "⩰̸": "napE", "⩱": "eplus", "⩲": "pluse", "⩳": "Esim", "⩷": "eDDot", "⩸": "equivDD", "⩹": "ltcir", "⩺": "gtcir", "⩻": "ltquest", "⩼": "gtquest", "⩽": "les", "⩽̸": "nles", "⩾": "ges", "⩾̸": "nges", "⩿": "lesdot", "⪀": "gesdot", "⪁": "lesdoto", "⪂": "gesdoto", "⪃": "lesdotor", "⪄": "gesdotol", "⪅": "lap", "⪆": "gap", "⪇": "lne", "⪈": "gne", "⪉": "lnap", "⪊": "gnap", "⪋": "lEg", "⪌": "gEl", "⪍": "lsime", "⪎": "gsime", "⪏": "lsimg", "⪐": "gsiml", "⪑": "lgE", "⪒": "glE", "⪓": "lesges", "⪔": "gesles", "⪕": "els", "⪖": "egs", "⪗": "elsdot", "⪘": "egsdot", "⪙": "el", "⪚": "eg", "⪝": "siml", "⪞": "simg", "⪟": "simlE", "⪠": "simgE", "⪡": "LessLess", "⪡̸": "NotNestedLessLess", "⪢": "GreaterGreater", "⪢̸": "NotNestedGreaterGreater", "⪤": "glj", "⪥": "gla", "⪦": "ltcc", "⪧": "gtcc", "⪨": "lescc", "⪩": "gescc", "⪪": "smt", "⪫": "lat", "⪬": "smte", "⪬︀": "smtes", "⪭": "late", "⪭︀": "lates", "⪮": "bumpE", "⪯": "pre", "⪯̸": "npre", "⪰": "sce", "⪰̸": "nsce", "⪳": "prE", "⪴": "scE", "⪵": "prnE", "⪶": "scnE", "⪷": "prap", "⪸": "scap", "⪹": "prnap", "⪺": "scnap", "⪻": "Pr", "⪼": "Sc", "⪽": "subdot", "⪾": "supdot", "⪿": "subplus", "⫀": "supplus", "⫁": "submult", "⫂": "supmult", "⫃": "subedot", "⫄": "supedot", "⫅": "subE", "⫅̸": "nsubE", "⫆": "supE", "⫆̸": "nsupE", "⫇": "subsim", "⫈": "supsim", "⫋︀": "vsubnE", "⫋": "subnE", "⫌︀": "vsupnE", "⫌": "supnE", "⫏": "csub", "⫐": "csup", "⫑": "csube", "⫒": "csupe", "⫓": "subsup", "⫔": "supsub", "⫕": "subsub", "⫖": "supsup", "⫗": "suphsub", "⫘": "supdsub", "⫙": "forkv", "⫚": "topfork", "⫛": "mlcp", "⫤": "Dashv", "⫦": "Vdashl", "⫧": "Barv", "⫨": "vBar", "⫩": "vBarv", "⫫": "Vbar", "⫬": "Not", "⫭": "bNot", "⫮": "rnmid", "⫯": "cirmid", "⫰": "midcir", "⫱": "topcir", "⫲": "nhpar", "⫳": "parsim", "⫽": "parsl", "⫽⃥": "nparsl", "♭": "flat", "♮": "natur", "♯": "sharp", "¤": "curren", "¢": "cent", $: "dollar", "£": "pound", "¥": "yen", "€": "euro", "¹": "sup1", "½": "half", "⅓": "frac13", "¼": "frac14", "⅕": "frac15", "⅙": "frac16", "⅛": "frac18", "²": "sup2", "⅔": "frac23", "⅖": "frac25", "³": "sup3", "¾": "frac34", "⅗": "frac35", "⅜": "frac38", "⅘": "frac45", "⅚": "frac56", "⅝": "frac58", "⅞": "frac78", "𝒶": "ascr", "𝕒": "aopf", "𝔞": "afr", "𝔸": "Aopf", "𝔄": "Afr", "𝒜": "Ascr", "ª": "ordf", "á": "aacute", "Á": "Aacute", "à": "agrave", "À": "Agrave", "ă": "abreve", "Ă": "Abreve", "â": "acirc", "Â": "Acirc", "å": "aring", "Å": "angst", "ä": "auml", "Ä": "Auml", "ã": "atilde", "Ã": "Atilde", "ą": "aogon", "Ą": "Aogon", "ā": "amacr", "Ā": "Amacr", "æ": "aelig", "Æ": "AElig", "𝒷": "bscr", "𝕓": "bopf", "𝔟": "bfr", "𝔹": "Bopf", "ℬ": "Bscr", "𝔅": "Bfr", "𝔠": "cfr", "𝒸": "cscr", "𝕔": "copf", "ℭ": "Cfr", "𝒞": "Cscr", "ℂ": "Copf", "ć": "cacute", "Ć": "Cacute", "ĉ": "ccirc", "Ĉ": "Ccirc", "č": "ccaron", "Č": "Ccaron", "ċ": "cdot", "Ċ": "Cdot", "ç": "ccedil", "Ç": "Ccedil", "℅": "incare", "𝔡": "dfr", "ⅆ": "dd", "𝕕": "dopf", "𝒹": "dscr", "𝒟": "Dscr", "𝔇": "Dfr", "ⅅ": "DD", "𝔻": "Dopf", "ď": "dcaron", "Ď": "Dcaron", "đ": "dstrok", "Đ": "Dstrok", "ð": "eth", "Ð": "ETH", "ⅇ": "ee", "ℯ": "escr", "𝔢": "efr", "𝕖": "eopf", "ℰ": "Escr", "𝔈": "Efr", "𝔼": "Eopf", "é": "eacute", "É": "Eacute", "è": "egrave", "È": "Egrave", "ê": "ecirc", "Ê": "Ecirc", "ě": "ecaron", "Ě": "Ecaron", "ë": "euml", "Ë": "Euml", "ė": "edot", "Ė": "Edot", "ę": "eogon", "Ę": "Eogon", "ē": "emacr", "Ē": "Emacr", "𝔣": "ffr", "𝕗": "fopf", "𝒻": "fscr", "𝔉": "Ffr", "𝔽": "Fopf", "ℱ": "Fscr", "ﬀ": "fflig", "ﬃ": "ffilig", "ﬄ": "ffllig", "ﬁ": "filig", fj: "fjlig", "ﬂ": "fllig", "ƒ": "fnof", "ℊ": "gscr", "𝕘": "gopf", "𝔤": "gfr", "𝒢": "Gscr", "𝔾": "Gopf", "𝔊": "Gfr", "ǵ": "gacute", "ğ": "gbreve", "Ğ": "Gbreve", "ĝ": "gcirc", "Ĝ": "Gcirc", "ġ": "gdot", "Ġ": "Gdot", "Ģ": "Gcedil", "𝔥": "hfr", "ℎ": "planckh", "𝒽": "hscr", "𝕙": "hopf", "ℋ": "Hscr", "ℌ": "Hfr", "ℍ": "Hopf", "ĥ": "hcirc", "Ĥ": "Hcirc", "ℏ": "hbar", "ħ": "hstrok", "Ħ": "Hstrok", "𝕚": "iopf", "𝔦": "ifr", "𝒾": "iscr", "ⅈ": "ii", "𝕀": "Iopf", "ℐ": "Iscr", "ℑ": "Im", "í": "iacute", "Í": "Iacute", "ì": "igrave", "Ì": "Igrave", "î": "icirc", "Î": "Icirc", "ï": "iuml", "Ï": "Iuml", "ĩ": "itilde", "Ĩ": "Itilde", "İ": "Idot", "į": "iogon", "Į": "Iogon", "ī": "imacr", "Ī": "Imacr", "ĳ": "ijlig", "Ĳ": "IJlig", "ı": "imath", "𝒿": "jscr", "𝕛": "jopf", "𝔧": "jfr", "𝒥": "Jscr", "𝔍": "Jfr", "𝕁": "Jopf", "ĵ": "jcirc", "Ĵ": "Jcirc", "ȷ": "jmath", "𝕜": "kopf", "𝓀": "kscr", "𝔨": "kfr", "𝒦": "Kscr", "𝕂": "Kopf", "𝔎": "Kfr", "ķ": "kcedil", "Ķ": "Kcedil", "𝔩": "lfr", "𝓁": "lscr", "ℓ": "ell", "𝕝": "lopf", "ℒ": "Lscr", "𝔏": "Lfr", "𝕃": "Lopf", "ĺ": "lacute", "Ĺ": "Lacute", "ľ": "lcaron", "Ľ": "Lcaron", "ļ": "lcedil", "Ļ": "Lcedil", "ł": "lstrok", "Ł": "Lstrok", "ŀ": "lmidot", "Ŀ": "Lmidot", "𝔪": "mfr", "𝕞": "mopf", "𝓂": "mscr", "𝔐": "Mfr", "𝕄": "Mopf", "ℳ": "Mscr", "𝔫": "nfr", "𝕟": "nopf", "𝓃": "nscr", "ℕ": "Nopf", "𝒩": "Nscr", "𝔑": "Nfr", "ń": "nacute", "Ń": "Nacute", "ň": "ncaron", "Ň": "Ncaron", "ñ": "ntilde", "Ñ": "Ntilde", "ņ": "ncedil", "Ņ": "Ncedil", "№": "numero", "ŋ": "eng", "Ŋ": "ENG", "𝕠": "oopf", "𝔬": "ofr", "ℴ": "oscr", "𝒪": "Oscr", "𝔒": "Ofr", "𝕆": "Oopf", "º": "ordm", "ó": "oacute", "Ó": "Oacute", "ò": "ograve", "Ò": "Ograve", "ô": "ocirc", "Ô": "Ocirc", "ö": "ouml", "Ö": "Ouml", "ő": "odblac", "Ő": "Odblac", "õ": "otilde", "Õ": "Otilde", "ø": "oslash", "Ø": "Oslash", "ō": "omacr", "Ō": "Omacr", "œ": "oelig", "Œ": "OElig", "𝔭": "pfr", "𝓅": "pscr", "𝕡": "popf", "ℙ": "Popf", "𝔓": "Pfr", "𝒫": "Pscr", "𝕢": "qopf", "𝔮": "qfr", "𝓆": "qscr", "𝒬": "Qscr", "𝔔": "Qfr", "ℚ": "Qopf", "ĸ": "kgreen", "𝔯": "rfr", "𝕣": "ropf", "𝓇": "rscr", "ℛ": "Rscr", "ℜ": "Re", "ℝ": "Ropf", "ŕ": "racute", "Ŕ": "Racute", "ř": "rcaron", "Ř": "Rcaron", "ŗ": "rcedil", "Ŗ": "Rcedil", "𝕤": "sopf", "𝓈": "sscr", "𝔰": "sfr", "𝕊": "Sopf", "𝔖": "Sfr", "𝒮": "Sscr", "Ⓢ": "oS", "ś": "sacute", "Ś": "Sacute", "ŝ": "scirc", "Ŝ": "Scirc", "š": "scaron", "Š": "Scaron", "ş": "scedil", "Ş": "Scedil", "ß": "szlig", "𝔱": "tfr", "𝓉": "tscr", "𝕥": "topf", "𝒯": "Tscr", "𝔗": "Tfr", "𝕋": "Topf", "ť": "tcaron", "Ť": "Tcaron", "ţ": "tcedil", "Ţ": "Tcedil", "™": "trade", "ŧ": "tstrok", "Ŧ": "Tstrok", "𝓊": "uscr", "𝕦": "uopf", "𝔲": "ufr", "𝕌": "Uopf", "𝔘": "Ufr", "𝒰": "Uscr", "ú": "uacute", "Ú": "Uacute", "ù": "ugrave", "Ù": "Ugrave", "ŭ": "ubreve", "Ŭ": "Ubreve", "û": "ucirc", "Û": "Ucirc", "ů": "uring", "Ů": "Uring", "ü": "uuml", "Ü": "Uuml", "ű": "udblac", "Ű": "Udblac", "ũ": "utilde", "Ũ": "Utilde", "ų": "uogon", "Ų": "Uogon", "ū": "umacr", "Ū": "Umacr", "𝔳": "vfr", "𝕧": "vopf", "𝓋": "vscr", "𝔙": "Vfr", "𝕍": "Vopf", "𝒱": "Vscr", "𝕨": "wopf", "𝓌": "wscr", "𝔴": "wfr", "𝒲": "Wscr", "𝕎": "Wopf", "𝔚": "Wfr", "ŵ": "wcirc", "Ŵ": "Wcirc", "𝔵": "xfr", "𝓍": "xscr", "𝕩": "xopf", "𝕏": "Xopf", "𝔛": "Xfr", "𝒳": "Xscr", "𝔶": "yfr", "𝓎": "yscr", "𝕪": "yopf", "𝒴": "Yscr", "𝔜": "Yfr", "𝕐": "Yopf", "ý": "yacute", "Ý": "Yacute", "ŷ": "ycirc", "Ŷ": "Ycirc", "ÿ": "yuml", "Ÿ": "Yuml", "𝓏": "zscr", "𝔷": "zfr", "𝕫": "zopf", "ℨ": "Zfr", "ℤ": "Zopf", "𝒵": "Zscr", "ź": "zacute", "Ź": "Zacute", "ž": "zcaron", "Ž": "Zcaron", "ż": "zdot", "Ż": "Zdot", "Ƶ": "imped", "þ": "thorn", "Þ": "THORN", "ŉ": "napos", "α": "alpha", "Α": "Alpha", "β": "beta", "Β": "Beta", "γ": "gamma", "Γ": "Gamma", "δ": "delta", "Δ": "Delta", "ε": "epsi", "ϵ": "epsiv", "Ε": "Epsilon", "ϝ": "gammad", "Ϝ": "Gammad", "ζ": "zeta", "Ζ": "Zeta", "η": "eta", "Η": "Eta", "θ": "theta", "ϑ": "thetav", "Θ": "Theta", "ι": "iota", "Ι": "Iota", "κ": "kappa", "ϰ": "kappav", "Κ": "Kappa", "λ": "lambda", "Λ": "Lambda", "μ": "mu", "µ": "micro", "Μ": "Mu", "ν": "nu", "Ν": "Nu", "ξ": "xi", "Ξ": "Xi", "ο": "omicron", "Ο": "Omicron", "π": "pi", "ϖ": "piv", "Π": "Pi", "ρ": "rho", "ϱ": "rhov", "Ρ": "Rho", "σ": "sigma", "Σ": "Sigma", "ς": "sigmaf", "τ": "tau", "Τ": "Tau", "υ": "upsi", "Υ": "Upsilon", "ϒ": "Upsi", "φ": "phi", "ϕ": "phiv", "Φ": "Phi", "χ": "chi", "Χ": "Chi", "ψ": "psi", "Ψ": "Psi", "ω": "omega", "Ω": "ohm", "а": "acy", "А": "Acy", "б": "bcy", "Б": "Bcy", "в": "vcy", "В": "Vcy", "г": "gcy", "Г": "Gcy", "ѓ": "gjcy", "Ѓ": "GJcy", "д": "dcy", "Д": "Dcy", "ђ": "djcy", "Ђ": "DJcy", "е": "iecy", "Е": "IEcy", "ё": "iocy", "Ё": "IOcy", "є": "jukcy", "Є": "Jukcy", "ж": "zhcy", "Ж": "ZHcy", "з": "zcy", "З": "Zcy", "ѕ": "dscy", "Ѕ": "DScy", "и": "icy", "И": "Icy", "і": "iukcy", "І": "Iukcy", "ї": "yicy", "Ї": "YIcy", "й": "jcy", "Й": "Jcy", "ј": "jsercy", "Ј": "Jsercy", "к": "kcy", "К": "Kcy", "ќ": "kjcy", "Ќ": "KJcy", "л": "lcy", "Л": "Lcy", "љ": "ljcy", "Љ": "LJcy", "м": "mcy", "М": "Mcy", "н": "ncy", "Н": "Ncy", "њ": "njcy", "Њ": "NJcy", "о": "ocy", "О": "Ocy", "п": "pcy", "П": "Pcy", "р": "rcy", "Р": "Rcy", "с": "scy", "С": "Scy", "т": "tcy", "Т": "Tcy", "ћ": "tshcy", "Ћ": "TSHcy", "у": "ucy", "У": "Ucy", "ў": "ubrcy", "Ў": "Ubrcy", "ф": "fcy", "Ф": "Fcy", "х": "khcy", "Х": "KHcy", "ц": "tscy", "Ц": "TScy", "ч": "chcy", "Ч": "CHcy", "џ": "dzcy", "Џ": "DZcy", "ш": "shcy", "Ш": "SHcy", "щ": "shchcy", "Щ": "SHCHcy", "ъ": "hardcy", "Ъ": "HARDcy", "ы": "ycy", "Ы": "Ycy", "ь": "softcy", "Ь": "SOFTcy", "э": "ecy", "Э": "Ecy", "ю": "yucy", "Ю": "YUcy", "я": "yacy", "Я": "YAcy", "ℵ": "aleph", "ℶ": "beth", "ℷ": "gimel", "ℸ": "daleth" };
          var p = /["&'<>`]/g;
          var d = { '"': "&quot;", "&": "&amp;", "'": "&#x27;", "<": "&lt;", ">": "&gt;", "`": "&#x60;" };
          var f = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;
          var g = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
          var h = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;
          var m = { aacute: "á", Aacute: "Á", abreve: "ă", Abreve: "Ă", ac: "∾", acd: "∿", acE: "∾̳", acirc: "â", Acirc: "Â", acute: "´", acy: "а", Acy: "А", aelig: "æ", AElig: "Æ", af: "⁡", afr: "𝔞", Afr: "𝔄", agrave: "à", Agrave: "À", alefsym: "ℵ", aleph: "ℵ", alpha: "α", Alpha: "Α", amacr: "ā", Amacr: "Ā", amalg: "⨿", amp: "&", AMP: "&", and: "∧", And: "⩓", andand: "⩕", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", ange: "⦤", angle: "∠", angmsd: "∡", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angst: "Å", angzarr: "⍼", aogon: "ą", Aogon: "Ą", aopf: "𝕒", Aopf: "𝔸", ap: "≈", apacir: "⩯", ape: "≊", apE: "⩰", apid: "≋", apos: "'", ApplyFunction: "⁡", approx: "≈", approxeq: "≊", aring: "å", Aring: "Å", ascr: "𝒶", Ascr: "𝒜", Assign: "≔", ast: "*", asymp: "≈", asympeq: "≍", atilde: "ã", Atilde: "Ã", auml: "ä", Auml: "Ä", awconint: "∳", awint: "⨑", backcong: "≌", backepsilon: "϶", backprime: "‵", backsim: "∽", backsimeq: "⋍", Backslash: "∖", Barv: "⫧", barvee: "⊽", barwed: "⌅", Barwed: "⌆", barwedge: "⌅", bbrk: "⎵", bbrktbrk: "⎶", bcong: "≌", bcy: "б", Bcy: "Б", bdquo: "„", becaus: "∵", because: "∵", Because: "∵", bemptyv: "⦰", bepsi: "϶", bernou: "ℬ", Bernoullis: "ℬ", beta: "β", Beta: "Β", beth: "ℶ", between: "≬", bfr: "𝔟", Bfr: "𝔅", bigcap: "⋂", bigcirc: "◯", bigcup: "⋃", bigodot: "⨀", bigoplus: "⨁", bigotimes: "⨂", bigsqcup: "⨆", bigstar: "★", bigtriangledown: "▽", bigtriangleup: "△", biguplus: "⨄", bigvee: "⋁", bigwedge: "⋀", bkarow: "⤍", blacklozenge: "⧫", blacksquare: "▪", blacktriangle: "▴", blacktriangledown: "▾", blacktriangleleft: "◂", blacktriangleright: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bnot: "⌐", bNot: "⫭", bopf: "𝕓", Bopf: "𝔹", bot: "⊥", bottom: "⊥", bowtie: "⋈", boxbox: "⧉", boxdl: "┐", boxdL: "╕", boxDl: "╖", boxDL: "╗", boxdr: "┌", boxdR: "╒", boxDr: "╓", boxDR: "╔", boxh: "─", boxH: "═", boxhd: "┬", boxhD: "╥", boxHd: "╤", boxHD: "╦", boxhu: "┴", boxhU: "╨", boxHu: "╧", boxHU: "╩", boxminus: "⊟", boxplus: "⊞", boxtimes: "⊠", boxul: "┘", boxuL: "╛", boxUl: "╜", boxUL: "╝", boxur: "└", boxuR: "╘", boxUr: "╙", boxUR: "╚", boxv: "│", boxV: "║", boxvh: "┼", boxvH: "╪", boxVh: "╫", boxVH: "╬", boxvl: "┤", boxvL: "╡", boxVl: "╢", boxVL: "╣", boxvr: "├", boxvR: "╞", boxVr: "╟", boxVR: "╠", bprime: "‵", breve: "˘", Breve: "˘", brvbar: "¦", bscr: "𝒷", Bscr: "ℬ", bsemi: "⁏", bsim: "∽", bsime: "⋍", bsol: "\\", bsolb: "⧅", bsolhsub: "⟈", bull: "•", bullet: "•", bump: "≎", bumpe: "≏", bumpE: "⪮", bumpeq: "≏", Bumpeq: "≎", cacute: "ć", Cacute: "Ć", cap: "∩", Cap: "⋒", capand: "⩄", capbrcup: "⩉", capcap: "⩋", capcup: "⩇", capdot: "⩀", CapitalDifferentialD: "ⅅ", caps: "∩︀", caret: "⁁", caron: "ˇ", Cayleys: "ℭ", ccaps: "⩍", ccaron: "č", Ccaron: "Č", ccedil: "ç", Ccedil: "Ç", ccirc: "ĉ", Ccirc: "Ĉ", Cconint: "∰", ccups: "⩌", ccupssm: "⩐", cdot: "ċ", Cdot: "Ċ", cedil: "¸", Cedilla: "¸", cemptyv: "⦲", cent: "¢", centerdot: "·", CenterDot: "·", cfr: "𝔠", Cfr: "ℭ", chcy: "ч", CHcy: "Ч", check: "✓", checkmark: "✓", chi: "χ", Chi: "Χ", cir: "○", circ: "ˆ", circeq: "≗", circlearrowleft: "↺", circlearrowright: "↻", circledast: "⊛", circledcirc: "⊚", circleddash: "⊝", CircleDot: "⊙", circledR: "®", circledS: "Ⓢ", CircleMinus: "⊖", CirclePlus: "⊕", CircleTimes: "⊗", cire: "≗", cirE: "⧃", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", ClockwiseContourIntegral: "∲", CloseCurlyDoubleQuote: "”", CloseCurlyQuote: "’", clubs: "♣", clubsuit: "♣", colon: ":", Colon: "∷", colone: "≔", Colone: "⩴", coloneq: "≔", comma: ",", commat: "@", comp: "∁", compfn: "∘", complement: "∁", complexes: "ℂ", cong: "≅", congdot: "⩭", Congruent: "≡", conint: "∮", Conint: "∯", ContourIntegral: "∮", copf: "𝕔", Copf: "ℂ", coprod: "∐", Coproduct: "∐", copy: "©", COPY: "©", copysr: "℗", CounterClockwiseContourIntegral: "∳", crarr: "↵", cross: "✗", Cross: "⨯", cscr: "𝒸", Cscr: "𝒞", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", cuesc: "⋟", cularr: "↶", cularrp: "⤽", cup: "∪", Cup: "⋓", cupbrcap: "⩈", cupcap: "⩆", CupCap: "≍", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curarrm: "⤼", curlyeqprec: "⋞", curlyeqsucc: "⋟", curlyvee: "⋎", curlywedge: "⋏", curren: "¤", curvearrowleft: "↶", curvearrowright: "↷", cuvee: "⋎", cuwed: "⋏", cwconint: "∲", cwint: "∱", cylcty: "⌭", dagger: "†", Dagger: "‡", daleth: "ℸ", darr: "↓", dArr: "⇓", Darr: "↡", dash: "‐", dashv: "⊣", Dashv: "⫤", dbkarow: "⤏", dblac: "˝", dcaron: "ď", Dcaron: "Ď", dcy: "д", Dcy: "Д", dd: "ⅆ", DD: "ⅅ", ddagger: "‡", ddarr: "⇊", DDotrahd: "⤑", ddotseq: "⩷", deg: "°", Del: "∇", delta: "δ", Delta: "Δ", demptyv: "⦱", dfisht: "⥿", dfr: "𝔡", Dfr: "𝔇", dHar: "⥥", dharl: "⇃", dharr: "⇂", DiacriticalAcute: "´", DiacriticalDot: "˙", DiacriticalDoubleAcute: "˝", DiacriticalGrave: "`", DiacriticalTilde: "˜", diam: "⋄", diamond: "⋄", Diamond: "⋄", diamondsuit: "♦", diams: "♦", die: "¨", DifferentialD: "ⅆ", digamma: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", djcy: "ђ", DJcy: "Ђ", dlcorn: "⌞", dlcrop: "⌍", dollar: "$", dopf: "𝕕", Dopf: "𝔻", dot: "˙", Dot: "¨", DotDot: "⃜", doteq: "≐", doteqdot: "≑", DotEqual: "≐", dotminus: "∸", dotplus: "∔", dotsquare: "⊡", doublebarwedge: "⌆", DoubleContourIntegral: "∯", DoubleDot: "¨", DoubleDownArrow: "⇓", DoubleLeftArrow: "⇐", DoubleLeftRightArrow: "⇔", DoubleLeftTee: "⫤", DoubleLongLeftArrow: "⟸", DoubleLongLeftRightArrow: "⟺", DoubleLongRightArrow: "⟹", DoubleRightArrow: "⇒", DoubleRightTee: "⊨", DoubleUpArrow: "⇑", DoubleUpDownArrow: "⇕", DoubleVerticalBar: "∥", downarrow: "↓", Downarrow: "⇓", DownArrow: "↓", DownArrowBar: "⤓", DownArrowUpArrow: "⇵", DownBreve: "̑", downdownarrows: "⇊", downharpoonleft: "⇃", downharpoonright: "⇂", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVector: "↽", DownLeftVectorBar: "⥖", DownRightTeeVector: "⥟", DownRightVector: "⇁", DownRightVectorBar: "⥗", DownTee: "⊤", DownTeeArrow: "↧", drbkarow: "⤐", drcorn: "⌟", drcrop: "⌌", dscr: "𝒹", Dscr: "𝒟", dscy: "ѕ", DScy: "Ѕ", dsol: "⧶", dstrok: "đ", Dstrok: "Đ", dtdot: "⋱", dtri: "▿", dtrif: "▾", duarr: "⇵", duhar: "⥯", dwangle: "⦦", dzcy: "џ", DZcy: "Џ", dzigrarr: "⟿", eacute: "é", Eacute: "É", easter: "⩮", ecaron: "ě", Ecaron: "Ě", ecir: "≖", ecirc: "ê", Ecirc: "Ê", ecolon: "≕", ecy: "э", Ecy: "Э", eDDot: "⩷", edot: "ė", eDot: "≑", Edot: "Ė", ee: "ⅇ", efDot: "≒", efr: "𝔢", Efr: "𝔈", eg: "⪚", egrave: "è", Egrave: "È", egs: "⪖", egsdot: "⪘", el: "⪙", Element: "∈", elinters: "⏧", ell: "ℓ", els: "⪕", elsdot: "⪗", emacr: "ē", Emacr: "Ē", empty: "∅", emptyset: "∅", EmptySmallSquare: "◻", emptyv: "∅", EmptyVerySmallSquare: "▫", emsp: " ", emsp13: " ", emsp14: " ", eng: "ŋ", ENG: "Ŋ", ensp: " ", eogon: "ę", Eogon: "Ę", eopf: "𝕖", Eopf: "𝔼", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", epsilon: "ε", Epsilon: "Ε", epsiv: "ϵ", eqcirc: "≖", eqcolon: "≕", eqsim: "≂", eqslantgtr: "⪖", eqslantless: "⪕", Equal: "⩵", equals: "=", EqualTilde: "≂", equest: "≟", Equilibrium: "⇌", equiv: "≡", equivDD: "⩸", eqvparsl: "⧥", erarr: "⥱", erDot: "≓", escr: "ℯ", Escr: "ℰ", esdot: "≐", esim: "≂", Esim: "⩳", eta: "η", Eta: "Η", eth: "ð", ETH: "Ð", euml: "ë", Euml: "Ë", euro: "€", excl: "!", exist: "∃", Exists: "∃", expectation: "ℰ", exponentiale: "ⅇ", ExponentialE: "ⅇ", fallingdotseq: "≒", fcy: "ф", Fcy: "Ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", ffr: "𝔣", Ffr: "𝔉", filig: "ﬁ", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", fopf: "𝕗", Fopf: "𝔽", forall: "∀", ForAll: "∀", fork: "⋔", forkv: "⫙", Fouriertrf: "ℱ", fpartint: "⨍", frac12: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", fscr: "𝒻", Fscr: "ℱ", gacute: "ǵ", gamma: "γ", Gamma: "Γ", gammad: "ϝ", Gammad: "Ϝ", gap: "⪆", gbreve: "ğ", Gbreve: "Ğ", Gcedil: "Ģ", gcirc: "ĝ", Gcirc: "Ĝ", gcy: "г", Gcy: "Г", gdot: "ġ", Gdot: "Ġ", ge: "≥", gE: "≧", gel: "⋛", gEl: "⪌", geq: "≥", geqq: "≧", geqslant: "⩾", ges: "⩾", gescc: "⪩", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", gfr: "𝔤", Gfr: "𝔊", gg: "≫", Gg: "⋙", ggg: "⋙", gimel: "ℷ", gjcy: "ѓ", GJcy: "Ѓ", gl: "≷", gla: "⪥", glE: "⪒", glj: "⪤", gnap: "⪊", gnapprox: "⪊", gne: "⪈", gnE: "≩", gneq: "⪈", gneqq: "≩", gnsim: "⋧", gopf: "𝕘", Gopf: "𝔾", grave: "`", GreaterEqual: "≥", GreaterEqualLess: "⋛", GreaterFullEqual: "≧", GreaterGreater: "⪢", GreaterLess: "≷", GreaterSlantEqual: "⩾", GreaterTilde: "≳", gscr: "ℊ", Gscr: "𝒢", gsim: "≳", gsime: "⪎", gsiml: "⪐", gt: ">", Gt: "≫", GT: ">", gtcc: "⪧", gtcir: "⩺", gtdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrapprox: "⪆", gtrarr: "⥸", gtrdot: "⋗", gtreqless: "⋛", gtreqqless: "⪌", gtrless: "≷", gtrsim: "≳", gvertneqq: "≩︀", gvnE: "≩︀", Hacek: "ˇ", hairsp: " ", half: "½", hamilt: "ℋ", hardcy: "ъ", HARDcy: "Ъ", harr: "↔", hArr: "⇔", harrcir: "⥈", harrw: "↭", Hat: "^", hbar: "ℏ", hcirc: "ĥ", Hcirc: "Ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", hercon: "⊹", hfr: "𝔥", Hfr: "ℌ", HilbertSpace: "ℋ", hksearow: "⤥", hkswarow: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", hookrightarrow: "↪", hopf: "𝕙", Hopf: "ℍ", horbar: "―", HorizontalLine: "─", hscr: "𝒽", Hscr: "ℋ", hslash: "ℏ", hstrok: "ħ", Hstrok: "Ħ", HumpDownHump: "≎", HumpEqual: "≏", hybull: "⁃", hyphen: "‐", iacute: "í", Iacute: "Í", ic: "⁣", icirc: "î", Icirc: "Î", icy: "и", Icy: "И", Idot: "İ", iecy: "е", IEcy: "Е", iexcl: "¡", iff: "⇔", ifr: "𝔦", Ifr: "ℑ", igrave: "ì", Igrave: "Ì", ii: "ⅈ", iiiint: "⨌", iiint: "∭", iinfin: "⧜", iiota: "℩", ijlig: "ĳ", IJlig: "Ĳ", Im: "ℑ", imacr: "ī", Imacr: "Ī", image: "ℑ", ImaginaryI: "ⅈ", imagline: "ℐ", imagpart: "ℑ", imath: "ı", imof: "⊷", imped: "Ƶ", Implies: "⇒", in: "∈", incare: "℅", infin: "∞", infintie: "⧝", inodot: "ı", int: "∫", Int: "∬", intcal: "⊺", integers: "ℤ", Integral: "∫", intercal: "⊺", Intersection: "⋂", intlarhk: "⨗", intprod: "⨼", InvisibleComma: "⁣", InvisibleTimes: "⁢", iocy: "ё", IOcy: "Ё", iogon: "į", Iogon: "Į", iopf: "𝕚", Iopf: "𝕀", iota: "ι", Iota: "Ι", iprod: "⨼", iquest: "¿", iscr: "𝒾", Iscr: "ℐ", isin: "∈", isindot: "⋵", isinE: "⋹", isins: "⋴", isinsv: "⋳", isinv: "∈", it: "⁢", itilde: "ĩ", Itilde: "Ĩ", iukcy: "і", Iukcy: "І", iuml: "ï", Iuml: "Ï", jcirc: "ĵ", Jcirc: "Ĵ", jcy: "й", Jcy: "Й", jfr: "𝔧", Jfr: "𝔍", jmath: "ȷ", jopf: "𝕛", Jopf: "𝕁", jscr: "𝒿", Jscr: "𝒥", jsercy: "ј", Jsercy: "Ј", jukcy: "є", Jukcy: "Є", kappa: "κ", Kappa: "Κ", kappav: "ϰ", kcedil: "ķ", Kcedil: "Ķ", kcy: "к", Kcy: "К", kfr: "𝔨", Kfr: "𝔎", kgreen: "ĸ", khcy: "х", KHcy: "Х", kjcy: "ќ", KJcy: "Ќ", kopf: "𝕜", Kopf: "𝕂", kscr: "𝓀", Kscr: "𝒦", lAarr: "⇚", lacute: "ĺ", Lacute: "Ĺ", laemptyv: "⦴", lagran: "ℒ", lambda: "λ", Lambda: "Λ", lang: "⟨", Lang: "⟪", langd: "⦑", langle: "⟨", lap: "⪅", Laplacetrf: "ℒ", laquo: "«", larr: "←", lArr: "⇐", Larr: "↞", larrb: "⇤", larrbfs: "⤟", larrfs: "⤝", larrhk: "↩", larrlp: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", lat: "⪫", latail: "⤙", lAtail: "⤛", late: "⪭", lates: "⪭︀", lbarr: "⤌", lBarr: "⤎", lbbrk: "❲", lbrace: "{", lbrack: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", lcaron: "ľ", Lcaron: "Ľ", lcedil: "ļ", Lcedil: "Ļ", lceil: "⌈", lcub: "{", lcy: "л", Lcy: "Л", ldca: "⤶", ldquo: "“", ldquor: "„", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", le: "≤", lE: "≦", LeftAngleBracket: "⟨", leftarrow: "←", Leftarrow: "⇐", LeftArrow: "←", LeftArrowBar: "⇤", LeftArrowRightArrow: "⇆", leftarrowtail: "↢", LeftCeiling: "⌈", LeftDoubleBracket: "⟦", LeftDownTeeVector: "⥡", LeftDownVector: "⇃", LeftDownVectorBar: "⥙", LeftFloor: "⌊", leftharpoondown: "↽", leftharpoonup: "↼", leftleftarrows: "⇇", leftrightarrow: "↔", Leftrightarrow: "⇔", LeftRightArrow: "↔", leftrightarrows: "⇆", leftrightharpoons: "⇋", leftrightsquigarrow: "↭", LeftRightVector: "⥎", LeftTee: "⊣", LeftTeeArrow: "↤", LeftTeeVector: "⥚", leftthreetimes: "⋋", LeftTriangle: "⊲", LeftTriangleBar: "⧏", LeftTriangleEqual: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVector: "↿", LeftUpVectorBar: "⥘", LeftVector: "↼", LeftVectorBar: "⥒", leg: "⋚", lEg: "⪋", leq: "≤", leqq: "≦", leqslant: "⩽", les: "⩽", lescc: "⪨", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessapprox: "⪅", lessdot: "⋖", lesseqgtr: "⋚", lesseqqgtr: "⪋", LessEqualGreater: "⋚", LessFullEqual: "≦", LessGreater: "≶", lessgtr: "≶", LessLess: "⪡", lesssim: "≲", LessSlantEqual: "⩽", LessTilde: "≲", lfisht: "⥼", lfloor: "⌊", lfr: "𝔩", Lfr: "𝔏", lg: "≶", lgE: "⪑", lHar: "⥢", lhard: "↽", lharu: "↼", lharul: "⥪", lhblk: "▄", ljcy: "љ", LJcy: "Љ", ll: "≪", Ll: "⋘", llarr: "⇇", llcorner: "⌞", Lleftarrow: "⇚", llhard: "⥫", lltri: "◺", lmidot: "ŀ", Lmidot: "Ŀ", lmoust: "⎰", lmoustache: "⎰", lnap: "⪉", lnapprox: "⪉", lne: "⪇", lnE: "≨", lneq: "⪇", lneqq: "≨", lnsim: "⋦", loang: "⟬", loarr: "⇽", lobrk: "⟦", longleftarrow: "⟵", Longleftarrow: "⟸", LongLeftArrow: "⟵", longleftrightarrow: "⟷", Longleftrightarrow: "⟺", LongLeftRightArrow: "⟷", longmapsto: "⟼", longrightarrow: "⟶", Longrightarrow: "⟹", LongRightArrow: "⟶", looparrowleft: "↫", looparrowright: "↬", lopar: "⦅", lopf: "𝕝", Lopf: "𝕃", loplus: "⨭", lotimes: "⨴", lowast: "∗", lowbar: "_", LowerLeftArrow: "↙", LowerRightArrow: "↘", loz: "◊", lozenge: "◊", lozf: "⧫", lpar: "(", lparlt: "⦓", lrarr: "⇆", lrcorner: "⌟", lrhar: "⇋", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", lscr: "𝓁", Lscr: "ℒ", lsh: "↰", Lsh: "↰", lsim: "≲", lsime: "⪍", lsimg: "⪏", lsqb: "[", lsquo: "‘", lsquor: "‚", lstrok: "ł", Lstrok: "Ł", lt: "<", Lt: "≪", LT: "<", ltcc: "⪦", ltcir: "⩹", ltdot: "⋖", lthree: "⋋", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltri: "◃", ltrie: "⊴", ltrif: "◂", ltrPar: "⦖", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", macr: "¯", male: "♂", malt: "✠", maltese: "✠", map: "↦", Map: "⤅", mapsto: "↦", mapstodown: "↧", mapstoleft: "↤", mapstoup: "↥", marker: "▮", mcomma: "⨩", mcy: "м", Mcy: "М", mdash: "—", mDDot: "∺", measuredangle: "∡", MediumSpace: " ", Mellintrf: "ℳ", mfr: "𝔪", Mfr: "𝔐", mho: "℧", micro: "µ", mid: "∣", midast: "*", midcir: "⫰", middot: "·", minus: "−", minusb: "⊟", minusd: "∸", minusdu: "⨪", MinusPlus: "∓", mlcp: "⫛", mldr: "…", mnplus: "∓", models: "⊧", mopf: "𝕞", Mopf: "𝕄", mp: "∓", mscr: "𝓂", Mscr: "ℳ", mstpos: "∾", mu: "μ", Mu: "Μ", multimap: "⊸", mumap: "⊸", nabla: "∇", nacute: "ń", Nacute: "Ń", nang: "∠⃒", nap: "≉", napE: "⩰̸", napid: "≋̸", napos: "ŉ", napprox: "≉", natur: "♮", natural: "♮", naturals: "ℕ", nbsp: " ", nbump: "≎̸", nbumpe: "≏̸", ncap: "⩃", ncaron: "ň", Ncaron: "Ň", ncedil: "ņ", Ncedil: "Ņ", ncong: "≇", ncongdot: "⩭̸", ncup: "⩂", ncy: "н", Ncy: "Н", ndash: "–", ne: "≠", nearhk: "⤤", nearr: "↗", neArr: "⇗", nearrow: "↗", nedot: "≐̸", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", nequiv: "≢", nesear: "⤨", nesim: "≂̸", NestedGreaterGreater: "≫", NestedLessLess: "≪", NewLine: "\n", nexist: "∄", nexists: "∄", nfr: "𝔫", Nfr: "𝔑", nge: "≱", ngE: "≧̸", ngeq: "≱", ngeqq: "≧̸", ngeqslant: "⩾̸", nges: "⩾̸", nGg: "⋙̸", ngsim: "≵", ngt: "≯", nGt: "≫⃒", ngtr: "≯", nGtv: "≫̸", nharr: "↮", nhArr: "⇎", nhpar: "⫲", ni: "∋", nis: "⋼", nisd: "⋺", niv: "∋", njcy: "њ", NJcy: "Њ", nlarr: "↚", nlArr: "⇍", nldr: "‥", nle: "≰", nlE: "≦̸", nleftarrow: "↚", nLeftarrow: "⇍", nleftrightarrow: "↮", nLeftrightarrow: "⇎", nleq: "≰", nleqq: "≦̸", nleqslant: "⩽̸", nles: "⩽̸", nless: "≮", nLl: "⋘̸", nlsim: "≴", nlt: "≮", nLt: "≪⃒", nltri: "⋪", nltrie: "⋬", nLtv: "≪̸", nmid: "∤", NoBreak: "⁠", NonBreakingSpace: " ", nopf: "𝕟", Nopf: "ℕ", not: "¬", Not: "⫬", NotCongruent: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", NotElement: "∉", NotEqual: "≠", NotEqualTilde: "≂̸", NotExists: "∄", NotGreater: "≯", NotGreaterEqual: "≱", NotGreaterFullEqual: "≧̸", NotGreaterGreater: "≫̸", NotGreaterLess: "≹", NotGreaterSlantEqual: "⩾̸", NotGreaterTilde: "≵", NotHumpDownHump: "≎̸", NotHumpEqual: "≏̸", notin: "∉", notindot: "⋵̸", notinE: "⋹̸", notinva: "∉", notinvb: "⋷", notinvc: "⋶", NotLeftTriangle: "⋪", NotLeftTriangleBar: "⧏̸", NotLeftTriangleEqual: "⋬", NotLess: "≮", NotLessEqual: "≰", NotLessGreater: "≸", NotLessLess: "≪̸", NotLessSlantEqual: "⩽̸", NotLessTilde: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", notni: "∌", notniva: "∌", notnivb: "⋾", notnivc: "⋽", NotPrecedes: "⊀", NotPrecedesEqual: "⪯̸", NotPrecedesSlantEqual: "⋠", NotReverseElement: "∌", NotRightTriangle: "⋫", NotRightTriangleBar: "⧐̸", NotRightTriangleEqual: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", NotSubset: "⊂⃒", NotSubsetEqual: "⊈", NotSucceeds: "⊁", NotSucceedsEqual: "⪰̸", NotSucceedsSlantEqual: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", NotSupersetEqual: "⊉", NotTilde: "≁", NotTildeEqual: "≄", NotTildeFullEqual: "≇", NotTildeTilde: "≉", NotVerticalBar: "∤", npar: "∦", nparallel: "∦", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", npr: "⊀", nprcue: "⋠", npre: "⪯̸", nprec: "⊀", npreceq: "⪯̸", nrarr: "↛", nrArr: "⇏", nrarrc: "⤳̸", nrarrw: "↝̸", nrightarrow: "↛", nRightarrow: "⇏", nrtri: "⋫", nrtrie: "⋭", nsc: "⊁", nsccue: "⋡", nsce: "⪰̸", nscr: "𝓃", Nscr: "𝒩", nshortmid: "∤", nshortparallel: "∦", nsim: "≁", nsime: "≄", nsimeq: "≄", nsmid: "∤", nspar: "∦", nsqsube: "⋢", nsqsupe: "⋣", nsub: "⊄", nsube: "⊈", nsubE: "⫅̸", nsubset: "⊂⃒", nsubseteq: "⊈", nsubseteqq: "⫅̸", nsucc: "⊁", nsucceq: "⪰̸", nsup: "⊅", nsupe: "⊉", nsupE: "⫆̸", nsupset: "⊃⃒", nsupseteq: "⊉", nsupseteqq: "⫆̸", ntgl: "≹", ntilde: "ñ", Ntilde: "Ñ", ntlg: "≸", ntriangleleft: "⋪", ntrianglelefteq: "⋬", ntriangleright: "⋫", ntrianglerighteq: "⋭", nu: "ν", Nu: "Ν", num: "#", numero: "№", numsp: " ", nvap: "≍⃒", nvdash: "⊬", nvDash: "⊭", nVdash: "⊮", nVDash: "⊯", nvge: "≥⃒", nvgt: ">⃒", nvHarr: "⤄", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwarhk: "⤣", nwarr: "↖", nwArr: "⇖", nwarrow: "↖", nwnear: "⤧", oacute: "ó", Oacute: "Ó", oast: "⊛", ocir: "⊚", ocirc: "ô", Ocirc: "Ô", ocy: "о", Ocy: "О", odash: "⊝", odblac: "ő", Odblac: "Ő", odiv: "⨸", odot: "⊙", odsold: "⦼", oelig: "œ", OElig: "Œ", ofcir: "⦿", ofr: "𝔬", Ofr: "𝔒", ogon: "˛", ograve: "ò", Ograve: "Ò", ogt: "⧁", ohbar: "⦵", ohm: "Ω", oint: "∮", olarr: "↺", olcir: "⦾", olcross: "⦻", oline: "‾", olt: "⧀", omacr: "ō", Omacr: "Ō", omega: "ω", Omega: "Ω", omicron: "ο", Omicron: "Ο", omid: "⦶", ominus: "⊖", oopf: "𝕠", Oopf: "𝕆", opar: "⦷", OpenCurlyDoubleQuote: "“", OpenCurlyQuote: "‘", operp: "⦹", oplus: "⊕", or: "∨", Or: "⩔", orarr: "↻", ord: "⩝", order: "ℴ", orderof: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oS: "Ⓢ", oscr: "ℴ", Oscr: "𝒪", oslash: "ø", Oslash: "Ø", osol: "⊘", otilde: "õ", Otilde: "Õ", otimes: "⊗", Otimes: "⨷", otimesas: "⨶", ouml: "ö", Ouml: "Ö", ovbar: "⌽", OverBar: "‾", OverBrace: "⏞", OverBracket: "⎴", OverParenthesis: "⏜", par: "∥", para: "¶", parallel: "∥", parsim: "⫳", parsl: "⫽", part: "∂", PartialD: "∂", pcy: "п", Pcy: "П", percnt: "%", period: ".", permil: "‰", perp: "⊥", pertenk: "‱", pfr: "𝔭", Pfr: "𝔓", phi: "φ", Phi: "Φ", phiv: "ϕ", phmmat: "ℳ", phone: "☎", pi: "π", Pi: "Π", pitchfork: "⋔", piv: "ϖ", planck: "ℏ", planckh: "ℎ", plankv: "ℏ", plus: "+", plusacir: "⨣", plusb: "⊞", pluscir: "⨢", plusdo: "∔", plusdu: "⨥", pluse: "⩲", PlusMinus: "±", plusmn: "±", plussim: "⨦", plustwo: "⨧", pm: "±", Poincareplane: "ℌ", pointint: "⨕", popf: "𝕡", Popf: "ℙ", pound: "£", pr: "≺", Pr: "⪻", prap: "⪷", prcue: "≼", pre: "⪯", prE: "⪳", prec: "≺", precapprox: "⪷", preccurlyeq: "≼", Precedes: "≺", PrecedesEqual: "⪯", PrecedesSlantEqual: "≼", PrecedesTilde: "≾", preceq: "⪯", precnapprox: "⪹", precneqq: "⪵", precnsim: "⋨", precsim: "≾", prime: "′", Prime: "″", primes: "ℙ", prnap: "⪹", prnE: "⪵", prnsim: "⋨", prod: "∏", Product: "∏", profalar: "⌮", profline: "⌒", profsurf: "⌓", prop: "∝", Proportion: "∷", Proportional: "∝", propto: "∝", prsim: "≾", prurel: "⊰", pscr: "𝓅", Pscr: "𝒫", psi: "ψ", Psi: "Ψ", puncsp: " ", qfr: "𝔮", Qfr: "𝔔", qint: "⨌", qopf: "𝕢", Qopf: "ℚ", qprime: "⁗", qscr: "𝓆", Qscr: "𝒬", quaternions: "ℍ", quatint: "⨖", quest: "?", questeq: "≟", quot: '"', QUOT: '"', rAarr: "⇛", race: "∽̱", racute: "ŕ", Racute: "Ŕ", radic: "√", raemptyv: "⦳", rang: "⟩", Rang: "⟫", rangd: "⦒", range: "⦥", rangle: "⟩", raquo: "»", rarr: "→", rArr: "⇒", Rarr: "↠", rarrap: "⥵", rarrb: "⇥", rarrbfs: "⤠", rarrc: "⤳", rarrfs: "⤞", rarrhk: "↪", rarrlp: "↬", rarrpl: "⥅", rarrsim: "⥴", rarrtl: "↣", Rarrtl: "⤖", rarrw: "↝", ratail: "⤚", rAtail: "⤜", ratio: "∶", rationals: "ℚ", rbarr: "⤍", rBarr: "⤏", RBarr: "⤐", rbbrk: "❳", rbrace: "}", rbrack: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", rcaron: "ř", Rcaron: "Ř", rcedil: "ŗ", Rcedil: "Ŗ", rceil: "⌉", rcub: "}", rcy: "р", Rcy: "Р", rdca: "⤷", rdldhar: "⥩", rdquo: "”", rdquor: "”", rdsh: "↳", Re: "ℜ", real: "ℜ", realine: "ℛ", realpart: "ℜ", reals: "ℝ", rect: "▭", reg: "®", REG: "®", ReverseElement: "∋", ReverseEquilibrium: "⇋", ReverseUpEquilibrium: "⥯", rfisht: "⥽", rfloor: "⌋", rfr: "𝔯", Rfr: "ℜ", rHar: "⥤", rhard: "⇁", rharu: "⇀", rharul: "⥬", rho: "ρ", Rho: "Ρ", rhov: "ϱ", RightAngleBracket: "⟩", rightarrow: "→", Rightarrow: "⇒", RightArrow: "→", RightArrowBar: "⇥", RightArrowLeftArrow: "⇄", rightarrowtail: "↣", RightCeiling: "⌉", RightDoubleBracket: "⟧", RightDownTeeVector: "⥝", RightDownVector: "⇂", RightDownVectorBar: "⥕", RightFloor: "⌋", rightharpoondown: "⇁", rightharpoonup: "⇀", rightleftarrows: "⇄", rightleftharpoons: "⇌", rightrightarrows: "⇉", rightsquigarrow: "↝", RightTee: "⊢", RightTeeArrow: "↦", RightTeeVector: "⥛", rightthreetimes: "⋌", RightTriangle: "⊳", RightTriangleBar: "⧐", RightTriangleEqual: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVector: "↾", RightUpVectorBar: "⥔", RightVector: "⇀", RightVectorBar: "⥓", ring: "˚", risingdotseq: "≓", rlarr: "⇄", rlhar: "⇌", rlm: "‏", rmoust: "⎱", rmoustache: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", robrk: "⟧", ropar: "⦆", ropf: "𝕣", Ropf: "ℝ", roplus: "⨮", rotimes: "⨵", RoundImplies: "⥰", rpar: ")", rpargt: "⦔", rppolint: "⨒", rrarr: "⇉", Rrightarrow: "⇛", rsaquo: "›", rscr: "𝓇", Rscr: "ℛ", rsh: "↱", Rsh: "↱", rsqb: "]", rsquo: "’", rsquor: "’", rthree: "⋌", rtimes: "⋊", rtri: "▹", rtrie: "⊵", rtrif: "▸", rtriltri: "⧎", RuleDelayed: "⧴", ruluhar: "⥨", rx: "℞", sacute: "ś", Sacute: "Ś", sbquo: "‚", sc: "≻", Sc: "⪼", scap: "⪸", scaron: "š", Scaron: "Š", sccue: "≽", sce: "⪰", scE: "⪴", scedil: "ş", Scedil: "Ş", scirc: "ŝ", Scirc: "Ŝ", scnap: "⪺", scnE: "⪶", scnsim: "⋩", scpolint: "⨓", scsim: "≿", scy: "с", Scy: "С", sdot: "⋅", sdotb: "⊡", sdote: "⩦", searhk: "⤥", searr: "↘", seArr: "⇘", searrow: "↘", sect: "§", semi: ";", seswar: "⤩", setminus: "∖", setmn: "∖", sext: "✶", sfr: "𝔰", Sfr: "𝔖", sfrown: "⌢", sharp: "♯", shchcy: "щ", SHCHcy: "Щ", shcy: "ш", SHcy: "Ш", ShortDownArrow: "↓", ShortLeftArrow: "←", shortmid: "∣", shortparallel: "∥", ShortRightArrow: "→", ShortUpArrow: "↑", shy: "­", sigma: "σ", Sigma: "Σ", sigmaf: "ς", sigmav: "ς", sim: "∼", simdot: "⩪", sime: "≃", simeq: "≃", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", slarr: "←", SmallCircle: "∘", smallsetminus: "∖", smashp: "⨳", smeparsl: "⧤", smid: "∣", smile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", softcy: "ь", SOFTcy: "Ь", sol: "/", solb: "⧄", solbar: "⌿", sopf: "𝕤", Sopf: "𝕊", spades: "♠", spadesuit: "♠", spar: "∥", sqcap: "⊓", sqcaps: "⊓︀", sqcup: "⊔", sqcups: "⊔︀", Sqrt: "√", sqsub: "⊏", sqsube: "⊑", sqsubset: "⊏", sqsubseteq: "⊑", sqsup: "⊐", sqsupe: "⊒", sqsupset: "⊐", sqsupseteq: "⊒", squ: "□", square: "□", Square: "□", SquareIntersection: "⊓", SquareSubset: "⊏", SquareSubsetEqual: "⊑", SquareSuperset: "⊐", SquareSupersetEqual: "⊒", SquareUnion: "⊔", squarf: "▪", squf: "▪", srarr: "→", sscr: "𝓈", Sscr: "𝒮", ssetmn: "∖", ssmile: "⌣", sstarf: "⋆", star: "☆", Star: "⋆", starf: "★", straightepsilon: "ϵ", straightphi: "ϕ", strns: "¯", sub: "⊂", Sub: "⋐", subdot: "⪽", sube: "⊆", subE: "⫅", subedot: "⫃", submult: "⫁", subne: "⊊", subnE: "⫋", subplus: "⪿", subrarr: "⥹", subset: "⊂", Subset: "⋐", subseteq: "⊆", subseteqq: "⫅", SubsetEqual: "⊆", subsetneq: "⊊", subsetneqq: "⫋", subsim: "⫇", subsub: "⫕", subsup: "⫓", succ: "≻", succapprox: "⪸", succcurlyeq: "≽", Succeeds: "≻", SucceedsEqual: "⪰", SucceedsSlantEqual: "≽", SucceedsTilde: "≿", succeq: "⪰", succnapprox: "⪺", succneqq: "⪶", succnsim: "⋩", succsim: "≿", SuchThat: "∋", sum: "∑", Sum: "∑", sung: "♪", sup: "⊃", Sup: "⋑", sup1: "¹", sup2: "²", sup3: "³", supdot: "⪾", supdsub: "⫘", supe: "⊇", supE: "⫆", supedot: "⫄", Superset: "⊃", SupersetEqual: "⊇", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supne: "⊋", supnE: "⫌", supplus: "⫀", supset: "⊃", Supset: "⋑", supseteq: "⊇", supseteqq: "⫆", supsetneq: "⊋", supsetneqq: "⫌", supsim: "⫈", supsub: "⫔", supsup: "⫖", swarhk: "⤦", swarr: "↙", swArr: "⇙", swarrow: "↙", swnwar: "⤪", szlig: "ß", Tab: "	", target: "⌖", tau: "τ", Tau: "Τ", tbrk: "⎴", tcaron: "ť", Tcaron: "Ť", tcedil: "ţ", Tcedil: "Ţ", tcy: "т", Tcy: "Т", tdot: "⃛", telrec: "⌕", tfr: "𝔱", Tfr: "𝔗", there4: "∴", therefore: "∴", Therefore: "∴", theta: "θ", Theta: "Θ", thetasym: "ϑ", thetav: "ϑ", thickapprox: "≈", thicksim: "∼", ThickSpace: "  ", thinsp: " ", ThinSpace: " ", thkap: "≈", thksim: "∼", thorn: "þ", THORN: "Þ", tilde: "˜", Tilde: "∼", TildeEqual: "≃", TildeFullEqual: "≅", TildeTilde: "≈", times: "×", timesb: "⊠", timesbar: "⨱", timesd: "⨰", tint: "∭", toea: "⤨", top: "⊤", topbot: "⌶", topcir: "⫱", topf: "𝕥", Topf: "𝕋", topfork: "⫚", tosa: "⤩", tprime: "‴", trade: "™", TRADE: "™", triangle: "▵", triangledown: "▿", triangleleft: "◃", trianglelefteq: "⊴", triangleq: "≜", triangleright: "▹", trianglerighteq: "⊵", tridot: "◬", trie: "≜", triminus: "⨺", TripleDot: "⃛", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", tscr: "𝓉", Tscr: "𝒯", tscy: "ц", TScy: "Ц", tshcy: "ћ", TSHcy: "Ћ", tstrok: "ŧ", Tstrok: "Ŧ", twixt: "≬", twoheadleftarrow: "↞", twoheadrightarrow: "↠", uacute: "ú", Uacute: "Ú", uarr: "↑", uArr: "⇑", Uarr: "↟", Uarrocir: "⥉", ubrcy: "ў", Ubrcy: "Ў", ubreve: "ŭ", Ubreve: "Ŭ", ucirc: "û", Ucirc: "Û", ucy: "у", Ucy: "У", udarr: "⇅", udblac: "ű", Udblac: "Ű", udhar: "⥮", ufisht: "⥾", ufr: "𝔲", Ufr: "𝔘", ugrave: "ù", Ugrave: "Ù", uHar: "⥣", uharl: "↿", uharr: "↾", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", umacr: "ū", Umacr: "Ū", uml: "¨", UnderBar: "_", UnderBrace: "⏟", UnderBracket: "⎵", UnderParenthesis: "⏝", Union: "⋃", UnionPlus: "⊎", uogon: "ų", Uogon: "Ų", uopf: "𝕦", Uopf: "𝕌", uparrow: "↑", Uparrow: "⇑", UpArrow: "↑", UpArrowBar: "⤒", UpArrowDownArrow: "⇅", updownarrow: "↕", Updownarrow: "⇕", UpDownArrow: "↕", UpEquilibrium: "⥮", upharpoonleft: "↿", upharpoonright: "↾", uplus: "⊎", UpperLeftArrow: "↖", UpperRightArrow: "↗", upsi: "υ", Upsi: "ϒ", upsih: "ϒ", upsilon: "υ", Upsilon: "Υ", UpTee: "⊥", UpTeeArrow: "↥", upuparrows: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", uring: "ů", Uring: "Ů", urtri: "◹", uscr: "𝓊", Uscr: "𝒰", utdot: "⋰", utilde: "ũ", Utilde: "Ũ", utri: "▵", utrif: "▴", uuarr: "⇈", uuml: "ü", Uuml: "Ü", uwangle: "⦧", vangrt: "⦜", varepsilon: "ϵ", varkappa: "ϰ", varnothing: "∅", varphi: "ϕ", varpi: "ϖ", varpropto: "∝", varr: "↕", vArr: "⇕", varrho: "ϱ", varsigma: "ς", varsubsetneq: "⊊︀", varsubsetneqq: "⫋︀", varsupsetneq: "⊋︀", varsupsetneqq: "⫌︀", vartheta: "ϑ", vartriangleleft: "⊲", vartriangleright: "⊳", vBar: "⫨", Vbar: "⫫", vBarv: "⫩", vcy: "в", Vcy: "В", vdash: "⊢", vDash: "⊨", Vdash: "⊩", VDash: "⊫", Vdashl: "⫦", vee: "∨", Vee: "⋁", veebar: "⊻", veeeq: "≚", vellip: "⋮", verbar: "|", Verbar: "‖", vert: "|", Vert: "‖", VerticalBar: "∣", VerticalLine: "|", VerticalSeparator: "❘", VerticalTilde: "≀", VeryThinSpace: " ", vfr: "𝔳", Vfr: "𝔙", vltri: "⊲", vnsub: "⊂⃒", vnsup: "⊃⃒", vopf: "𝕧", Vopf: "𝕍", vprop: "∝", vrtri: "⊳", vscr: "𝓋", Vscr: "𝒱", vsubne: "⊊︀", vsubnE: "⫋︀", vsupne: "⊋︀", vsupnE: "⫌︀", Vvdash: "⊪", vzigzag: "⦚", wcirc: "ŵ", Wcirc: "Ŵ", wedbar: "⩟", wedge: "∧", Wedge: "⋀", wedgeq: "≙", weierp: "℘", wfr: "𝔴", Wfr: "𝔚", wopf: "𝕨", Wopf: "𝕎", wp: "℘", wr: "≀", wreath: "≀", wscr: "𝓌", Wscr: "𝒲", xcap: "⋂", xcirc: "◯", xcup: "⋃", xdtri: "▽", xfr: "𝔵", Xfr: "𝔛", xharr: "⟷", xhArr: "⟺", xi: "ξ", Xi: "Ξ", xlarr: "⟵", xlArr: "⟸", xmap: "⟼", xnis: "⋻", xodot: "⨀", xopf: "𝕩", Xopf: "𝕏", xoplus: "⨁", xotime: "⨂", xrarr: "⟶", xrArr: "⟹", xscr: "𝓍", Xscr: "𝒳", xsqcup: "⨆", xuplus: "⨄", xutri: "△", xvee: "⋁", xwedge: "⋀", yacute: "ý", Yacute: "Ý", yacy: "я", YAcy: "Я", ycirc: "ŷ", Ycirc: "Ŷ", ycy: "ы", Ycy: "Ы", yen: "¥", yfr: "𝔶", Yfr: "𝔜", yicy: "ї", YIcy: "Ї", yopf: "𝕪", Yopf: "𝕐", yscr: "𝓎", Yscr: "𝒴", yucy: "ю", YUcy: "Ю", yuml: "ÿ", Yuml: "Ÿ", zacute: "ź", Zacute: "Ź", zcaron: "ž", Zcaron: "Ž", zcy: "з", Zcy: "З", zdot: "ż", Zdot: "Ż", zeetrf: "ℨ", ZeroWidthSpace: "​", zeta: "ζ", Zeta: "Ζ", zfr: "𝔷", Zfr: "ℨ", zhcy: "ж", ZHcy: "Ж", zigrarr: "⇝", zopf: "𝕫", Zopf: "ℤ", zscr: "𝓏", Zscr: "𝒵", zwj: "‍", zwnj: "‌" };
          var v = { aacute: "á", Aacute: "Á", acirc: "â", Acirc: "Â", acute: "´", aelig: "æ", AElig: "Æ", agrave: "à", Agrave: "À", amp: "&", AMP: "&", aring: "å", Aring: "Å", atilde: "ã", Atilde: "Ã", auml: "ä", Auml: "Ä", brvbar: "¦", ccedil: "ç", Ccedil: "Ç", cedil: "¸", cent: "¢", copy: "©", COPY: "©", curren: "¤", deg: "°", divide: "÷", eacute: "é", Eacute: "É", ecirc: "ê", Ecirc: "Ê", egrave: "è", Egrave: "È", eth: "ð", ETH: "Ð", euml: "ë", Euml: "Ë", frac12: "½", frac14: "¼", frac34: "¾", gt: ">", GT: ">", iacute: "í", Iacute: "Í", icirc: "î", Icirc: "Î", iexcl: "¡", igrave: "ì", Igrave: "Ì", iquest: "¿", iuml: "ï", Iuml: "Ï", laquo: "«", lt: "<", LT: "<", macr: "¯", micro: "µ", middot: "·", nbsp: " ", not: "¬", ntilde: "ñ", Ntilde: "Ñ", oacute: "ó", Oacute: "Ó", ocirc: "ô", Ocirc: "Ô", ograve: "ò", Ograve: "Ò", ordf: "ª", ordm: "º", oslash: "ø", Oslash: "Ø", otilde: "õ", Otilde: "Õ", ouml: "ö", Ouml: "Ö", para: "¶", plusmn: "±", pound: "£", quot: '"', QUOT: '"', raquo: "»", reg: "®", REG: "®", sect: "§", shy: "­", sup1: "¹", sup2: "²", sup3: "³", szlig: "ß", thorn: "þ", THORN: "Þ", times: "×", uacute: "ú", Uacute: "Ú", ucirc: "û", Ucirc: "Û", ugrave: "ù", Ugrave: "Ù", uml: "¨", uuml: "ü", Uuml: "Ü", yacute: "ý", Yacute: "Ý", yen: "¥", yuml: "ÿ" };
          var b = { 0: "�", 128: "€", 130: "‚", 131: "ƒ", 132: "„", 133: "…", 134: "†", 135: "‡", 136: "ˆ", 137: "‰", 138: "Š", 139: "‹", 140: "Œ", 142: "Ž", 145: "‘", 146: "’", 147: "“", 148: "”", 149: "•", 150: "–", 151: "—", 152: "˜", 153: "™", 154: "š", 155: "›", 156: "œ", 158: "ž", 159: "Ÿ" };
          var y = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65e3, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];
          var w = String.fromCharCode;
          var T = {};
          var E = T.hasOwnProperty;
          var has = function(e3, r3) {
            return E.call(e3, r3);
          };
          var contains = function(e3, r3) {
            var t4 = -1;
            var a2 = e3.length;
            while (++t4 < a2) {
              if (e3[t4] == r3) {
                return true;
              }
            }
            return false;
          };
          var merge = function(e3, r3) {
            if (!e3) {
              return r3;
            }
            var t4 = {};
            var a2;
            for (a2 in r3) {
              t4[a2] = has(e3, a2) ? e3[a2] : r3[a2];
            }
            return t4;
          };
          var codePointToSymbol = function(e3, r3) {
            var t4 = "";
            if (e3 >= 55296 && e3 <= 57343 || e3 > 1114111) {
              if (r3) {
                parseError("character reference outside the permissible Unicode range");
              }
              return "�";
            }
            if (has(b, e3)) {
              if (r3) {
                parseError("disallowed character reference");
              }
              return b[e3];
            }
            if (r3 && contains(y, e3)) {
              parseError("disallowed character reference");
            }
            if (e3 > 65535) {
              e3 -= 65536;
              t4 += w(e3 >>> 10 & 1023 | 55296);
              e3 = 56320 | e3 & 1023;
            }
            t4 += w(e3);
            return t4;
          };
          var hexEscape = function(e3) {
            return "&#x" + e3.toString(16).toUpperCase() + ";";
          };
          var decEscape = function(e3) {
            return "&#" + e3 + ";";
          };
          var parseError = function(e3) {
            throw Error("Parse error: " + e3);
          };
          var encode = function(e3, r3) {
            r3 = merge(r3, encode.options);
            var t4 = r3.strict;
            if (t4 && g.test(e3)) {
              parseError("forbidden code point");
            }
            var a2 = r3.encodeEverything;
            var n2 = r3.useNamedReferences;
            var i2 = r3.allowUnsafeSymbols;
            var d2 = r3.decimal ? decEscape : hexEscape;
            var escapeBmpSymbol = function(e4) {
              return d2(e4.charCodeAt(0));
            };
            if (a2) {
              e3 = e3.replace(s, function(e4) {
                if (n2 && has(c, e4)) {
                  return "&" + c[e4] + ";";
                }
                return escapeBmpSymbol(e4);
              });
              if (n2) {
                e3 = e3.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;").replace(/&#x66;&#x6A;/g, "&fjlig;");
              }
              if (n2) {
                e3 = e3.replace(l, function(e4) {
                  return "&" + c[e4] + ";";
                });
              }
            } else if (n2) {
              if (!i2) {
                e3 = e3.replace(p, function(e4) {
                  return "&" + c[e4] + ";";
                });
              }
              e3 = e3.replace(/&gt;\u20D2/g, "&nvgt;").replace(/&lt;\u20D2/g, "&nvlt;");
              e3 = e3.replace(l, function(e4) {
                return "&" + c[e4] + ";";
              });
            } else if (!i2) {
              e3 = e3.replace(p, escapeBmpSymbol);
            }
            return e3.replace(o, function(e4) {
              var r4 = e4.charCodeAt(0);
              var t5 = e4.charCodeAt(1);
              var a3 = (r4 - 55296) * 1024 + t5 - 56320 + 65536;
              return d2(a3);
            }).replace(u, escapeBmpSymbol);
          };
          encode.options = { allowUnsafeSymbols: false, encodeEverything: false, strict: false, useNamedReferences: false, decimal: false };
          var decode = function(e3, r3) {
            r3 = merge(r3, decode.options);
            var t4 = r3.strict;
            if (t4 && f.test(e3)) {
              parseError("malformed character reference");
            }
            return e3.replace(h, function(e4, a2, n2, i2, o2, s2, u2, l2, c2) {
              var p2;
              var d2;
              var f2;
              var g2;
              var h2;
              var b2;
              if (a2) {
                h2 = a2;
                return m[h2];
              }
              if (n2) {
                h2 = n2;
                b2 = i2;
                if (b2 && r3.isAttributeValue) {
                  if (t4 && b2 == "=") {
                    parseError("`&` did not start a character reference");
                  }
                  return e4;
                } else {
                  if (t4) {
                    parseError("named character reference was not terminated by a semicolon");
                  }
                  return v[h2] + (b2 || "");
                }
              }
              if (o2) {
                f2 = o2;
                d2 = s2;
                if (t4 && !d2) {
                  parseError("character reference was not terminated by a semicolon");
                }
                p2 = parseInt(f2, 10);
                return codePointToSymbol(p2, t4);
              }
              if (u2) {
                g2 = u2;
                d2 = l2;
                if (t4 && !d2) {
                  parseError("character reference was not terminated by a semicolon");
                }
                p2 = parseInt(g2, 16);
                return codePointToSymbol(p2, t4);
              }
              if (t4) {
                parseError("named character reference was not terminated by a semicolon");
              }
              return e4;
            });
          };
          decode.options = { isAttributeValue: false, strict: false };
          var escape = function(e3) {
            return e3.replace(p, function(e4) {
              return d[e4];
            });
          };
          var A = { version: "1.2.0", encode, decode, escape, unescape: decode };
          if (typeof define == "function" && typeof define.amd == "object" && define.amd) {
            define(function() {
              return A;
            });
          } else if (a && !a.nodeType) {
            if (n) {
              n.exports = A;
            } else {
              for (var q in A) {
                has(A, q) && (a[q] = A[q]);
              }
            }
          } else {
            t3.he = A;
          }
        })(this);
      }, 5596: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        function arr_back(e3) {
          return e3[e3.length - 1];
        }
        r2["default"] = arr_back;
      }, 5417: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.NodeType = r2.TextNode = r2.Node = r2.valid = r2["default"] = r2.parse = r2.HTMLElement = r2.CommentNode = void 0;
        var n = t2(190);
        Object.defineProperty(r2, "CommentNode", { enumerable: true, get: function() {
          return a(n).default;
        } });
        var i = t2(3248);
        Object.defineProperty(r2, "HTMLElement", { enumerable: true, get: function() {
          return a(i).default;
        } });
        var o = t2(8653);
        Object.defineProperty(r2, "parse", { enumerable: true, get: function() {
          return a(o).default;
        } });
        Object.defineProperty(r2, "default", { enumerable: true, get: function() {
          return a(o).default;
        } });
        var s = t2(3494);
        Object.defineProperty(r2, "valid", { enumerable: true, get: function() {
          return a(s).default;
        } });
        var u = t2(7402);
        Object.defineProperty(r2, "Node", { enumerable: true, get: function() {
          return a(u).default;
        } });
        var l = t2(111);
        Object.defineProperty(r2, "TextNode", { enumerable: true, get: function() {
          return a(l).default;
        } });
        var c = t2(5896);
        Object.defineProperty(r2, "NodeType", { enumerable: true, get: function() {
          return a(c).default;
        } });
      }, 9958: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var n = a(t2(5896));
        function isTag(e3) {
          return e3 && e3.nodeType === n.default.ELEMENT_NODE;
        }
        function getAttributeValue(e3, r3) {
          return isTag(e3) ? e3.getAttribute(r3) : void 0;
        }
        function getName(e3) {
          return (e3 && e3.rawTagName || "").toLowerCase();
        }
        function getChildren(e3) {
          return e3 && e3.childNodes;
        }
        function getParent(e3) {
          return e3 ? e3.parentNode : null;
        }
        function getText(e3) {
          return e3.text;
        }
        function removeSubsets(e3) {
          var r3 = e3.length;
          var t3;
          var a2;
          var n2;
          while (--r3 > -1) {
            t3 = a2 = e3[r3];
            e3[r3] = null;
            n2 = true;
            while (a2) {
              if (e3.indexOf(a2) > -1) {
                n2 = false;
                e3.splice(r3, 1);
                break;
              }
              a2 = getParent(a2);
            }
            if (n2) {
              e3[r3] = t3;
            }
          }
          return e3;
        }
        function existsOne(e3, r3) {
          return r3.some(function(r4) {
            return isTag(r4) ? e3(r4) || existsOne(e3, getChildren(r4)) : false;
          });
        }
        function getSiblings(e3) {
          var r3 = getParent(e3);
          return r3 && getChildren(r3);
        }
        function hasAttrib(e3, r3) {
          return getAttributeValue(e3, r3) !== void 0;
        }
        function findOne(e3, r3) {
          var t3 = null;
          for (var a2 = 0, n2 = r3.length; a2 < n2 && !t3; a2++) {
            var i = r3[a2];
            if (e3(i)) {
              t3 = i;
            } else {
              var o = getChildren(i);
              if (o && o.length > 0) {
                t3 = findOne(e3, o);
              }
            }
          }
          return t3;
        }
        function findAll(e3, r3) {
          var t3 = [];
          for (var a2 = 0, n2 = r3.length; a2 < n2; a2++) {
            if (!isTag(r3[a2])) continue;
            if (e3(r3[a2])) t3.push(r3[a2]);
            var i = getChildren(r3[a2]);
            if (i) t3 = t3.concat(findAll(e3, i));
          }
          return t3;
        }
        r2["default"] = { isTag, getAttributeValue, getName, getChildren, getParent, getText, removeSubsets, existsOne, getSiblings, hasAttrib, findOne, findAll };
      }, 190: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__extends || /* @__PURE__ */ function() {
          var extendStatics = function(e3, r3) {
            extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, r4) {
              e4.__proto__ = r4;
            } || function(e4, r4) {
              for (var t3 in r4) if (Object.prototype.hasOwnProperty.call(r4, t3)) e4[t3] = r4[t3];
            };
            return extendStatics(e3, r3);
          };
          return function(e3, r3) {
            if (typeof r3 !== "function" && r3 !== null) throw new TypeError("Class extends value " + String(r3) + " is not a constructor or null");
            extendStatics(e3, r3);
            function __() {
              this.constructor = e3;
            }
            e3.prototype = r3 === null ? Object.create(r3) : (__.prototype = r3.prototype, new __());
          };
        }();
        var n = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var i = n(t2(7402));
        var o = n(t2(5896));
        var s = function(e3) {
          a(CommentNode, e3);
          function CommentNode(r3, t3, a2) {
            var n2 = e3.call(this, t3, a2) || this;
            n2.rawText = r3;
            n2.nodeType = o.default.COMMENT_NODE;
            return n2;
          }
          CommentNode.prototype.clone = function() {
            return new CommentNode(this.rawText, null);
          };
          Object.defineProperty(CommentNode.prototype, "text", { get: function() {
            return this.rawText;
          }, enumerable: false, configurable: true });
          CommentNode.prototype.toString = function() {
            return "<!--".concat(this.rawText, "-->");
          };
          return CommentNode;
        }(i.default);
        r2["default"] = s;
      }, 3248: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__extends || /* @__PURE__ */ function() {
          var extendStatics = function(e3, r3) {
            extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, r4) {
              e4.__proto__ = r4;
            } || function(e4, r4) {
              for (var t3 in r4) if (Object.prototype.hasOwnProperty.call(r4, t3)) e4[t3] = r4[t3];
            };
            return extendStatics(e3, r3);
          };
          return function(e3, r3) {
            if (typeof r3 !== "function" && r3 !== null) throw new TypeError("Class extends value " + String(r3) + " is not a constructor or null");
            extendStatics(e3, r3);
            function __() {
              this.constructor = e3;
            }
            e3.prototype = r3 === null ? Object.create(r3) : (__.prototype = r3.prototype, new __());
          };
        }();
        var n = this && this.__assign || function() {
          n = Object.assign || function(e3) {
            for (var r3, t3 = 1, a2 = arguments.length; t3 < a2; t3++) {
              r3 = arguments[t3];
              for (var n2 in r3) if (Object.prototype.hasOwnProperty.call(r3, n2)) e3[n2] = r3[n2];
            }
            return e3;
          };
          return n.apply(this, arguments);
        };
        var i = this && this.__spreadArray || function(e3, r3, t3) {
          if (t3 || arguments.length === 2) for (var a2 = 0, n2 = r3.length, i2; a2 < n2; a2++) {
            if (i2 || !(a2 in r3)) {
              if (!i2) i2 = Array.prototype.slice.call(r3, 0, a2);
              i2[a2] = r3[a2];
            }
          }
          return e3.concat(i2 || Array.prototype.slice.call(r3));
        };
        var o = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.parse = r2.base_parse = void 0;
        var s = t2(1112);
        var u = o(t2(5902));
        var l = o(t2(5596));
        var c = o(t2(9958));
        var p = o(t2(190));
        var d = o(t2(7402));
        var f = o(t2(111));
        var g = o(t2(5896));
        var h = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "link", "meta", "param", "source", "track", "wbr"]);
        function decode(e3) {
          return JSON.parse(JSON.stringify(u.default.decode(e3)));
        }
        var m = ["h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup"];
        var v = ["details", "dialog", "dd", "div", "dt"];
        var b = ["fieldset", "figcaption", "figure", "footer", "form"];
        var y = ["table", "td", "tr"];
        var w = ["address", "article", "aside", "blockquote", "br", "hr", "li", "main", "nav", "ol", "p", "pre", "section", "ul"];
        var T = /* @__PURE__ */ new Set();
        function addToKBlockElement() {
          var e3 = [];
          for (var r3 = 0; r3 < arguments.length; r3++) {
            e3[r3] = arguments[r3];
          }
          var addToSet = function(e4) {
            for (var r4 = 0; r4 < e4.length; r4++) {
              var t4 = e4[r4];
              T.add(t4);
              T.add(t4.toUpperCase());
            }
          };
          for (var t3 = 0, a2 = e3; t3 < a2.length; t3++) {
            var n2 = a2[t3];
            addToSet(n2);
          }
        }
        addToKBlockElement(m, v, b, y, w);
        var E = function() {
          function DOMTokenList(e3, r3) {
            if (e3 === void 0) {
              e3 = [];
            }
            if (r3 === void 0) {
              r3 = function() {
                return null;
              };
            }
            this._set = new Set(e3);
            this._afterUpdate = r3;
          }
          DOMTokenList.prototype._validate = function(e3) {
            if (/\s/.test(e3)) {
              throw new Error("DOMException in DOMTokenList.add: The token '".concat(e3, "' contains HTML space characters, which are not valid in tokens."));
            }
          };
          DOMTokenList.prototype.add = function(e3) {
            this._validate(e3);
            this._set.add(e3);
            this._afterUpdate(this);
          };
          DOMTokenList.prototype.replace = function(e3, r3) {
            this._validate(r3);
            this._set.delete(e3);
            this._set.add(r3);
            this._afterUpdate(this);
          };
          DOMTokenList.prototype.remove = function(e3) {
            this._set.delete(e3) && this._afterUpdate(this);
          };
          DOMTokenList.prototype.toggle = function(e3) {
            this._validate(e3);
            if (this._set.has(e3)) this._set.delete(e3);
            else this._set.add(e3);
            this._afterUpdate(this);
          };
          DOMTokenList.prototype.contains = function(e3) {
            return this._set.has(e3);
          };
          Object.defineProperty(DOMTokenList.prototype, "length", { get: function() {
            return this._set.size;
          }, enumerable: false, configurable: true });
          DOMTokenList.prototype.values = function() {
            return this._set.values();
          };
          Object.defineProperty(DOMTokenList.prototype, "value", { get: function() {
            return Array.from(this._set.values());
          }, enumerable: false, configurable: true });
          DOMTokenList.prototype.toString = function() {
            return Array.from(this._set.values()).join(" ");
          };
          return DOMTokenList;
        }();
        var A = function(e3) {
          a(HTMLElement, e3);
          function HTMLElement(r3, t3, a2, n2, i2) {
            if (a2 === void 0) {
              a2 = "";
            }
            var o2 = e3.call(this, n2, i2) || this;
            o2.rawAttrs = a2;
            o2.nodeType = g.default.ELEMENT_NODE;
            o2.rawTagName = r3;
            o2.rawAttrs = a2 || "";
            o2.id = t3.id || "";
            o2.childNodes = [];
            o2.classList = new E(t3.class ? t3.class.split(/\s+/) : [], function(e4) {
              return o2.setAttribute("class", e4.toString());
            });
            if (t3.id) {
              if (!a2) {
                o2.rawAttrs = 'id="'.concat(t3.id, '"');
              }
            }
            if (t3.class) {
              if (!a2) {
                var s2 = 'class="'.concat(o2.classList.toString(), '"');
                if (o2.rawAttrs) {
                  o2.rawAttrs += " ".concat(s2);
                } else {
                  o2.rawAttrs = s2;
                }
              }
            }
            return o2;
          }
          HTMLElement.prototype.quoteAttribute = function(e4) {
            if (e4 == null) {
              return "null";
            }
            return JSON.stringify(e4.replace(/"/g, "&quot;"));
          };
          HTMLElement.prototype.removeChild = function(e4) {
            this.childNodes = this.childNodes.filter(function(r3) {
              return r3 !== e4;
            });
            return this;
          };
          HTMLElement.prototype.exchangeChild = function(e4, r3) {
            var t3 = this.childNodes;
            this.childNodes = t3.map(function(t4) {
              if (t4 === e4) {
                return r3;
              }
              return t4;
            });
            return this;
          };
          Object.defineProperty(HTMLElement.prototype, "tagName", { get: function() {
            return this.rawTagName ? this.rawTagName.toUpperCase() : this.rawTagName;
          }, set: function(e4) {
            this.rawTagName = e4.toLowerCase();
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "localName", { get: function() {
            return this.rawTagName.toLowerCase();
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "isVoidElement", { get: function() {
            return h.has(this.localName);
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "rawText", { get: function() {
            return this.childNodes.reduce(function(e4, r3) {
              return e4 += r3.rawText;
            }, "");
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "textContent", { get: function() {
            return decode(this.rawText);
          }, set: function(e4) {
            var r3 = [new f.default(e4, this)];
            this.childNodes = r3;
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "text", { get: function() {
            return decode(this.rawText);
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "structuredText", { get: function() {
            var e4 = [];
            var r3 = [e4];
            function dfs(t3) {
              if (t3.nodeType === g.default.ELEMENT_NODE) {
                if (T.has(t3.rawTagName)) {
                  if (e4.length > 0) {
                    r3.push(e4 = []);
                  }
                  t3.childNodes.forEach(dfs);
                  if (e4.length > 0) {
                    r3.push(e4 = []);
                  }
                } else {
                  t3.childNodes.forEach(dfs);
                }
              } else if (t3.nodeType === g.default.TEXT_NODE) {
                if (t3.isWhitespace) {
                  e4.prependWhitespace = true;
                } else {
                  var a2 = t3.trimmedText;
                  if (e4.prependWhitespace) {
                    a2 = " ".concat(a2);
                    e4.prependWhitespace = false;
                  }
                  e4.push(a2);
                }
              }
            }
            dfs(this);
            return r3.map(function(e5) {
              return e5.join("").replace(/\s{2,}/g, " ");
            }).join("\n").replace(/\s+$/, "");
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.toString = function() {
            var e4 = this.rawTagName;
            if (e4) {
              var r3 = this.rawAttrs ? " ".concat(this.rawAttrs) : "";
              return this.isVoidElement ? "<".concat(e4).concat(r3, ">") : "<".concat(e4).concat(r3, ">").concat(this.innerHTML, "</").concat(e4, ">");
            }
            return this.innerHTML;
          };
          Object.defineProperty(HTMLElement.prototype, "innerHTML", { get: function() {
            return this.childNodes.map(function(e4) {
              return e4.toString();
            }).join("");
          }, set: function(e4) {
            var r3 = parse(e4);
            var t3 = r3.childNodes.length ? r3.childNodes : [new f.default(e4, this)];
            resetParent(t3, this);
            resetParent(this.childNodes, null);
            this.childNodes = t3;
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.set_content = function(e4, r3) {
            if (r3 === void 0) {
              r3 = {};
            }
            if (e4 instanceof d.default) {
              e4 = [e4];
            } else if (typeof e4 == "string") {
              var t3 = parse(e4, r3);
              e4 = t3.childNodes.length ? t3.childNodes : [new f.default(e4, this)];
            }
            resetParent(this.childNodes, null);
            resetParent(e4, this);
            this.childNodes = e4;
            return this;
          };
          HTMLElement.prototype.replaceWith = function() {
            var e4 = this;
            var r3 = [];
            for (var t3 = 0; t3 < arguments.length; t3++) {
              r3[t3] = arguments[t3];
            }
            var a2 = this.parentNode;
            var n2 = r3.map(function(r4) {
              if (r4 instanceof d.default) {
                return [r4];
              } else if (typeof r4 == "string") {
                var t4 = parse(r4);
                return t4.childNodes.length ? t4.childNodes : [new f.default(r4, e4)];
              }
              return [];
            }).flat();
            var o2 = a2.childNodes.findIndex(function(r4) {
              return r4 === e4;
            });
            resetParent([this], null);
            a2.childNodes = i(i(i([], a2.childNodes.slice(0, o2), true), resetParent(n2, a2), true), a2.childNodes.slice(o2 + 1), true);
          };
          Object.defineProperty(HTMLElement.prototype, "outerHTML", { get: function() {
            return this.toString();
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.trimRight = function(e4) {
            for (var r3 = 0; r3 < this.childNodes.length; r3++) {
              var t3 = this.childNodes[r3];
              if (t3.nodeType === g.default.ELEMENT_NODE) {
                t3.trimRight(e4);
              } else {
                var a2 = t3.rawText.search(e4);
                if (a2 > -1) {
                  t3.rawText = t3.rawText.substr(0, a2);
                  this.childNodes.length = r3 + 1;
                }
              }
            }
            return this;
          };
          Object.defineProperty(HTMLElement.prototype, "structure", { get: function() {
            var e4 = [];
            var r3 = 0;
            function write(t3) {
              e4.push("  ".repeat(r3) + t3);
            }
            function dfs(e5) {
              var t3 = e5.id ? "#".concat(e5.id) : "";
              var a2 = e5.classList.length ? ".".concat(e5.classList.value.join(".")) : "";
              write("".concat(e5.rawTagName).concat(t3).concat(a2));
              r3++;
              e5.childNodes.forEach(function(e6) {
                if (e6.nodeType === g.default.ELEMENT_NODE) {
                  dfs(e6);
                } else if (e6.nodeType === g.default.TEXT_NODE) {
                  if (!e6.isWhitespace) {
                    write("#text");
                  }
                }
              });
              r3--;
            }
            dfs(this);
            return e4.join("\n");
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.removeWhitespace = function() {
            var e4 = this;
            var r3 = 0;
            this.childNodes.forEach(function(t3) {
              if (t3.nodeType === g.default.TEXT_NODE) {
                if (t3.isWhitespace) {
                  return;
                }
                t3.rawText = t3.trimmedRawText;
              } else if (t3.nodeType === g.default.ELEMENT_NODE) {
                t3.removeWhitespace();
              }
              e4.childNodes[r3++] = t3;
            });
            this.childNodes.length = r3;
            return this;
          };
          HTMLElement.prototype.querySelectorAll = function(e4) {
            return (0, s.selectAll)(e4, this, { xmlMode: true, adapter: c.default });
          };
          HTMLElement.prototype.querySelector = function(e4) {
            return (0, s.selectOne)(e4, this, { xmlMode: true, adapter: c.default });
          };
          HTMLElement.prototype.getElementsByTagName = function(e4) {
            var r3 = e4.toUpperCase();
            var t3 = [];
            var a2 = [];
            var n2 = this;
            var i2 = 0;
            while (i2 !== void 0) {
              var o2 = void 0;
              do {
                o2 = n2.childNodes[i2++];
              } while (i2 < n2.childNodes.length && o2 === void 0);
              if (o2 === void 0) {
                n2 = n2.parentNode;
                i2 = a2.pop();
                continue;
              }
              if (o2.nodeType === g.default.ELEMENT_NODE) {
                if (e4 === "*" || o2.tagName === r3) t3.push(o2);
                if (o2.childNodes.length > 0) {
                  a2.push(i2);
                  n2 = o2;
                  i2 = 0;
                }
              }
            }
            return t3;
          };
          HTMLElement.prototype.getElementById = function(e4) {
            var r3 = [];
            var t3 = this;
            var a2 = 0;
            while (a2 !== void 0) {
              var n2 = void 0;
              do {
                n2 = t3.childNodes[a2++];
              } while (a2 < t3.childNodes.length && n2 === void 0);
              if (n2 === void 0) {
                t3 = t3.parentNode;
                a2 = r3.pop();
                continue;
              }
              if (n2.nodeType === g.default.ELEMENT_NODE) {
                if (n2.id === e4) {
                  return n2;
                }
                if (n2.childNodes.length > 0) {
                  r3.push(a2);
                  t3 = n2;
                  a2 = 0;
                }
              }
            }
            return null;
          };
          HTMLElement.prototype.closest = function(e4) {
            var r3 = /* @__PURE__ */ new Map();
            var t3 = this;
            var a2 = null;
            function findOne(e5, t4) {
              var a3 = null;
              for (var n2 = 0, i3 = t4.length; n2 < i3 && !a3; n2++) {
                var o2 = t4[n2];
                if (e5(o2)) {
                  a3 = o2;
                } else {
                  var s2 = r3.get(o2);
                  if (s2) {
                    a3 = findOne(e5, [s2]);
                  }
                }
              }
              return a3;
            }
            while (t3) {
              r3.set(t3, a2);
              a2 = t3;
              t3 = t3.parentNode;
            }
            t3 = this;
            while (t3) {
              var i2 = (0, s.selectOne)(e4, t3, { xmlMode: true, adapter: n(n({}, c.default), { getChildren: function(e5) {
                var t4 = r3.get(e5);
                return t4 && [t4];
              }, getSiblings: function(e5) {
                return [e5];
              }, findOne, findAll: function() {
                return [];
              } }) });
              if (i2) {
                return i2;
              }
              t3 = t3.parentNode;
            }
            return null;
          };
          HTMLElement.prototype.appendChild = function(e4) {
            e4.remove();
            this.childNodes.push(e4);
            e4.parentNode = this;
            return e4;
          };
          Object.defineProperty(HTMLElement.prototype, "firstChild", { get: function() {
            return this.childNodes[0];
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "lastChild", { get: function() {
            return (0, l.default)(this.childNodes);
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "attrs", { get: function() {
            if (this._attrs) {
              return this._attrs;
            }
            this._attrs = {};
            var e4 = this.rawAttributes;
            for (var r3 in e4) {
              var t3 = e4[r3] || "";
              this._attrs[r3.toLowerCase()] = decode(t3);
            }
            return this._attrs;
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "attributes", { get: function() {
            var e4 = {};
            var r3 = this.rawAttributes;
            for (var t3 in r3) {
              var a2 = r3[t3] || "";
              e4[t3] = decode(a2);
            }
            return e4;
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "rawAttributes", { get: function() {
            if (this._rawAttrs) {
              return this._rawAttrs;
            }
            var e4 = {};
            if (this.rawAttrs) {
              var r3 = /([a-zA-Z()#][a-zA-Z0-9-_:()#]*)(?:\s*=\s*((?:'[^']*')|(?:"[^"]*")|\S+))?/g;
              var t3 = void 0;
              while (t3 = r3.exec(this.rawAttrs)) {
                var a2 = t3[1];
                var n2 = t3[2] || null;
                if (n2 && (n2[0] === "'" || n2[0] === '"')) n2 = n2.slice(1, n2.length - 1);
                e4[a2] = n2;
              }
            }
            this._rawAttrs = e4;
            return e4;
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.removeAttribute = function(e4) {
            var r3 = this.rawAttributes;
            delete r3[e4];
            if (this._attrs) {
              delete this._attrs[e4];
            }
            this.rawAttrs = Object.keys(r3).map(function(e5) {
              var t3 = JSON.stringify(r3[e5]);
              if (t3 === void 0 || t3 === "null") {
                return e5;
              }
              return "".concat(e5, "=").concat(t3);
            }).join(" ");
            if (e4 === "id") {
              this.id = "";
            }
            return this;
          };
          HTMLElement.prototype.hasAttribute = function(e4) {
            return e4.toLowerCase() in this.attrs;
          };
          HTMLElement.prototype.getAttribute = function(e4) {
            return this.attrs[e4.toLowerCase()];
          };
          HTMLElement.prototype.setAttribute = function(e4, r3) {
            var t3 = this;
            if (arguments.length < 2) {
              throw new Error("Failed to execute 'setAttribute' on 'Element'");
            }
            var a2 = e4.toLowerCase();
            var n2 = this.rawAttributes;
            for (var i2 in n2) {
              if (i2.toLowerCase() === a2) {
                e4 = i2;
                break;
              }
            }
            n2[e4] = String(r3);
            if (this._attrs) {
              this._attrs[a2] = decode(n2[e4]);
            }
            this.rawAttrs = Object.keys(n2).map(function(e5) {
              var r4 = t3.quoteAttribute(n2[e5]);
              if (r4 === "null" || r4 === '""') return e5;
              return "".concat(e5, "=").concat(r4);
            }).join(" ");
            if (e4 === "id") {
              this.id = r3;
            }
          };
          HTMLElement.prototype.setAttributes = function(e4) {
            var r3 = this;
            if (this._attrs) {
              delete this._attrs;
            }
            if (this._rawAttrs) {
              delete this._rawAttrs;
            }
            this.rawAttrs = Object.keys(e4).map(function(t3) {
              var a2 = e4[t3];
              if (a2 === "null" || a2 === '""') return t3;
              return "".concat(t3, "=").concat(r3.quoteAttribute(String(a2)));
            }).join(" ");
            return this;
          };
          HTMLElement.prototype.insertAdjacentHTML = function(e4, r3) {
            var t3, a2, n2;
            var o2 = this;
            if (arguments.length < 2) {
              throw new Error("2 arguments required");
            }
            var s2 = parse(r3);
            if (e4 === "afterend") {
              var u2 = this.parentNode.childNodes.findIndex(function(e5) {
                return e5 === o2;
              });
              resetParent(s2.childNodes, this.parentNode);
              (t3 = this.parentNode.childNodes).splice.apply(t3, i([u2 + 1, 0], s2.childNodes, false));
            } else if (e4 === "afterbegin") {
              resetParent(s2.childNodes, this);
              (a2 = this.childNodes).unshift.apply(a2, s2.childNodes);
            } else if (e4 === "beforeend") {
              s2.childNodes.forEach(function(e5) {
                o2.appendChild(e5);
              });
            } else if (e4 === "beforebegin") {
              var u2 = this.parentNode.childNodes.findIndex(function(e5) {
                return e5 === o2;
              });
              resetParent(s2.childNodes, this.parentNode);
              (n2 = this.parentNode.childNodes).splice.apply(n2, i([u2, 0], s2.childNodes, false));
            } else {
              throw new Error("The value provided ('".concat(e4, "') is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'"));
            }
            return this;
          };
          Object.defineProperty(HTMLElement.prototype, "nextSibling", { get: function() {
            if (this.parentNode) {
              var e4 = this.parentNode.childNodes;
              var r3 = 0;
              while (r3 < e4.length) {
                var t3 = e4[r3++];
                if (this === t3) return e4[r3] || null;
              }
              return null;
            }
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "nextElementSibling", { get: function() {
            if (this.parentNode) {
              var e4 = this.parentNode.childNodes;
              var r3 = 0;
              var t3 = false;
              while (r3 < e4.length) {
                var a2 = e4[r3++];
                if (t3) {
                  if (a2 instanceof HTMLElement) {
                    return a2 || null;
                  }
                } else if (this === a2) {
                  t3 = true;
                }
              }
              return null;
            }
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "previousSibling", { get: function() {
            if (this.parentNode) {
              var e4 = this.parentNode.childNodes;
              var r3 = e4.length;
              while (r3 > 0) {
                var t3 = e4[--r3];
                if (this === t3) return e4[r3 - 1] || null;
              }
              return null;
            }
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "previousElementSibling", { get: function() {
            if (this.parentNode) {
              var e4 = this.parentNode.childNodes;
              var r3 = e4.length;
              var t3 = false;
              while (r3 > 0) {
                var a2 = e4[--r3];
                if (t3) {
                  if (a2 instanceof HTMLElement) {
                    return a2 || null;
                  }
                } else if (this === a2) {
                  t3 = true;
                }
              }
              return null;
            }
          }, enumerable: false, configurable: true });
          Object.defineProperty(HTMLElement.prototype, "classNames", { get: function() {
            return this.classList.toString();
          }, enumerable: false, configurable: true });
          HTMLElement.prototype.clone = function() {
            return parse(this.toString()).firstChild;
          };
          return HTMLElement;
        }(d.default);
        r2["default"] = A;
        var q = /<!--[\s\S]*?-->|<(\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\s+[^>]*?(?:(?:'[^']*')|(?:"[^"]*"))?)*)\s*(\/?)>/g;
        var x = /(?:^|\s)(id|class)\s*=\s*((?:'[^']*')|(?:"[^"]*")|\S+)/gi;
        var D = { area: true, AREA: true, base: true, BASE: true, br: true, BR: true, col: true, COL: true, hr: true, HR: true, img: true, IMG: true, input: true, INPUT: true, link: true, LINK: true, meta: true, META: true, source: true, SOURCE: true, embed: true, EMBED: true, param: true, PARAM: true, track: true, TRACK: true, wbr: true, WBR: true };
        var C = { li: { li: true, LI: true }, LI: { li: true, LI: true }, p: { p: true, div: true, P: true, DIV: true }, P: { p: true, div: true, P: true, DIV: true }, b: { div: true, DIV: true }, B: { div: true, DIV: true }, td: { td: true, th: true, TD: true, TH: true }, TD: { td: true, th: true, TD: true, TH: true }, th: { td: true, th: true, TD: true, TH: true }, TH: { td: true, th: true, TD: true, TH: true }, h1: { h1: true, H1: true }, H1: { h1: true, H1: true }, h2: { h2: true, H2: true }, H2: { h2: true, H2: true }, h3: { h3: true, H3: true }, H3: { h3: true, H3: true }, h4: { h4: true, H4: true }, H4: { h4: true, H4: true }, h5: { h5: true, H5: true }, H5: { h5: true, H5: true }, h6: { h6: true, H6: true }, H6: { h6: true, H6: true } };
        var N = { li: { ul: true, ol: true, UL: true, OL: true }, LI: { ul: true, ol: true, UL: true, OL: true }, a: { div: true, DIV: true }, A: { div: true, DIV: true }, b: { div: true, DIV: true }, B: { div: true, DIV: true }, i: { div: true, DIV: true }, I: { div: true, DIV: true }, p: { div: true, DIV: true }, P: { div: true, DIV: true }, td: { tr: true, table: true, TR: true, TABLE: true }, TD: { tr: true, table: true, TR: true, TABLE: true }, th: { tr: true, table: true, TR: true, TABLE: true }, TH: { tr: true, table: true, TR: true, TABLE: true } };
        var S = "documentfragmentcontainer";
        function base_parse(e3, r3) {
          if (r3 === void 0) {
            r3 = { lowerCaseTagName: false, comment: false };
          }
          var t3 = r3.blockTextElements || { script: true, noscript: true, style: true, pre: true };
          var a2 = Object.keys(t3);
          var n2 = a2.map(function(e4) {
            return new RegExp("^".concat(e4, "$"), "i");
          });
          var i2 = a2.filter(function(e4) {
            return t3[e4];
          }).map(function(e4) {
            return new RegExp("^".concat(e4, "$"), "i");
          });
          function element_should_be_ignore(e4) {
            return i2.some(function(r4) {
              return r4.test(e4);
            });
          }
          function is_block_text_element(e4) {
            return n2.some(function(r4) {
              return r4.test(e4);
            });
          }
          var createRange = function(e4, r4) {
            return [e4 - v2, r4 - v2];
          };
          var o2 = new A(null, {}, "", null, [0, e3.length]);
          var s2 = o2;
          var u2 = [o2];
          var c2 = -1;
          var d2 = void 0;
          var g2;
          e3 = "<".concat(S, ">").concat(e3, "</").concat(S, ">");
          var h2 = r3.lowerCaseTagName;
          var m2 = e3.length - (S.length + 2);
          var v2 = S.length + 2;
          while (g2 = q.exec(e3)) {
            var b2 = g2[0], y2 = g2[1], w2 = g2[2], T2 = g2[3], E2 = g2[4];
            var L = b2.length;
            var k = q.lastIndex - L;
            var O = q.lastIndex;
            if (c2 > -1) {
              if (c2 + L < O) {
                var _ = e3.substring(c2, k);
                s2.appendChild(new f.default(_, s2, createRange(c2, k)));
              }
            }
            c2 = q.lastIndex;
            if (w2 === S) continue;
            if (b2[1] === "!") {
              if (r3.comment) {
                var _ = e3.substring(k + 4, O - 3);
                s2.appendChild(new p.default(_, s2, createRange(k, O)));
              }
              continue;
            }
            if (h2) w2 = w2.toLowerCase();
            if (!y2) {
              var P = {};
              for (var R = void 0; R = x.exec(T2); ) {
                var B = R[1], M = R[2];
                var j = M[0] === "'" || M[0] === '"';
                P[B.toLowerCase()] = j ? M.slice(1, M.length - 1) : M;
              }
              var H = s2.rawTagName;
              if (!E2 && C[H]) {
                if (C[H][w2]) {
                  u2.pop();
                  s2 = (0, l.default)(u2);
                }
              }
              if (w2 === "a" || w2 === "A") {
                if (d2 !== void 0) {
                  u2.splice(d2);
                  s2 = (0, l.default)(u2);
                }
                d2 = u2.length;
              }
              var F = q.lastIndex;
              var V = F - L;
              s2 = s2.appendChild(new A(w2, P, T2.slice(1), null, createRange(V, F)));
              u2.push(s2);
              if (is_block_text_element(w2)) {
                var U = "</".concat(w2, ">");
                var I = h2 ? e3.toLocaleLowerCase().indexOf(U, q.lastIndex) : e3.indexOf(U, q.lastIndex);
                var G = I === -1 ? m2 : I;
                if (element_should_be_ignore(w2)) {
                  var _ = e3.substring(F, G);
                  if (_.length > 0 && /\S/.test(_)) {
                    s2.appendChild(new f.default(_, s2, createRange(F, G)));
                  }
                }
                if (I === -1) {
                  c2 = q.lastIndex = e3.length + 1;
                } else {
                  c2 = q.lastIndex = I + U.length;
                  y2 = "/";
                }
              }
            }
            if (y2 || E2 || D[w2]) {
              while (true) {
                if (w2 === "a" || w2 === "A") d2 = void 0;
                if (s2.rawTagName === w2) {
                  s2.range[1] = createRange(-1, Math.max(c2, O))[1];
                  u2.pop();
                  s2 = (0, l.default)(u2);
                  break;
                } else {
                  var H = s2.tagName;
                  if (N[H]) {
                    if (N[H][w2]) {
                      u2.pop();
                      s2 = (0, l.default)(u2);
                      continue;
                    }
                  }
                  break;
                }
              }
            }
          }
          return u2;
        }
        r2.base_parse = base_parse;
        function parse(e3, r3) {
          if (r3 === void 0) {
            r3 = { lowerCaseTagName: false, comment: false };
          }
          var t3 = base_parse(e3, r3);
          var a2 = t3[0];
          var _loop_1 = function() {
            var e4 = t3.pop();
            var a3 = (0, l.default)(t3);
            if (e4.parentNode && e4.parentNode.parentNode) {
              if (e4.parentNode === a3 && e4.tagName === a3.tagName) {
                if (r3.parseNoneClosedTags !== true) {
                  a3.removeChild(e4);
                  e4.childNodes.forEach(function(e5) {
                    a3.parentNode.appendChild(e5);
                  });
                  t3.pop();
                }
              } else {
                if (r3.parseNoneClosedTags !== true) {
                  a3.removeChild(e4);
                  e4.childNodes.forEach(function(e5) {
                    a3.appendChild(e5);
                  });
                }
              }
            } else {
            }
          };
          while (t3.length > 1) {
            _loop_1();
          }
          return a2;
        }
        r2.parse = parse;
        function resetParent(e3, r3) {
          return e3.map(function(e4) {
            e4.parentNode = r3;
            return e4;
          });
        }
      }, 7402: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        var a = t2(5902);
        var n = function() {
          function Node(e3, r3) {
            if (e3 === void 0) {
              e3 = null;
            }
            this.parentNode = e3;
            this.childNodes = [];
            Object.defineProperty(this, "range", { enumerable: false, writable: true, configurable: true, value: r3 !== null && r3 !== void 0 ? r3 : [-1, -1] });
          }
          Node.prototype.remove = function() {
            var e3 = this;
            if (this.parentNode) {
              var r3 = this.parentNode.childNodes;
              this.parentNode.childNodes = r3.filter(function(r4) {
                return e3 !== r4;
              });
              this.parentNode = null;
            }
            return this;
          };
          Object.defineProperty(Node.prototype, "innerText", { get: function() {
            return this.rawText;
          }, enumerable: false, configurable: true });
          Object.defineProperty(Node.prototype, "textContent", { get: function() {
            return (0, a.decode)(this.rawText);
          }, set: function(e3) {
            this.rawText = (0, a.encode)(e3);
          }, enumerable: false, configurable: true });
          return Node;
        }();
        r2["default"] = n;
      }, 111: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__extends || /* @__PURE__ */ function() {
          var extendStatics = function(e3, r3) {
            extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, r4) {
              e4.__proto__ = r4;
            } || function(e4, r4) {
              for (var t3 in r4) if (Object.prototype.hasOwnProperty.call(r4, t3)) e4[t3] = r4[t3];
            };
            return extendStatics(e3, r3);
          };
          return function(e3, r3) {
            if (typeof r3 !== "function" && r3 !== null) throw new TypeError("Class extends value " + String(r3) + " is not a constructor or null");
            extendStatics(e3, r3);
            function __() {
              this.constructor = e3;
            }
            e3.prototype = r3 === null ? Object.create(r3) : (__.prototype = r3.prototype, new __());
          };
        }();
        var n = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        var i = t2(5902);
        var o = n(t2(7402));
        var s = n(t2(5896));
        var u = function(e3) {
          a(TextNode, e3);
          function TextNode(r3, t3, a2) {
            var n2 = e3.call(this, t3, a2) || this;
            n2.nodeType = s.default.TEXT_NODE;
            n2._rawText = r3;
            return n2;
          }
          TextNode.prototype.clone = function() {
            return new TextNode(this._rawText, null);
          };
          Object.defineProperty(TextNode.prototype, "rawText", { get: function() {
            return this._rawText;
          }, set: function(e4) {
            this._rawText = e4;
            this._trimmedRawText = void 0;
            this._trimmedText = void 0;
          }, enumerable: false, configurable: true });
          Object.defineProperty(TextNode.prototype, "trimmedRawText", { get: function() {
            if (this._trimmedRawText !== void 0) return this._trimmedRawText;
            this._trimmedRawText = trimText(this.rawText);
            return this._trimmedRawText;
          }, enumerable: false, configurable: true });
          Object.defineProperty(TextNode.prototype, "trimmedText", { get: function() {
            if (this._trimmedText !== void 0) return this._trimmedText;
            this._trimmedText = trimText(this.text);
            return this._trimmedText;
          }, enumerable: false, configurable: true });
          Object.defineProperty(TextNode.prototype, "text", { get: function() {
            return (0, i.decode)(this.rawText);
          }, enumerable: false, configurable: true });
          Object.defineProperty(TextNode.prototype, "isWhitespace", { get: function() {
            return /^(\s|&nbsp;)*$/.test(this.rawText);
          }, enumerable: false, configurable: true });
          TextNode.prototype.toString = function() {
            return this.rawText;
          };
          return TextNode;
        }(o.default);
        r2["default"] = u;
        function trimText(e3) {
          var r3 = 0;
          var t3;
          var a2;
          while (r3 >= 0 && r3 < e3.length) {
            if (/\S/.test(e3[r3])) {
              if (t3 === void 0) {
                t3 = r3;
                r3 = e3.length;
              } else {
                a2 = r3;
                r3 = void 0;
              }
            }
            if (t3 === void 0) r3++;
            else r3--;
          }
          if (t3 === void 0) t3 = 0;
          if (a2 === void 0) a2 = e3.length - 1;
          var n2 = t3 > 0 && /[^\S\r\n]/.test(e3[t3 - 1]);
          var i2 = a2 < e3.length - 1 && /[^\S\r\n]/.test(e3[a2 + 1]);
          return (n2 ? " " : "") + e3.slice(t3, a2 + 1) + (i2 ? " " : "");
        }
      }, 5896: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        var t2;
        (function(e3) {
          e3[e3["ELEMENT_NODE"] = 1] = "ELEMENT_NODE";
          e3[e3["TEXT_NODE"] = 3] = "TEXT_NODE";
          e3[e3["COMMENT_NODE"] = 8] = "COMMENT_NODE";
        })(t2 || (t2 = {}));
        r2["default"] = t2;
      }, 8653: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2["default"] = void 0;
        var a = t2(3248);
        Object.defineProperty(r2, "default", { enumerable: true, get: function() {
          return a.parse;
        } });
      }, 3494: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        var a = t2(3248);
        function valid(e3, r3) {
          if (r3 === void 0) {
            r3 = { lowerCaseTagName: false, comment: false };
          }
          var t3 = (0, a.base_parse)(e3, r3);
          return Boolean(t3.length === 1);
        }
        r2["default"] = valid;
      }, 3947: function(e2, r2, t2) {
        "use strict";
        var a = this && this.__importDefault || function(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        };
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.generate = r2.compile = void 0;
        var n = a(t2(2947));
        function compile(e3) {
          var r3 = e3[0];
          var t3 = e3[1] - 1;
          if (t3 < 0 && r3 <= 0) return n.default.falseFunc;
          if (r3 === -1) return function(e4) {
            return e4 <= t3;
          };
          if (r3 === 0) return function(e4) {
            return e4 === t3;
          };
          if (r3 === 1) return t3 < 0 ? n.default.trueFunc : function(e4) {
            return e4 >= t3;
          };
          var a2 = Math.abs(r3);
          var i = (t3 % a2 + a2) % a2;
          return r3 > 1 ? function(e4) {
            return e4 >= t3 && e4 % a2 === i;
          } : function(e4) {
            return e4 <= t3 && e4 % a2 === i;
          };
        }
        r2.compile = compile;
        function generate(e3) {
          var r3 = e3[0];
          var t3 = e3[1] - 1;
          var a2 = 0;
          if (r3 < 0) {
            var n2 = -r3;
            var i = (t3 % n2 + n2) % n2;
            return function() {
              var e4 = i + n2 * a2++;
              return e4 > t3 ? null : e4;
            };
          }
          if (r3 === 0) return t3 < 0 ? function() {
            return null;
          } : function() {
            return a2++ === 0 ? t3 : null;
          };
          if (t3 < 0) {
            t3 += r3 * Math.ceil(-t3 / r3);
          }
          return function() {
            return r3 * a2++ + t3;
          };
        }
        r2.generate = generate;
      }, 7118: function(e2, r2, t2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.sequence = r2.generate = r2.compile = r2.parse = void 0;
        var a = t2(2421);
        Object.defineProperty(r2, "parse", { enumerable: true, get: function() {
          return a.parse;
        } });
        var n = t2(3947);
        Object.defineProperty(r2, "compile", { enumerable: true, get: function() {
          return n.compile;
        } });
        Object.defineProperty(r2, "generate", { enumerable: true, get: function() {
          return n.generate;
        } });
        function nthCheck(e3) {
          return (0, n.compile)((0, a.parse)(e3));
        }
        r2["default"] = nthCheck;
        function sequence(e3) {
          return (0, n.generate)((0, a.parse)(e3));
        }
        r2.sequence = sequence;
      }, 2421: function(e2, r2) {
        "use strict";
        Object.defineProperty(r2, "__esModule", { value: true });
        r2.parse = void 0;
        var t2 = /* @__PURE__ */ new Set([9, 10, 12, 13, 32]);
        var a = "0".charCodeAt(0);
        var n = "9".charCodeAt(0);
        function parse(e3) {
          e3 = e3.trim().toLowerCase();
          if (e3 === "even") {
            return [2, 0];
          } else if (e3 === "odd") {
            return [2, 1];
          }
          var r3 = 0;
          var i = 0;
          var o = readSign();
          var s = readNumber();
          if (r3 < e3.length && e3.charAt(r3) === "n") {
            r3++;
            i = o * (s !== null && s !== void 0 ? s : 1);
            skipWhitespace();
            if (r3 < e3.length) {
              o = readSign();
              skipWhitespace();
              s = readNumber();
            } else {
              o = s = 0;
            }
          }
          if (s === null || r3 < e3.length) {
            throw new Error("n-th rule couldn't be parsed ('".concat(e3, "')"));
          }
          return [i, o * s];
          function readSign() {
            if (e3.charAt(r3) === "-") {
              r3++;
              return -1;
            }
            if (e3.charAt(r3) === "+") {
              r3++;
            }
            return 1;
          }
          function readNumber() {
            var t3 = r3;
            var i2 = 0;
            while (r3 < e3.length && e3.charCodeAt(r3) >= a && e3.charCodeAt(r3) <= n) {
              i2 = i2 * 10 + (e3.charCodeAt(r3) - a);
              r3++;
            }
            return r3 === t3 ? null : i2;
          }
          function skipWhitespace() {
            while (r3 < e3.length && t2.has(e3.charCodeAt(r3))) {
              r3++;
            }
          }
        }
        r2.parse = parse;
      }, 7971: function(e2) {
        "use strict";
        e2.exports = JSON.parse('{"0":65533,"128":8364,"130":8218,"131":402,"132":8222,"133":8230,"134":8224,"135":8225,"136":710,"137":8240,"138":352,"139":8249,"140":338,"142":381,"145":8216,"146":8217,"147":8220,"148":8221,"149":8226,"150":8211,"151":8212,"152":732,"153":8482,"154":353,"155":8250,"156":339,"158":382,"159":376}');
      }, 1859: function(e2) {
        "use strict";
        e2.exports = JSON.parse('{"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"\'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\\"","QUOT":"\\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"}');
      }, 2128: function(e2) {
        "use strict";
        e2.exports = JSON.parse('{"Aacute":"Á","aacute":"á","Acirc":"Â","acirc":"â","acute":"´","AElig":"Æ","aelig":"æ","Agrave":"À","agrave":"à","amp":"&","AMP":"&","Aring":"Å","aring":"å","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","brvbar":"¦","Ccedil":"Ç","ccedil":"ç","cedil":"¸","cent":"¢","copy":"©","COPY":"©","curren":"¤","deg":"°","divide":"÷","Eacute":"É","eacute":"é","Ecirc":"Ê","ecirc":"ê","Egrave":"È","egrave":"è","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","frac12":"½","frac14":"¼","frac34":"¾","gt":">","GT":">","Iacute":"Í","iacute":"í","Icirc":"Î","icirc":"î","iexcl":"¡","Igrave":"Ì","igrave":"ì","iquest":"¿","Iuml":"Ï","iuml":"ï","laquo":"«","lt":"<","LT":"<","macr":"¯","micro":"µ","middot":"·","nbsp":" ","not":"¬","Ntilde":"Ñ","ntilde":"ñ","Oacute":"Ó","oacute":"ó","Ocirc":"Ô","ocirc":"ô","Ograve":"Ò","ograve":"ò","ordf":"ª","ordm":"º","Oslash":"Ø","oslash":"ø","Otilde":"Õ","otilde":"õ","Ouml":"Ö","ouml":"ö","para":"¶","plusmn":"±","pound":"£","quot":"\\"","QUOT":"\\"","raquo":"»","reg":"®","REG":"®","sect":"§","shy":"­","sup1":"¹","sup2":"²","sup3":"³","szlig":"ß","THORN":"Þ","thorn":"þ","times":"×","Uacute":"Ú","uacute":"ú","Ucirc":"Û","ucirc":"û","Ugrave":"Ù","ugrave":"ù","uml":"¨","Uuml":"Ü","uuml":"ü","Yacute":"Ý","yacute":"ý","yen":"¥","yuml":"ÿ"}');
      }, 4931: function(e2) {
        "use strict";
        e2.exports = JSON.parse(`{"amp":"&","apos":"'","gt":">","lt":"<","quot":"\\""}`);
      } };
      var r = {};
      function __nccwpck_require__2(t2) {
        var a = r[t2];
        if (a !== void 0) {
          return a.exports;
        }
        var n = r[t2] = { id: t2, loaded: false, exports: {} };
        var i = true;
        try {
          e[t2].call(n.exports, n, n.exports, __nccwpck_require__2);
          i = false;
        } finally {
          if (i) delete r[t2];
        }
        n.loaded = true;
        return n.exports;
      }
      !function() {
        __nccwpck_require__2.nmd = function(e2) {
          e2.paths = [];
          if (!e2.children) e2.children = [];
          return e2;
        };
      }();
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var t = __nccwpck_require__2(5417);
      module2.exports = t;
    })();
  }
});

// ../../../node_modules/next/dist/server/send-payload.js
var require_send_payload = __commonJS({
  "../../../node_modules/next/dist/server/send-payload.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      sendEtagResponse: function() {
        return sendEtagResponse;
      },
      sendRenderResult: function() {
        return sendRenderResult;
      }
    });
    var _utils = require_utils2();
    var _etag = require_etag();
    var _fresh = _interop_require_default(require_fresh());
    var _revalidate = require_revalidate();
    var _approuterheaders = require_app_router_headers();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function sendEtagResponse(req, res, etag) {
      if (etag) {
        res.setHeader("ETag", etag);
      }
      if ((0, _fresh.default)(req.headers, {
        etag
      })) {
        res.statusCode = 304;
        res.end();
        return true;
      }
      return false;
    }
    async function sendRenderResult({ req, res, result, type, generateEtags, poweredByHeader, revalidate, swrDelta }) {
      if ((0, _utils.isResSent)(res)) {
        return;
      }
      if (poweredByHeader && type === "html") {
        res.setHeader("X-Powered-By", "Next.js");
      }
      if (typeof revalidate !== "undefined" && !res.getHeader("Cache-Control")) {
        res.setHeader("Cache-Control", (0, _revalidate.formatRevalidate)({
          revalidate,
          swrDelta
        }));
      }
      const payload = result.isDynamic ? null : result.toUnchunkedString();
      if (payload !== null) {
        let etagPayload = payload;
        if (type === "rsc") {
          etagPayload = payload.split("\n").sort().join("\n");
        } else if (type === "html" && payload.includes("__next_f")) {
          const { parse } = require_node_html_parser();
          try {
            var _root_querySelector;
            let root = parse(payload);
            let scriptTags = (_root_querySelector = root.querySelector("body")) == null ? void 0 : _root_querySelector.querySelectorAll("script").filter((node) => {
              var _node_innerHTML;
              return !node.hasAttribute("src") && ((_node_innerHTML = node.innerHTML) == null ? void 0 : _node_innerHTML.includes("__next_f"));
            });
            scriptTags == null ? void 0 : scriptTags.sort((a, b) => a.innerHTML.localeCompare(b.innerHTML));
            scriptTags == null ? void 0 : scriptTags.forEach((script) => script.remove());
            scriptTags == null ? void 0 : scriptTags.forEach((script) => {
              var _root_querySelector2;
              return (_root_querySelector2 = root.querySelector("body")) == null ? void 0 : _root_querySelector2.appendChild(script);
            });
            etagPayload = root.toString();
          } catch (err) {
            console.error(`Error parsing HTML payload`, err);
          }
        }
        const etag = generateEtags ? (0, _etag.generateETag)(etagPayload) : void 0;
        if (sendEtagResponse(req, res, etag)) {
          return;
        }
      }
      if (!res.getHeader("Content-Type")) {
        res.setHeader("Content-Type", result.contentType ? result.contentType : type === "rsc" ? _approuterheaders.RSC_CONTENT_TYPE_HEADER : type === "json" ? "application/json" : "text/html; charset=utf-8");
      }
      if (payload) {
        res.setHeader("Content-Length", Buffer.byteLength(payload));
      }
      if (req.method === "HEAD") {
        res.end(null);
        return;
      }
      if (payload !== null) {
        res.end(payload);
        return;
      }
      await result.pipeToNodeResponse(res);
    }
  }
});

// ../../../node_modules/next/dist/compiled/send/index.js
var require_send = __commonJS({
  "../../../node_modules/next/dist/compiled/send/index.js"(exports, module) {
    (() => {
      var __webpack_modules__ = { 989: (module, __unused_webpack_exports, __nccwpck_require__) => {
        var callSiteToString = __nccwpck_require__(477).callSiteToString;
        var eventListenerCount = __nccwpck_require__(477).eventListenerCount;
        var relative = __nccwpck_require__(17).relative;
        module.exports = depd;
        var basePath = process.cwd();
        function containsNamespace(e, t) {
          var a = e.split(/[ ,]+/);
          var i = String(t).toLowerCase();
          for (var n = 0; n < a.length; n++) {
            var r = a[n];
            if (r && (r === "*" || r.toLowerCase() === i)) {
              return true;
            }
          }
          return false;
        }
        function convertDataDescriptorToAccessor(e, t, a) {
          var i = Object.getOwnPropertyDescriptor(e, t);
          var n = i.value;
          i.get = function getter() {
            return n;
          };
          if (i.writable) {
            i.set = function setter(e2) {
              return n = e2;
            };
          }
          delete i.value;
          delete i.writable;
          Object.defineProperty(e, t, i);
          return i;
        }
        function createArgumentsString(e) {
          var t = "";
          for (var a = 0; a < e; a++) {
            t += ", arg" + a;
          }
          return t.substr(2);
        }
        function createStackString(e) {
          var t = this.name + ": " + this.namespace;
          if (this.message) {
            t += " deprecated " + this.message;
          }
          for (var a = 0; a < e.length; a++) {
            t += "\n    at " + callSiteToString(e[a]);
          }
          return t;
        }
        function depd(e) {
          if (!e) {
            throw new TypeError("argument namespace is required");
          }
          var t = getStack();
          var a = callSiteLocation(t[1]);
          var i = a[0];
          function deprecate2(e2) {
            log.call(deprecate2, e2);
          }
          deprecate2._file = i;
          deprecate2._ignored = isignored(e);
          deprecate2._namespace = e;
          deprecate2._traced = istraced(e);
          deprecate2._warned = /* @__PURE__ */ Object.create(null);
          deprecate2.function = wrapfunction;
          deprecate2.property = wrapproperty;
          return deprecate2;
        }
        function isignored(e) {
          if (process.noDeprecation) {
            return true;
          }
          var t = process.env.NO_DEPRECATION || "";
          return containsNamespace(t, e);
        }
        function istraced(e) {
          if (process.traceDeprecation) {
            return true;
          }
          var t = process.env.TRACE_DEPRECATION || "";
          return containsNamespace(t, e);
        }
        function log(e, t) {
          var a = eventListenerCount(process, "deprecation") !== 0;
          if (!a && this._ignored) {
            return;
          }
          var i;
          var n;
          var r;
          var o;
          var p = 0;
          var s = false;
          var c = getStack();
          var l = this._file;
          if (t) {
            o = t;
            r = callSiteLocation(c[1]);
            r.name = o.name;
            l = r[0];
          } else {
            p = 2;
            o = callSiteLocation(c[p]);
            r = o;
          }
          for (; p < c.length; p++) {
            i = callSiteLocation(c[p]);
            n = i[0];
            if (n === l) {
              s = true;
            } else if (n === this._file) {
              l = this._file;
            } else if (s) {
              break;
            }
          }
          var d = i ? o.join(":") + "__" + i.join(":") : void 0;
          if (d !== void 0 && d in this._warned) {
            return;
          }
          this._warned[d] = true;
          var m = e;
          if (!m) {
            m = r === o || !r.name ? defaultMessage(o) : defaultMessage(r);
          }
          if (a) {
            var u = DeprecationError(this._namespace, m, c.slice(p));
            process.emit("deprecation", u);
            return;
          }
          var v = process.stderr.isTTY ? formatColor : formatPlain;
          var f = v.call(this, m, i, c.slice(p));
          process.stderr.write(f + "\n", "utf8");
        }
        function callSiteLocation(e) {
          var t = e.getFileName() || "<anonymous>";
          var a = e.getLineNumber();
          var i = e.getColumnNumber();
          if (e.isEval()) {
            t = e.getEvalOrigin() + ", " + t;
          }
          var n = [t, a, i];
          n.callSite = e;
          n.name = e.getFunctionName();
          return n;
        }
        function defaultMessage(e) {
          var t = e.callSite;
          var a = e.name;
          if (!a) {
            a = "<anonymous@" + formatLocation(e) + ">";
          }
          var i = t.getThis();
          var n = i && t.getTypeName();
          if (n === "Object") {
            n = void 0;
          }
          if (n === "Function") {
            n = i.name || n;
          }
          return n && t.getMethodName() ? n + "." + a : a;
        }
        function formatPlain(e, t, a) {
          var i = (/* @__PURE__ */ new Date()).toUTCString();
          var n = i + " " + this._namespace + " deprecated " + e;
          if (this._traced) {
            for (var r = 0; r < a.length; r++) {
              n += "\n    at " + callSiteToString(a[r]);
            }
            return n;
          }
          if (t) {
            n += " at " + formatLocation(t);
          }
          return n;
        }
        function formatColor(e, t, a) {
          var i = "\x1B[36;1m" + this._namespace + "\x1B[22;39m \x1B[33;1mdeprecated\x1B[22;39m \x1B[0m" + e + "\x1B[39m";
          if (this._traced) {
            for (var n = 0; n < a.length; n++) {
              i += "\n    \x1B[36mat " + callSiteToString(a[n]) + "\x1B[39m";
            }
            return i;
          }
          if (t) {
            i += " \x1B[36m" + formatLocation(t) + "\x1B[39m";
          }
          return i;
        }
        function formatLocation(e) {
          return relative(basePath, e[0]) + ":" + e[1] + ":" + e[2];
        }
        function getStack() {
          var e = Error.stackTraceLimit;
          var t = {};
          var a = Error.prepareStackTrace;
          Error.prepareStackTrace = prepareObjectStackTrace;
          Error.stackTraceLimit = Math.max(10, e);
          Error.captureStackTrace(t);
          var i = t.stack.slice(1);
          Error.prepareStackTrace = a;
          Error.stackTraceLimit = e;
          return i;
        }
        function prepareObjectStackTrace(e, t) {
          return t;
        }
        function wrapfunction(fn, message) {
          if (typeof fn !== "function") {
            throw new TypeError("argument fn must be a function");
          }
          var args = createArgumentsString(fn.length);
          var deprecate = this;
          var stack = getStack();
          var site = callSiteLocation(stack[1]);
          site.name = fn.name;
          var deprecatedfn = eval("(function (" + args + ') {\n"use strict"\nlog.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n})');
          return deprecatedfn;
        }
        function wrapproperty(e, t, a) {
          if (!e || typeof e !== "object" && typeof e !== "function") {
            throw new TypeError("argument obj must be object");
          }
          var i = Object.getOwnPropertyDescriptor(e, t);
          if (!i) {
            throw new TypeError("must call property on owner object");
          }
          if (!i.configurable) {
            throw new TypeError("property must be configurable");
          }
          var n = this;
          var r = getStack();
          var o = callSiteLocation(r[1]);
          o.name = t;
          if ("value" in i) {
            i = convertDataDescriptorToAccessor(e, t, a);
          }
          var p = i.get;
          var s = i.set;
          if (typeof p === "function") {
            i.get = function getter() {
              log.call(n, a, o);
              return p.apply(this, arguments);
            };
          }
          if (typeof s === "function") {
            i.set = function setter() {
              log.call(n, a, o);
              return s.apply(this, arguments);
            };
          }
          Object.defineProperty(e, t, i);
        }
        function DeprecationError(e, t, a) {
          var i = new Error();
          var n;
          Object.defineProperty(i, "constructor", { value: DeprecationError });
          Object.defineProperty(i, "message", { configurable: true, enumerable: false, value: t, writable: true });
          Object.defineProperty(i, "name", { enumerable: false, configurable: true, value: "DeprecationError", writable: true });
          Object.defineProperty(i, "namespace", { configurable: true, enumerable: false, value: e, writable: true });
          Object.defineProperty(i, "stack", { configurable: true, enumerable: false, get: function() {
            if (n !== void 0) {
              return n;
            }
            return n = createStackString.call(this, a);
          }, set: function setter(e2) {
            n = e2;
          } });
          return i;
        }
      }, 634: (e) => {
        "use strict";
        e.exports = callSiteToString2;
        function callSiteFileLocation(e2) {
          var t;
          var a = "";
          if (e2.isNative()) {
            a = "native";
          } else if (e2.isEval()) {
            t = e2.getScriptNameOrSourceURL();
            if (!t) {
              a = e2.getEvalOrigin();
            }
          } else {
            t = e2.getFileName();
          }
          if (t) {
            a += t;
            var i = e2.getLineNumber();
            if (i != null) {
              a += ":" + i;
              var n = e2.getColumnNumber();
              if (n) {
                a += ":" + n;
              }
            }
          }
          return a || "unknown source";
        }
        function callSiteToString2(e2) {
          var t = true;
          var a = callSiteFileLocation(e2);
          var i = e2.getFunctionName();
          var n = e2.isConstructor();
          var r = !(e2.isToplevel() || n);
          var o = "";
          if (r) {
            var p = e2.getMethodName();
            var s = getConstructorName(e2);
            if (i) {
              if (s && i.indexOf(s) !== 0) {
                o += s + ".";
              }
              o += i;
              if (p && i.lastIndexOf("." + p) !== i.length - p.length - 1) {
                o += " [as " + p + "]";
              }
            } else {
              o += s + "." + (p || "<anonymous>");
            }
          } else if (n) {
            o += "new " + (i || "<anonymous>");
          } else if (i) {
            o += i;
          } else {
            t = false;
            o += a;
          }
          if (t) {
            o += " (" + a + ")";
          }
          return o;
        }
        function getConstructorName(e2) {
          var t = e2.receiver;
          return t.constructor && t.constructor.name || null;
        }
      }, 711: (e) => {
        "use strict";
        e.exports = eventListenerCount2;
        function eventListenerCount2(e2, t) {
          return e2.listeners(t).length;
        }
      }, 477: (e, t, a) => {
        "use strict";
        var i = a(361).EventEmitter;
        lazyProperty(e.exports, "callSiteToString", function callSiteToString2() {
          var e2 = Error.stackTraceLimit;
          var t2 = {};
          var i2 = Error.prepareStackTrace;
          function prepareObjectStackTrace2(e3, t3) {
            return t3;
          }
          Error.prepareStackTrace = prepareObjectStackTrace2;
          Error.stackTraceLimit = 2;
          Error.captureStackTrace(t2);
          var n = t2.stack.slice();
          Error.prepareStackTrace = i2;
          Error.stackTraceLimit = e2;
          return n[0].toString ? toString : a(634);
        });
        lazyProperty(e.exports, "eventListenerCount", function eventListenerCount2() {
          return i.listenerCount || a(711);
        });
        function lazyProperty(e2, t2, a2) {
          function get() {
            var i2 = a2();
            Object.defineProperty(e2, t2, { configurable: true, enumerable: true, value: i2 });
            return i2;
          }
          Object.defineProperty(e2, t2, { configurable: true, enumerable: true, get });
        }
        function toString(e2) {
          return e2.toString();
        }
      }, 641: (e, t, a) => {
        "use strict";
        var i = a(147).ReadStream;
        var n = a(781);
        e.exports = destroy;
        function destroy(e2) {
          if (e2 instanceof i) {
            return destroyReadStream(e2);
          }
          if (!(e2 instanceof n)) {
            return e2;
          }
          if (typeof e2.destroy === "function") {
            e2.destroy();
          }
          return e2;
        }
        function destroyReadStream(e2) {
          e2.destroy();
          if (typeof e2.close === "function") {
            e2.on("open", onOpenClose);
          }
          return e2;
        }
        function onOpenClose() {
          if (typeof this.fd === "number") {
            this.close();
          }
        }
      }, 481: (e) => {
        "use strict";
        e.exports = first;
        function first(e2, t) {
          if (!Array.isArray(e2)) throw new TypeError("arg must be an array of [ee, events...] arrays");
          var a = [];
          for (var i = 0; i < e2.length; i++) {
            var n = e2[i];
            if (!Array.isArray(n) || n.length < 2) throw new TypeError("each array member must be [ee, events...]");
            var r = n[0];
            for (var o = 1; o < n.length; o++) {
              var p = n[o];
              var s = listener(p, callback);
              r.on(p, s);
              a.push({ ee: r, event: p, fn: s });
            }
          }
          function callback() {
            cleanup();
            t.apply(null, arguments);
          }
          function cleanup() {
            var e3;
            for (var t2 = 0; t2 < a.length; t2++) {
              e3 = a[t2];
              e3.ee.removeListener(e3.event, e3.fn);
            }
          }
          function thunk(e3) {
            t = e3;
          }
          thunk.cancel = cleanup;
          return thunk;
        }
        function listener(e2, t) {
          return function onevent(a) {
            var i = new Array(arguments.length);
            var n = this;
            var r = e2 === "error" ? a : null;
            for (var o = 0; o < i.length; o++) {
              i[o] = arguments[o];
            }
            t(r, n, e2, i);
          };
        }
      }, 927: (e) => {
        "use strict";
        e.exports = encodeUrl;
        var t = /(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;
        var a = /(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g;
        var i = "$1�$2";
        function encodeUrl(e2) {
          return String(e2).replace(a, i).replace(t, encodeURI);
        }
      }, 354: (e) => {
        "use strict";
        var t = /["'&<>]/;
        e.exports = escapeHtml;
        function escapeHtml(e2) {
          var a = "" + e2;
          var i = t.exec(a);
          if (!i) {
            return a;
          }
          var n;
          var r = "";
          var o = 0;
          var p = 0;
          for (o = i.index; o < a.length; o++) {
            switch (a.charCodeAt(o)) {
              case 34:
                n = "&quot;";
                break;
              case 38:
                n = "&amp;";
                break;
              case 39:
                n = "&#39;";
                break;
              case 60:
                n = "&lt;";
                break;
              case 62:
                n = "&gt;";
                break;
              default:
                continue;
            }
            if (p !== o) {
              r += a.substring(p, o);
            }
            p = o + 1;
            r += n;
          }
          return p !== o ? r + a.substring(p, o) : r;
        }
      }, 516: (e, t, a) => {
        "use strict";
        e.exports = etag;
        var i = a(113);
        var n = a(147).Stats;
        var r = Object.prototype.toString;
        function entitytag(e2) {
          if (e2.length === 0) {
            return '"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"';
          }
          var t2 = i.createHash("sha1").update(e2, "utf8").digest("base64").substring(0, 27);
          var a2 = typeof e2 === "string" ? Buffer.byteLength(e2, "utf8") : e2.length;
          return '"' + a2.toString(16) + "-" + t2 + '"';
        }
        function etag(e2, t2) {
          if (e2 == null) {
            throw new TypeError("argument entity is required");
          }
          var a2 = isstats(e2);
          var i2 = t2 && typeof t2.weak === "boolean" ? t2.weak : a2;
          if (!a2 && typeof e2 !== "string" && !Buffer.isBuffer(e2)) {
            throw new TypeError("argument entity must be string, Buffer, or fs.Stats");
          }
          var n2 = a2 ? stattag(e2) : entitytag(e2);
          return i2 ? "W/" + n2 : n2;
        }
        function isstats(e2) {
          if (typeof n === "function" && e2 instanceof n) {
            return true;
          }
          return e2 && typeof e2 === "object" && "ctime" in e2 && r.call(e2.ctime) === "[object Date]" && "mtime" in e2 && r.call(e2.mtime) === "[object Date]" && "ino" in e2 && typeof e2.ino === "number" && "size" in e2 && typeof e2.size === "number";
        }
        function stattag(e2) {
          var t2 = e2.mtime.getTime().toString(16);
          var a2 = e2.size.toString(16);
          return '"' + a2 + "-" + t2 + '"';
        }
      }, 880: (e, t, a) => {
        "use strict";
        var i = a(989)("http-errors");
        var n = a(103);
        var r = a(590);
        var o = a(842);
        var p = a(26);
        e.exports = createError;
        e.exports.HttpError = createHttpErrorConstructor();
        populateConstructorExports(e.exports, r.codes, e.exports.HttpError);
        function codeClass(e2) {
          return Number(String(e2).charAt(0) + "00");
        }
        function createError() {
          var e2;
          var t2;
          var a2 = 500;
          var n2 = {};
          for (var o2 = 0; o2 < arguments.length; o2++) {
            var p2 = arguments[o2];
            if (p2 instanceof Error) {
              e2 = p2;
              a2 = e2.status || e2.statusCode || a2;
              continue;
            }
            switch (typeof p2) {
              case "string":
                t2 = p2;
                break;
              case "number":
                a2 = p2;
                if (o2 !== 0) {
                  i("non-first-argument status code; replace with createError(" + p2 + ", ...)");
                }
                break;
              case "object":
                n2 = p2;
                break;
            }
          }
          if (typeof a2 === "number" && (a2 < 400 || a2 >= 600)) {
            i("non-error status code; use only 4xx or 5xx status codes");
          }
          if (typeof a2 !== "number" || !r[a2] && (a2 < 400 || a2 >= 600)) {
            a2 = 500;
          }
          var s = createError[a2] || createError[codeClass(a2)];
          if (!e2) {
            e2 = s ? new s(t2) : new Error(t2 || r[a2]);
            Error.captureStackTrace(e2, createError);
          }
          if (!s || !(e2 instanceof s) || e2.status !== a2) {
            e2.expose = a2 < 500;
            e2.status = e2.statusCode = a2;
          }
          for (var c in n2) {
            if (c !== "status" && c !== "statusCode") {
              e2[c] = n2[c];
            }
          }
          return e2;
        }
        function createHttpErrorConstructor() {
          function HttpError() {
            throw new TypeError("cannot construct abstract class");
          }
          o(HttpError, Error);
          return HttpError;
        }
        function createClientErrorConstructor(e2, t2, a2) {
          var i2 = t2.match(/Error$/) ? t2 : t2 + "Error";
          function ClientError(e3) {
            var t3 = e3 != null ? e3 : r[a2];
            var o2 = new Error(t3);
            Error.captureStackTrace(o2, ClientError);
            n(o2, ClientError.prototype);
            Object.defineProperty(o2, "message", { enumerable: true, configurable: true, value: t3, writable: true });
            Object.defineProperty(o2, "name", { enumerable: false, configurable: true, value: i2, writable: true });
            return o2;
          }
          o(ClientError, e2);
          nameFunc(ClientError, i2);
          ClientError.prototype.status = a2;
          ClientError.prototype.statusCode = a2;
          ClientError.prototype.expose = true;
          return ClientError;
        }
        function createServerErrorConstructor(e2, t2, a2) {
          var i2 = t2.match(/Error$/) ? t2 : t2 + "Error";
          function ServerError(e3) {
            var t3 = e3 != null ? e3 : r[a2];
            var o2 = new Error(t3);
            Error.captureStackTrace(o2, ServerError);
            n(o2, ServerError.prototype);
            Object.defineProperty(o2, "message", { enumerable: true, configurable: true, value: t3, writable: true });
            Object.defineProperty(o2, "name", { enumerable: false, configurable: true, value: i2, writable: true });
            return o2;
          }
          o(ServerError, e2);
          nameFunc(ServerError, i2);
          ServerError.prototype.status = a2;
          ServerError.prototype.statusCode = a2;
          ServerError.prototype.expose = false;
          return ServerError;
        }
        function nameFunc(e2, t2) {
          var a2 = Object.getOwnPropertyDescriptor(e2, "name");
          if (a2 && a2.configurable) {
            a2.value = t2;
            Object.defineProperty(e2, "name", a2);
          }
        }
        function populateConstructorExports(e2, t2, a2) {
          t2.forEach(function forEachCode(t3) {
            var i2;
            var n2 = p(r[t3]);
            switch (codeClass(t3)) {
              case 400:
                i2 = createClientErrorConstructor(a2, n2, t3);
                break;
              case 500:
                i2 = createServerErrorConstructor(a2, n2, t3);
                break;
            }
            if (i2) {
              e2[t3] = i2;
              e2[n2] = i2;
            }
          });
          e2["I'mateapot"] = i.function(e2.ImATeapot, `"I'mateapot"; use "ImATeapot" instead`);
        }
      }, 842: (e, t, a) => {
        try {
          var i = a(837);
          if (typeof i.inherits !== "function") throw "";
          e.exports = i.inherits;
        } catch (t2) {
          e.exports = a(782);
        }
      }, 782: (e) => {
        if (typeof Object.create === "function") {
          e.exports = function inherits(e2, t) {
            if (t) {
              e2.super_ = t;
              e2.prototype = Object.create(t.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } });
            }
          };
        } else {
          e.exports = function inherits(e2, t) {
            if (t) {
              e2.super_ = t;
              var TempCtor = function() {
              };
              TempCtor.prototype = t.prototype;
              e2.prototype = new TempCtor();
              e2.prototype.constructor = e2;
            }
          };
        }
      }, 396: (e, t, a) => {
        var i = a(17);
        var n = a(147);
        function Mime() {
          this.types = /* @__PURE__ */ Object.create(null);
          this.extensions = /* @__PURE__ */ Object.create(null);
        }
        Mime.prototype.define = function(e2) {
          for (var t2 in e2) {
            var a2 = e2[t2];
            for (var i2 = 0; i2 < a2.length; i2++) {
              if (process.env.DEBUG_MIME && this.types[a2[i2]]) {
                console.warn((this._loading || "define()").replace(/.*\//, ""), 'changes "' + a2[i2] + '" extension type from ' + this.types[a2[i2]] + " to " + t2);
              }
              this.types[a2[i2]] = t2;
            }
            if (!this.extensions[t2]) {
              this.extensions[t2] = a2[0];
            }
          }
        };
        Mime.prototype.load = function(e2) {
          this._loading = e2;
          var t2 = {}, a2 = n.readFileSync(e2, "ascii"), i2 = a2.split(/[\r\n]+/);
          i2.forEach(function(e3) {
            var a3 = e3.replace(/\s*#.*|^\s*|\s*$/g, "").split(/\s+/);
            t2[a3.shift()] = a3;
          });
          this.define(t2);
          this._loading = null;
        };
        Mime.prototype.lookup = function(e2, t2) {
          var a2 = e2.replace(/^.*[\.\/\\]/, "").toLowerCase();
          return this.types[a2] || t2 || this.default_type;
        };
        Mime.prototype.extension = function(e2) {
          var t2 = e2.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();
          return this.extensions[t2];
        };
        var r = new Mime();
        r.define(a(598));
        r.default_type = r.lookup("bin");
        r.Mime = Mime;
        r.charsets = { lookup: function(e2, t2) {
          return /^text\/|^application\/(javascript|json)/.test(e2) ? "UTF-8" : t2;
        } };
        e.exports = r;
      }, 79: (e) => {
        var t = 1e3;
        var a = t * 60;
        var i = a * 60;
        var n = i * 24;
        var r = n * 7;
        var o = n * 365.25;
        e.exports = function(e2, t2) {
          t2 = t2 || {};
          var a2 = typeof e2;
          if (a2 === "string" && e2.length > 0) {
            return parse(e2);
          } else if (a2 === "number" && isNaN(e2) === false) {
            return t2.long ? fmtLong(e2) : fmtShort(e2);
          }
          throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e2));
        };
        function parse(e2) {
          e2 = String(e2);
          if (e2.length > 100) {
            return;
          }
          var p = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e2);
          if (!p) {
            return;
          }
          var s = parseFloat(p[1]);
          var c = (p[2] || "ms").toLowerCase();
          switch (c) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return s * o;
            case "weeks":
            case "week":
            case "w":
              return s * r;
            case "days":
            case "day":
            case "d":
              return s * n;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return s * i;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return s * a;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return s * t;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return s;
            default:
              return void 0;
          }
        }
        function fmtShort(e2) {
          var r2 = Math.abs(e2);
          if (r2 >= n) {
            return Math.round(e2 / n) + "d";
          }
          if (r2 >= i) {
            return Math.round(e2 / i) + "h";
          }
          if (r2 >= a) {
            return Math.round(e2 / a) + "m";
          }
          if (r2 >= t) {
            return Math.round(e2 / t) + "s";
          }
          return e2 + "ms";
        }
        function fmtLong(e2) {
          var r2 = Math.abs(e2);
          if (r2 >= n) {
            return plural(e2, r2, n, "day");
          }
          if (r2 >= i) {
            return plural(e2, r2, i, "hour");
          }
          if (r2 >= a) {
            return plural(e2, r2, a, "minute");
          }
          if (r2 >= t) {
            return plural(e2, r2, t, "second");
          }
          return e2 + " ms";
        }
        function plural(e2, t2, a2, i2) {
          var n2 = t2 >= a2 * 1.5;
          return Math.round(e2 / a2) + " " + i2 + (n2 ? "s" : "");
        }
      }, 40: (e, t, a) => {
        "use strict";
        e.exports = onFinished;
        e.exports.isFinished = isFinished;
        var i = a(481);
        var n = typeof setImmediate === "function" ? setImmediate : function(e2) {
          process.nextTick(e2.bind.apply(e2, arguments));
        };
        function onFinished(e2, t2) {
          if (isFinished(e2) !== false) {
            n(t2, null, e2);
            return e2;
          }
          attachListener(e2, t2);
          return e2;
        }
        function isFinished(e2) {
          var t2 = e2.socket;
          if (typeof e2.finished === "boolean") {
            return Boolean(e2.finished || t2 && !t2.writable);
          }
          if (typeof e2.complete === "boolean") {
            return Boolean(e2.upgrade || !t2 || !t2.readable || e2.complete && !e2.readable);
          }
          return void 0;
        }
        function attachFinishedListener(e2, t2) {
          var a2;
          var n2;
          var r = false;
          function onFinish(e3) {
            a2.cancel();
            n2.cancel();
            r = true;
            t2(e3);
          }
          a2 = n2 = i([[e2, "end", "finish"]], onFinish);
          function onSocket(t3) {
            e2.removeListener("socket", onSocket);
            if (r) return;
            if (a2 !== n2) return;
            n2 = i([[t3, "error", "close"]], onFinish);
          }
          if (e2.socket) {
            onSocket(e2.socket);
            return;
          }
          e2.on("socket", onSocket);
          if (e2.socket === void 0) {
            patchAssignSocket(e2, onSocket);
          }
        }
        function attachListener(e2, t2) {
          var a2 = e2.__onFinished;
          if (!a2 || !a2.queue) {
            a2 = e2.__onFinished = createListener(e2);
            attachFinishedListener(e2, a2);
          }
          a2.queue.push(t2);
        }
        function createListener(e2) {
          function listener(t2) {
            if (e2.__onFinished === listener) e2.__onFinished = null;
            if (!listener.queue) return;
            var a2 = listener.queue;
            listener.queue = null;
            for (var i2 = 0; i2 < a2.length; i2++) {
              a2[i2](t2, e2);
            }
          }
          listener.queue = [];
          return listener;
        }
        function patchAssignSocket(e2, t2) {
          var a2 = e2.assignSocket;
          if (typeof a2 !== "function") return;
          e2.assignSocket = function _assignSocket(e3) {
            a2.call(this, e3);
            t2(e3);
          };
        }
      }, 953: (e) => {
        "use strict";
        e.exports = rangeParser;
        function rangeParser(e2, t, a) {
          if (typeof t !== "string") {
            throw new TypeError("argument str must be a string");
          }
          var i = t.indexOf("=");
          if (i === -1) {
            return -2;
          }
          var n = t.slice(i + 1).split(",");
          var r = [];
          r.type = t.slice(0, i);
          for (var o = 0; o < n.length; o++) {
            var p = n[o].split("-");
            var s = parseInt(p[0], 10);
            var c = parseInt(p[1], 10);
            if (isNaN(s)) {
              s = e2 - c;
              c = e2 - 1;
            } else if (isNaN(c)) {
              c = e2 - 1;
            }
            if (c > e2 - 1) {
              c = e2 - 1;
            }
            if (isNaN(s) || isNaN(c) || s > c || s < 0) {
              continue;
            }
            r.push({ start: s, end: c });
          }
          if (r.length < 1) {
            return -1;
          }
          return a && a.combine ? combineRanges(r) : r;
        }
        function combineRanges(e2) {
          var t = e2.map(mapWithIndex).sort(sortByRangeStart);
          for (var a = 0, i = 1; i < t.length; i++) {
            var n = t[i];
            var r = t[a];
            if (n.start > r.end + 1) {
              t[++a] = n;
            } else if (n.end > r.end) {
              r.end = n.end;
              r.index = Math.min(r.index, n.index);
            }
          }
          t.length = a + 1;
          var o = t.sort(sortByRangeIndex).map(mapWithoutIndex);
          o.type = e2.type;
          return o;
        }
        function mapWithIndex(e2, t) {
          return { start: e2.start, end: e2.end, index: t };
        }
        function mapWithoutIndex(e2) {
          return { start: e2.start, end: e2.end };
        }
        function sortByRangeIndex(e2, t) {
          return e2.index - t.index;
        }
        function sortByRangeStart(e2, t) {
          return e2.start - t.start;
        }
      }, 701: (e, t, a) => {
        "use strict";
        var i = a(880);
        var n = a(937)("send");
        var r = a(989)("send");
        var o = a(641);
        var p = a(927);
        var s = a(354);
        var c = a(516);
        var l = a(890);
        var d = a(147);
        var m = a(396);
        var u = a(79);
        var v = a(40);
        var f = a(953);
        var x = a(17);
        var g = a(590);
        var h = a(781);
        var b = a(837);
        var y = x.extname;
        var w = x.join;
        var k = x.normalize;
        var S = x.resolve;
        var _ = x.sep;
        var j = /^ *bytes=/;
        var E = 60 * 60 * 24 * 365 * 1e3;
        var C = /(?:^|[\\/])\.\.(?:[\\/]|$)/;
        e.exports = send;
        e.exports.mime = m;
        function send(e2, t2, a2) {
          return new SendStream(e2, t2, a2);
        }
        function SendStream(e2, t2, a2) {
          h.call(this);
          var i2 = a2 || {};
          this.options = i2;
          this.path = t2;
          this.req = e2;
          this._acceptRanges = i2.acceptRanges !== void 0 ? Boolean(i2.acceptRanges) : true;
          this._cacheControl = i2.cacheControl !== void 0 ? Boolean(i2.cacheControl) : true;
          this._etag = i2.etag !== void 0 ? Boolean(i2.etag) : true;
          this._dotfiles = i2.dotfiles !== void 0 ? i2.dotfiles : "ignore";
          if (this._dotfiles !== "ignore" && this._dotfiles !== "allow" && this._dotfiles !== "deny") {
            throw new TypeError('dotfiles option must be "allow", "deny", or "ignore"');
          }
          this._hidden = Boolean(i2.hidden);
          if (i2.hidden !== void 0) {
            r("hidden: use dotfiles: '" + (this._hidden ? "allow" : "ignore") + "' instead");
          }
          if (i2.dotfiles === void 0) {
            this._dotfiles = void 0;
          }
          this._extensions = i2.extensions !== void 0 ? normalizeList(i2.extensions, "extensions option") : [];
          this._immutable = i2.immutable !== void 0 ? Boolean(i2.immutable) : false;
          this._index = i2.index !== void 0 ? normalizeList(i2.index, "index option") : ["index.html"];
          this._lastModified = i2.lastModified !== void 0 ? Boolean(i2.lastModified) : true;
          this._maxage = i2.maxAge || i2.maxage;
          this._maxage = typeof this._maxage === "string" ? u(this._maxage) : Number(this._maxage);
          this._maxage = !isNaN(this._maxage) ? Math.min(Math.max(0, this._maxage), E) : 0;
          this._root = i2.root ? S(i2.root) : null;
          if (!this._root && i2.from) {
            this.from(i2.from);
          }
        }
        b.inherits(SendStream, h);
        SendStream.prototype.etag = r.function(function etag(e2) {
          this._etag = Boolean(e2);
          n("etag %s", this._etag);
          return this;
        }, "send.etag: pass etag as option");
        SendStream.prototype.hidden = r.function(function hidden(e2) {
          this._hidden = Boolean(e2);
          this._dotfiles = void 0;
          n("hidden %s", this._hidden);
          return this;
        }, "send.hidden: use dotfiles option");
        SendStream.prototype.index = r.function(function index(e2) {
          var index2 = !e2 ? [] : normalizeList(e2, "paths argument");
          n("index %o", e2);
          this._index = index2;
          return this;
        }, "send.index: pass index as option");
        SendStream.prototype.root = function root(e2) {
          this._root = S(String(e2));
          n("root %s", this._root);
          return this;
        };
        SendStream.prototype.from = r.function(SendStream.prototype.root, "send.from: pass root as option");
        SendStream.prototype.root = r.function(SendStream.prototype.root, "send.root: pass root as option");
        SendStream.prototype.maxage = r.function(function maxage(e2) {
          this._maxage = typeof e2 === "string" ? u(e2) : Number(e2);
          this._maxage = !isNaN(this._maxage) ? Math.min(Math.max(0, this._maxage), E) : 0;
          n("max-age %d", this._maxage);
          return this;
        }, "send.maxage: pass maxAge as option");
        SendStream.prototype.error = function error(e2, t2) {
          if (hasListeners(this, "error")) {
            return this.emit("error", i(e2, t2, { expose: false }));
          }
          var a2 = this.res;
          var n2 = g[e2] || String(e2);
          var r2 = createHtmlDocument("Error", s(n2));
          clearHeaders(a2);
          if (t2 && t2.headers) {
            setHeaders(a2, t2.headers);
          }
          a2.statusCode = e2;
          a2.setHeader("Content-Type", "text/html; charset=UTF-8");
          a2.setHeader("Content-Length", Buffer.byteLength(r2));
          a2.setHeader("Content-Security-Policy", "default-src 'none'");
          a2.setHeader("X-Content-Type-Options", "nosniff");
          a2.end(r2);
        };
        SendStream.prototype.hasTrailingSlash = function hasTrailingSlash() {
          return this.path[this.path.length - 1] === "/";
        };
        SendStream.prototype.isConditionalGET = function isConditionalGET() {
          return this.req.headers["if-match"] || this.req.headers["if-unmodified-since"] || this.req.headers["if-none-match"] || this.req.headers["if-modified-since"];
        };
        SendStream.prototype.isPreconditionFailure = function isPreconditionFailure() {
          var e2 = this.req;
          var t2 = this.res;
          var a2 = e2.headers["if-match"];
          if (a2) {
            var i2 = t2.getHeader("ETag");
            return !i2 || a2 !== "*" && parseTokenList(a2).every(function(e3) {
              return e3 !== i2 && e3 !== "W/" + i2 && "W/" + e3 !== i2;
            });
          }
          var n2 = parseHttpDate(e2.headers["if-unmodified-since"]);
          if (!isNaN(n2)) {
            var r2 = parseHttpDate(t2.getHeader("Last-Modified"));
            return isNaN(r2) || r2 > n2;
          }
          return false;
        };
        SendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields() {
          var e2 = this.res;
          var t2 = getHeaderNames(e2);
          for (var a2 = 0; a2 < t2.length; a2++) {
            var i2 = t2[a2];
            if (i2.substr(0, 8) === "content-" && i2 !== "content-location") {
              e2.removeHeader(i2);
            }
          }
        };
        SendStream.prototype.notModified = function notModified() {
          var e2 = this.res;
          n("not modified");
          this.removeContentHeaderFields();
          e2.statusCode = 304;
          e2.end();
        };
        SendStream.prototype.headersAlreadySent = function headersAlreadySent() {
          var e2 = new Error("Can't set headers after they are sent.");
          n("headers already sent");
          this.error(500, e2);
        };
        SendStream.prototype.isCachable = function isCachable() {
          var e2 = this.res.statusCode;
          return e2 >= 200 && e2 < 300 || e2 === 304;
        };
        SendStream.prototype.onStatError = function onStatError(e2) {
          switch (e2.code) {
            case "ENAMETOOLONG":
            case "ENOENT":
            case "ENOTDIR":
              this.error(404, e2);
              break;
            default:
              this.error(500, e2);
              break;
          }
        };
        SendStream.prototype.isFresh = function isFresh() {
          return l(this.req.headers, { etag: this.res.getHeader("ETag"), "last-modified": this.res.getHeader("Last-Modified") });
        };
        SendStream.prototype.isRangeFresh = function isRangeFresh() {
          var e2 = this.req.headers["if-range"];
          if (!e2) {
            return true;
          }
          if (e2.indexOf('"') !== -1) {
            var t2 = this.res.getHeader("ETag");
            return Boolean(t2 && e2.indexOf(t2) !== -1);
          }
          var a2 = this.res.getHeader("Last-Modified");
          return parseHttpDate(a2) <= parseHttpDate(e2);
        };
        SendStream.prototype.redirect = function redirect(e2) {
          var t2 = this.res;
          if (hasListeners(this, "directory")) {
            this.emit("directory", t2, e2);
            return;
          }
          if (this.hasTrailingSlash()) {
            this.error(403);
            return;
          }
          var a2 = p(collapseLeadingSlashes(this.path + "/"));
          var i2 = createHtmlDocument("Redirecting", 'Redirecting to <a href="' + s(a2) + '">' + s(a2) + "</a>");
          t2.statusCode = 301;
          t2.setHeader("Content-Type", "text/html; charset=UTF-8");
          t2.setHeader("Content-Length", Buffer.byteLength(i2));
          t2.setHeader("Content-Security-Policy", "default-src 'none'");
          t2.setHeader("X-Content-Type-Options", "nosniff");
          t2.setHeader("Location", a2);
          t2.end(i2);
        };
        SendStream.prototype.pipe = function pipe(e2) {
          var t2 = this._root;
          this.res = e2;
          var a2 = decode(this.path);
          if (a2 === -1) {
            this.error(400);
            return e2;
          }
          if (~a2.indexOf("\0")) {
            this.error(400);
            return e2;
          }
          var i2;
          if (t2 !== null) {
            if (a2) {
              a2 = k("." + _ + a2);
            }
            if (C.test(a2)) {
              n('malicious path "%s"', a2);
              this.error(403);
              return e2;
            }
            i2 = a2.split(_);
            a2 = k(w(t2, a2));
          } else {
            if (C.test(a2)) {
              n('malicious path "%s"', a2);
              this.error(403);
              return e2;
            }
            i2 = k(a2).split(_);
            a2 = S(a2);
          }
          if (containsDotFile(i2)) {
            var r2 = this._dotfiles;
            if (r2 === void 0) {
              r2 = i2[i2.length - 1][0] === "." ? this._hidden ? "allow" : "ignore" : "allow";
            }
            n('%s dotfile "%s"', r2, a2);
            switch (r2) {
              case "allow":
                break;
              case "deny":
                this.error(403);
                return e2;
              case "ignore":
              default:
                this.error(404);
                return e2;
            }
          }
          if (this._index.length && this.hasTrailingSlash()) {
            this.sendIndex(a2);
            return e2;
          }
          this.sendFile(a2);
          return e2;
        };
        SendStream.prototype.send = function send2(e2, t2) {
          var a2 = t2.size;
          var i2 = this.options;
          var r2 = {};
          var o2 = this.res;
          var p2 = this.req;
          var s2 = p2.headers.range;
          var c2 = i2.start || 0;
          if (headersSent(o2)) {
            this.headersAlreadySent();
            return;
          }
          n('pipe "%s"', e2);
          this.setHeader(e2, t2);
          this.type(e2);
          if (this.isConditionalGET()) {
            if (this.isPreconditionFailure()) {
              this.error(412);
              return;
            }
            if (this.isCachable() && this.isFresh()) {
              this.notModified();
              return;
            }
          }
          a2 = Math.max(0, a2 - c2);
          if (i2.end !== void 0) {
            var l2 = i2.end - c2 + 1;
            if (a2 > l2) a2 = l2;
          }
          if (this._acceptRanges && j.test(s2)) {
            s2 = f(a2, s2, { combine: true });
            if (!this.isRangeFresh()) {
              n("range stale");
              s2 = -2;
            }
            if (s2 === -1) {
              n("range unsatisfiable");
              o2.setHeader("Content-Range", contentRange("bytes", a2));
              return this.error(416, { headers: { "Content-Range": o2.getHeader("Content-Range") } });
            }
            if (s2 !== -2 && s2.length === 1) {
              n("range %j", s2);
              o2.statusCode = 206;
              o2.setHeader("Content-Range", contentRange("bytes", a2, s2[0]));
              c2 += s2[0].start;
              a2 = s2[0].end - s2[0].start + 1;
            }
          }
          for (var d2 in i2) {
            r2[d2] = i2[d2];
          }
          r2.start = c2;
          r2.end = Math.max(c2, c2 + a2 - 1);
          o2.setHeader("Content-Length", a2);
          if (p2.method === "HEAD") {
            o2.end();
            return;
          }
          this.stream(e2, r2);
        };
        SendStream.prototype.sendFile = function sendFile(e2) {
          var t2 = 0;
          var a2 = this;
          n('stat "%s"', e2);
          d.stat(e2, function onstat(t3, i2) {
            if (t3 && t3.code === "ENOENT" && !y(e2) && e2[e2.length - 1] !== _) {
              return next(t3);
            }
            if (t3) return a2.onStatError(t3);
            if (i2.isDirectory()) return a2.redirect(e2);
            a2.emit("file", e2, i2);
            a2.send(e2, i2);
          });
          function next(i2) {
            if (a2._extensions.length <= t2) {
              return i2 ? a2.onStatError(i2) : a2.error(404);
            }
            var r2 = e2 + "." + a2._extensions[t2++];
            n('stat "%s"', r2);
            d.stat(r2, function(e3, t3) {
              if (e3) return next(e3);
              if (t3.isDirectory()) return next();
              a2.emit("file", r2, t3);
              a2.send(r2, t3);
            });
          }
        };
        SendStream.prototype.sendIndex = function sendIndex(e2) {
          var t2 = -1;
          var a2 = this;
          function next(i2) {
            if (++t2 >= a2._index.length) {
              if (i2) return a2.onStatError(i2);
              return a2.error(404);
            }
            var r2 = w(e2, a2._index[t2]);
            n('stat "%s"', r2);
            d.stat(r2, function(e3, t3) {
              if (e3) return next(e3);
              if (t3.isDirectory()) return next();
              a2.emit("file", r2, t3);
              a2.send(r2, t3);
            });
          }
          next();
        };
        SendStream.prototype.stream = function stream(e2, t2) {
          var a2 = false;
          var i2 = this;
          var n2 = this.res;
          var stream2 = d.createReadStream(e2, t2);
          this.emit("stream", stream2);
          stream2.pipe(n2);
          v(n2, function onfinished() {
            a2 = true;
            o(stream2);
          });
          stream2.on("error", function onerror(e3) {
            if (a2) return;
            a2 = true;
            o(stream2);
            i2.onStatError(e3);
          });
          stream2.on("end", function onend() {
            i2.emit("end");
          });
        };
        SendStream.prototype.type = function type(e2) {
          var t2 = this.res;
          if (t2.getHeader("Content-Type")) return;
          var type2 = m.lookup(e2);
          if (!type2) {
            n("no content-type");
            return;
          }
          var a2 = m.charsets.lookup(type2);
          n("content-type %s", type2);
          t2.setHeader("Content-Type", type2 + (a2 ? "; charset=" + a2 : ""));
        };
        SendStream.prototype.setHeader = function setHeader(e2, t2) {
          var a2 = this.res;
          this.emit("headers", a2, e2, t2);
          if (this._acceptRanges && !a2.getHeader("Accept-Ranges")) {
            n("accept ranges");
            a2.setHeader("Accept-Ranges", "bytes");
          }
          if (this._cacheControl && !a2.getHeader("Cache-Control")) {
            var i2 = "public, max-age=" + Math.floor(this._maxage / 1e3);
            if (this._immutable) {
              i2 += ", immutable";
            }
            n("cache-control %s", i2);
            a2.setHeader("Cache-Control", i2);
          }
          if (this._lastModified && !a2.getHeader("Last-Modified")) {
            var r2 = t2.mtime.toUTCString();
            n("modified %s", r2);
            a2.setHeader("Last-Modified", r2);
          }
          if (this._etag && !a2.getHeader("ETag")) {
            var o2 = c(t2);
            n("etag %s", o2);
            a2.setHeader("ETag", o2);
          }
        };
        function clearHeaders(e2) {
          var t2 = getHeaderNames(e2);
          for (var a2 = 0; a2 < t2.length; a2++) {
            e2.removeHeader(t2[a2]);
          }
        }
        function collapseLeadingSlashes(e2) {
          for (var t2 = 0; t2 < e2.length; t2++) {
            if (e2[t2] !== "/") {
              break;
            }
          }
          return t2 > 1 ? "/" + e2.substr(t2) : e2;
        }
        function containsDotFile(e2) {
          for (var t2 = 0; t2 < e2.length; t2++) {
            var a2 = e2[t2];
            if (a2.length > 1 && a2[0] === ".") {
              return true;
            }
          }
          return false;
        }
        function contentRange(e2, t2, a2) {
          return e2 + " " + (a2 ? a2.start + "-" + a2.end : "*") + "/" + t2;
        }
        function createHtmlDocument(e2, t2) {
          return '<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>' + e2 + "</title>\n</head>\n<body>\n<pre>" + t2 + "</pre>\n</body>\n</html>\n";
        }
        function decode(e2) {
          try {
            return decodeURIComponent(e2);
          } catch (e3) {
            return -1;
          }
        }
        function getHeaderNames(e2) {
          return typeof e2.getHeaderNames !== "function" ? Object.keys(e2._headers || {}) : e2.getHeaderNames();
        }
        function hasListeners(e2, t2) {
          var a2 = typeof e2.listenerCount !== "function" ? e2.listeners(t2).length : e2.listenerCount(t2);
          return a2 > 0;
        }
        function headersSent(e2) {
          return typeof e2.headersSent !== "boolean" ? Boolean(e2._header) : e2.headersSent;
        }
        function normalizeList(e2, t2) {
          var a2 = [].concat(e2 || []);
          for (var i2 = 0; i2 < a2.length; i2++) {
            if (typeof a2[i2] !== "string") {
              throw new TypeError(t2 + " must be array of strings or false");
            }
          }
          return a2;
        }
        function parseHttpDate(e2) {
          var t2 = e2 && Date.parse(e2);
          return typeof t2 === "number" ? t2 : NaN;
        }
        function parseTokenList(e2) {
          var t2 = 0;
          var a2 = [];
          var i2 = 0;
          for (var n2 = 0, r2 = e2.length; n2 < r2; n2++) {
            switch (e2.charCodeAt(n2)) {
              case 32:
                if (i2 === t2) {
                  i2 = t2 = n2 + 1;
                }
                break;
              case 44:
                a2.push(e2.substring(i2, t2));
                i2 = t2 = n2 + 1;
                break;
              default:
                t2 = n2 + 1;
                break;
            }
          }
          a2.push(e2.substring(i2, t2));
          return a2;
        }
        function setHeaders(e2, t2) {
          var a2 = Object.keys(t2);
          for (var i2 = 0; i2 < a2.length; i2++) {
            var n2 = a2[i2];
            e2.setHeader(n2, t2[n2]);
          }
        }
      }, 103: (e) => {
        "use strict";
        e.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);
        function setProtoOf(e2, t) {
          e2.__proto__ = t;
          return e2;
        }
        function mixinProperties(e2, t) {
          for (var a in t) {
            if (!e2.hasOwnProperty(a)) {
              e2[a] = t[a];
            }
          }
          return e2;
        }
      }, 590: (e, t, a) => {
        "use strict";
        var i = a(656);
        e.exports = status;
        status.STATUS_CODES = i;
        status.codes = populateStatusesMap(status, i);
        status.redirect = { 300: true, 301: true, 302: true, 303: true, 305: true, 307: true, 308: true };
        status.empty = { 204: true, 205: true, 304: true };
        status.retry = { 502: true, 503: true, 504: true };
        function populateStatusesMap(e2, t2) {
          var a2 = [];
          Object.keys(t2).forEach(function forEachCode(i2) {
            var n = t2[i2];
            var r = Number(i2);
            e2[r] = n;
            e2[n] = r;
            e2[n.toLowerCase()] = r;
            a2.push(r);
          });
          return a2;
        }
        function status(e2) {
          if (typeof e2 === "number") {
            if (!status[e2]) throw new Error("invalid status code: " + e2);
            return e2;
          }
          if (typeof e2 !== "string") {
            throw new TypeError("code must be a number or string");
          }
          var t2 = parseInt(e2, 10);
          if (!isNaN(t2)) {
            if (!status[t2]) throw new Error("invalid status code: " + t2);
            return t2;
          }
          t2 = status[e2.toLowerCase()];
          if (!t2) throw new Error('invalid status message: "' + e2 + '"');
          return t2;
        }
      }, 26: (e) => {
        e.exports = toIdentifier;
        function toIdentifier(e2) {
          return e2.split(" ").map(function(e3) {
            return e3.slice(0, 1).toUpperCase() + e3.slice(1);
          }).join("").replace(/[^ _0-9a-z]/gi, "");
        }
      }, 113: (e) => {
        "use strict";
        e.exports = require_crypto();
      }, 361: (e) => {
        "use strict";
        e.exports = require_events();
      }, 147: (e) => {
        "use strict";
        e.exports = require_fs();
      }, 937: (e) => {
        "use strict";
        e.exports = require_debug();
      }, 890: (e) => {
        "use strict";
        e.exports = require_fresh();
      }, 17: (e) => {
        "use strict";
        e.exports = require_path();
      }, 781: (e) => {
        "use strict";
        e.exports = require_stream();
      }, 837: (e) => {
        "use strict";
        e.exports = require_util();
      }, 598: (e) => {
        "use strict";
        e.exports = JSON.parse('{"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/font-woff":[],"application/font-woff2":[],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/prs.cww":["cww"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":[],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":[],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":[],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":[],"application/x-msdownload":["com","bat"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["wmf","emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":[],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":[],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":[],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/wav":["wav"],"audio/wave":[],"audio/webm":["weba"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":[],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":[],"audio/x-wav":[],"audio/xm":["xm"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/g3fax":["g3"],"image/gif":["gif"],"image/ief":["ief"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/ktx":["ktx"],"image/png":["png"],"image/prs.btif":["btif"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/tiff":["tiff","tif"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":[],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/webp":["webp"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":[],"image/x-pcx":["pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/rfc822":["eml","mime"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.vtu":["vtu"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["x3db","x3dbz"],"model/x3d+vrml":["x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/hjson":["hjson"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/prs.lines.tag":["dsc"],"text/richtext":["rtx"],"text/rtf":[],"text/sgml":["sgml","sgm"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/vtt":["vtt"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":[],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"text/xml":[],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}');
      }, 656: (e) => {
        "use strict";
        e.exports = JSON.parse(`{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","306":"(Unused)","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I'm a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}`);
      } };
      var __webpack_module_cache__ = {};
      function __nccwpck_require__(e) {
        var t = __webpack_module_cache__[e];
        if (t !== void 0) {
          return t.exports;
        }
        var a = __webpack_module_cache__[e] = { exports: {} };
        var i = true;
        try {
          __webpack_modules__[e](a, a.exports, __nccwpck_require__);
          i = false;
        } finally {
          if (i) delete __webpack_module_cache__[e];
        }
        return a.exports;
      }
      if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
      var __webpack_exports__ = __nccwpck_require__(701);
      module.exports = __webpack_exports__;
    })();
  }
});

// ../../../node_modules/next/dist/server/serve-static.js
var require_serve_static = __commonJS({
  "../../../node_modules/next/dist/server/serve-static.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      getContentType: function() {
        return getContentType;
      },
      getExtension: function() {
        return getExtension;
      },
      serveStatic: function() {
        return serveStatic;
      }
    });
    var _send = _interop_require_default(require_send());
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    _send.default.mime.define({
      "image/avif": [
        "avif"
      ]
    });
    function serveStatic(req, res, path, opts) {
      return new Promise((resolve, reject) => {
        (0, _send.default)(req, path, opts).on("directory", () => {
          const err = new Error("No directory access");
          err.code = "ENOENT";
          reject(err);
        }).on("error", reject).pipe(res).on("finish", resolve);
      });
    }
    var getContentType = "getType" in _send.default.mime ? (extWithoutDot) => _send.default.mime.getType(extWithoutDot) : (extWithoutDot) => _send.default.mime.lookup(extWithoutDot);
    var getExtension = "getExtension" in _send.default.mime ? (contentType) => _send.default.mime.getExtension(contentType) : (contentType) => _send.default.mime.extension(contentType);
  }
});

// ../../../node_modules/next/dist/lib/picocolors.js
var require_picocolors = __commonJS({
  "../../../node_modules/next/dist/lib/picocolors.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      bgBlack: function() {
        return bgBlack;
      },
      bgBlue: function() {
        return bgBlue;
      },
      bgCyan: function() {
        return bgCyan;
      },
      bgGreen: function() {
        return bgGreen;
      },
      bgMagenta: function() {
        return bgMagenta;
      },
      bgRed: function() {
        return bgRed;
      },
      bgWhite: function() {
        return bgWhite;
      },
      bgYellow: function() {
        return bgYellow;
      },
      black: function() {
        return black;
      },
      blue: function() {
        return blue;
      },
      bold: function() {
        return bold;
      },
      cyan: function() {
        return cyan;
      },
      dim: function() {
        return dim;
      },
      gray: function() {
        return gray;
      },
      green: function() {
        return green;
      },
      hidden: function() {
        return hidden;
      },
      inverse: function() {
        return inverse;
      },
      italic: function() {
        return italic;
      },
      magenta: function() {
        return magenta;
      },
      purple: function() {
        return purple;
      },
      red: function() {
        return red;
      },
      reset: function() {
        return reset;
      },
      strikethrough: function() {
        return strikethrough;
      },
      underline: function() {
        return underline;
      },
      white: function() {
        return white;
      },
      yellow: function() {
        return yellow;
      }
    });
    var _globalThis;
    var { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};
    var enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== "dumb");
    var replaceClose = (str, close, replace, index) => {
      const start = str.substring(0, index) + replace;
      const end = str.substring(index + close.length);
      const nextIndex = end.indexOf(close);
      return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;
    };
    var formatter = (open, close, replace = open) => {
      if (!enabled) return String;
      return (input) => {
        const string = "" + input;
        const index = string.indexOf(close, open.length);
        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;
      };
    };
    var reset = enabled ? (s) => `\x1B[0m${s}\x1B[0m` : String;
    var bold = formatter("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m");
    var dim = formatter("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m");
    var italic = formatter("\x1B[3m", "\x1B[23m");
    var underline = formatter("\x1B[4m", "\x1B[24m");
    var inverse = formatter("\x1B[7m", "\x1B[27m");
    var hidden = formatter("\x1B[8m", "\x1B[28m");
    var strikethrough = formatter("\x1B[9m", "\x1B[29m");
    var black = formatter("\x1B[30m", "\x1B[39m");
    var red = formatter("\x1B[31m", "\x1B[39m");
    var green = formatter("\x1B[32m", "\x1B[39m");
    var yellow = formatter("\x1B[33m", "\x1B[39m");
    var blue = formatter("\x1B[34m", "\x1B[39m");
    var magenta = formatter("\x1B[35m", "\x1B[39m");
    var purple = formatter("\x1B[38;2;173;127;168m", "\x1B[39m");
    var cyan = formatter("\x1B[36m", "\x1B[39m");
    var white = formatter("\x1B[37m", "\x1B[39m");
    var gray = formatter("\x1B[90m", "\x1B[39m");
    var bgBlack = formatter("\x1B[40m", "\x1B[49m");
    var bgRed = formatter("\x1B[41m", "\x1B[49m");
    var bgGreen = formatter("\x1B[42m", "\x1B[49m");
    var bgYellow = formatter("\x1B[43m", "\x1B[49m");
    var bgBlue = formatter("\x1B[44m", "\x1B[49m");
    var bgMagenta = formatter("\x1B[45m", "\x1B[49m");
    var bgCyan = formatter("\x1B[46m", "\x1B[49m");
    var bgWhite = formatter("\x1B[47m", "\x1B[49m");
  }
});

// ../../../node_modules/next/dist/build/output/log.js
var require_log = __commonJS({
  "../../../node_modules/next/dist/build/output/log.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      bootstrap: function() {
        return bootstrap;
      },
      error: function() {
        return error;
      },
      event: function() {
        return event;
      },
      info: function() {
        return info;
      },
      prefixes: function() {
        return prefixes;
      },
      ready: function() {
        return ready;
      },
      trace: function() {
        return trace;
      },
      wait: function() {
        return wait;
      },
      warn: function() {
        return warn;
      },
      warnOnce: function() {
        return warnOnce;
      }
    });
    var _picocolors = require_picocolors();
    var prefixes = {
      wait: (0, _picocolors.white)((0, _picocolors.bold)("○")),
      error: (0, _picocolors.red)((0, _picocolors.bold)("⨯")),
      warn: (0, _picocolors.yellow)((0, _picocolors.bold)("⚠")),
      ready: "▲",
      info: (0, _picocolors.white)((0, _picocolors.bold)(" ")),
      event: (0, _picocolors.green)((0, _picocolors.bold)("✓")),
      trace: (0, _picocolors.magenta)((0, _picocolors.bold)("»"))
    };
    var LOGGING_METHOD = {
      log: "log",
      warn: "warn",
      error: "error"
    };
    function prefixedLog(prefixType, ...message2) {
      if ((message2[0] === "" || message2[0] === void 0) && message2.length === 1) {
        message2.shift();
      }
      const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : "log";
      const prefix = prefixes[prefixType];
      if (message2.length === 0) {
        console[consoleMethod]("");
      } else {
        console[consoleMethod](" " + prefix, ...message2);
      }
    }
    function bootstrap(...message2) {
      console.log(" ", ...message2);
    }
    function wait(...message2) {
      prefixedLog("wait", ...message2);
    }
    function error(...message2) {
      prefixedLog("error", ...message2);
    }
    function warn(...message2) {
      prefixedLog("warn", ...message2);
    }
    function ready(...message2) {
      prefixedLog("ready", ...message2);
    }
    function info(...message2) {
      prefixedLog("info", ...message2);
    }
    function event(...message2) {
      prefixedLog("event", ...message2);
    }
    function trace(...message2) {
      prefixedLog("trace", ...message2);
    }
    var warnOnceMessages = /* @__PURE__ */ new Set();
    function warnOnce(...message2) {
      if (!warnOnceMessages.has(message2[0])) {
        warnOnceMessages.add(message2.join(" "));
        warn(...message2);
      }
    }
  }
});

// ../../../node_modules/next/dist/lib/url.js
var require_url2 = __commonJS({
  "../../../node_modules/next/dist/lib/url.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      getPathname: function() {
        return getPathname;
      },
      isFullStringUrl: function() {
        return isFullStringUrl;
      },
      parseUrl: function() {
        return parseUrl;
      }
    });
    var DUMMY_ORIGIN = "http://n";
    function getUrlWithoutHost(url) {
      return new URL(url, DUMMY_ORIGIN);
    }
    function getPathname(url) {
      return getUrlWithoutHost(url).pathname;
    }
    function isFullStringUrl(url) {
      return /https?:\/\//.test(url);
    }
    function parseUrl(url) {
      let parsed = void 0;
      try {
        parsed = new URL(url, DUMMY_ORIGIN);
      } catch {
      }
      return parsed;
    }
  }
});

// browser-external:child_process
var require_child_process = __commonJS({
  "browser-external:child_process"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "child_process" has been externalized for browser compatibility. Cannot access "child_process.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:worker_threads
var require_worker_threads = __commonJS({
  "browser-external:worker_threads"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "worker_threads" has been externalized for browser compatibility. Cannot access "worker_threads.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// ../../../node_modules/next/dist/compiled/jest-worker/index.js
var require_jest_worker = __commonJS({
  "../../../node_modules/next/dist/compiled/jest-worker/index.js"(exports2, module2) {
    (() => {
      "use strict";
      var e = { 914: (e2) => {
        e2.exports = (e3, t2 = process.argv) => {
          const r2 = e3.startsWith("-") ? "" : e3.length === 1 ? "-" : "--";
          const i = t2.indexOf(r2 + e3);
          const s = t2.indexOf("--");
          return i !== -1 && (s === -1 || i < s);
        };
      }, 460: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = void 0;
        var i = _interopRequireDefault(r2(552));
        var s = r2(582);
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        function _defineProperty(e3, t3, r3) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r3;
          }
          return e3;
        }
        class Farm {
          constructor(e3, t3, r3 = {}) {
            var s2, o;
            _defineProperty(this, "_computeWorkerKey", void 0);
            _defineProperty(this, "_workerSchedulingPolicy", void 0);
            _defineProperty(this, "_cacheKeys", /* @__PURE__ */ Object.create(null));
            _defineProperty(this, "_locks", []);
            _defineProperty(this, "_offset", 0);
            _defineProperty(this, "_taskQueue", void 0);
            this._numOfWorkers = e3;
            this._callback = t3;
            this._computeWorkerKey = r3.computeWorkerKey;
            this._workerSchedulingPolicy = (s2 = r3.workerSchedulingPolicy) !== null && s2 !== void 0 ? s2 : "round-robin";
            this._taskQueue = (o = r3.taskQueue) !== null && o !== void 0 ? o : new i.default();
          }
          doWork(e3, ...t3) {
            const r3 = /* @__PURE__ */ new Set();
            const addCustomMessageListener = (e4) => {
              r3.add(e4);
              return () => {
                r3.delete(e4);
              };
            };
            const onCustomMessage = (e4) => {
              r3.forEach((t4) => t4(e4));
            };
            const i2 = new Promise(((t4, i3, o) => {
              const n = this._computeWorkerKey;
              const u = [s.CHILD_MESSAGE_CALL, false, e3, t4];
              let _ = null;
              let l = null;
              if (n) {
                l = n.call(this, e3, ...t4);
                _ = l == null ? null : this._cacheKeys[l];
              }
              const onStart = (e4) => {
                if (l != null) {
                  this._cacheKeys[l] = e4;
                }
              };
              const onEnd = (e4, t5) => {
                r3.clear();
                if (e4) {
                  o(e4);
                } else {
                  i3(t5);
                }
              };
              const a = { onCustomMessage, onEnd, onStart, request: u };
              if (_) {
                this._taskQueue.enqueue(a, _.getWorkerId());
                this._process(_.getWorkerId());
              } else {
                this._push(a);
              }
            }).bind(null, t3));
            i2.UNSTABLE_onCustomMessage = addCustomMessageListener;
            return i2;
          }
          _process(e3) {
            if (this._isLocked(e3)) {
              return this;
            }
            const t3 = this._taskQueue.dequeue(e3);
            if (!t3) {
              return this;
            }
            if (t3.request[1]) {
              throw new Error("Queue implementation returned processed task");
            }
            const r3 = t3.onEnd;
            const onEnd = (t4, i2) => {
              r3(t4, i2);
              this._unlock(e3);
              this._process(e3);
            };
            t3.request[1] = true;
            this._lock(e3);
            this._callback(e3, t3.request, t3.onStart, onEnd, t3.onCustomMessage);
            return this;
          }
          _push(e3) {
            this._taskQueue.enqueue(e3);
            const t3 = this._getNextWorkerOffset();
            for (let r3 = 0; r3 < this._numOfWorkers; r3++) {
              this._process((t3 + r3) % this._numOfWorkers);
              if (e3.request[1]) {
                break;
              }
            }
            return this;
          }
          _getNextWorkerOffset() {
            switch (this._workerSchedulingPolicy) {
              case "in-order":
                return 0;
              case "round-robin":
                return this._offset++;
            }
          }
          _lock(e3) {
            this._locks[e3] = true;
          }
          _unlock(e3) {
            this._locks[e3] = false;
          }
          _isLocked(e3) {
            return this._locks[e3];
          }
        }
        t2["default"] = Farm;
      }, 552: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = void 0;
        function _defineProperty(e3, t3, r2) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r2, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r2;
          }
          return e3;
        }
        class FifoQueue {
          constructor() {
            _defineProperty(this, "_workerQueues", []);
            _defineProperty(this, "_sharedQueue", new InternalQueue());
          }
          enqueue(e3, t3) {
            if (t3 == null) {
              this._sharedQueue.enqueue(e3);
              return;
            }
            let r2 = this._workerQueues[t3];
            if (r2 == null) {
              r2 = this._workerQueues[t3] = new InternalQueue();
            }
            const i = this._sharedQueue.peekLast();
            const s = { previousSharedTask: i, task: e3 };
            r2.enqueue(s);
          }
          dequeue(e3) {
            var t3, r2, i;
            const s = (t3 = this._workerQueues[e3]) === null || t3 === void 0 ? void 0 : t3.peek();
            const o = (r2 = s === null || s === void 0 ? void 0 : (i = s.previousSharedTask) === null || i === void 0 ? void 0 : i.request[1]) !== null && r2 !== void 0 ? r2 : true;
            if (s != null && o) {
              var n, u, _;
              return (n = (u = this._workerQueues[e3]) === null || u === void 0 ? void 0 : (_ = u.dequeue()) === null || _ === void 0 ? void 0 : _.task) !== null && n !== void 0 ? n : null;
            }
            return this._sharedQueue.dequeue();
          }
        }
        t2["default"] = FifoQueue;
        class InternalQueue {
          constructor() {
            _defineProperty(this, "_head", null);
            _defineProperty(this, "_last", null);
          }
          enqueue(e3) {
            const t3 = { next: null, value: e3 };
            if (this._last == null) {
              this._head = t3;
            } else {
              this._last.next = t3;
            }
            this._last = t3;
          }
          dequeue() {
            if (this._head == null) {
              return null;
            }
            const e3 = this._head;
            this._head = e3.next;
            if (this._head == null) {
              this._last = null;
            }
            return e3.value;
          }
          peek() {
            var e3, t3;
            return (e3 = (t3 = this._head) === null || t3 === void 0 ? void 0 : t3.value) !== null && e3 !== void 0 ? e3 : null;
          }
          peekLast() {
            var e3, t3;
            return (e3 = (t3 = this._last) === null || t3 === void 0 ? void 0 : t3.value) !== null && e3 !== void 0 ? e3 : null;
          }
        }
      }, 601: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = void 0;
        function _defineProperty(e3, t3, r2) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r2, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r2;
          }
          return e3;
        }
        class PriorityQueue {
          constructor(e3) {
            _defineProperty(this, "_queue", []);
            _defineProperty(this, "_sharedQueue", new MinHeap());
            this._computePriority = e3;
          }
          enqueue(e3, t3) {
            if (t3 == null) {
              this._enqueue(e3, this._sharedQueue);
            } else {
              const r2 = this._getWorkerQueue(t3);
              this._enqueue(e3, r2);
            }
          }
          _enqueue(e3, t3) {
            const r2 = { priority: this._computePriority(e3.request[2], ...e3.request[3]), task: e3 };
            t3.add(r2);
          }
          dequeue(e3) {
            const t3 = this._getWorkerQueue(e3);
            const r2 = t3.peek();
            const i = this._sharedQueue.peek();
            if (i == null || r2 != null && r2.priority <= i.priority) {
              var s, o;
              return (s = (o = t3.poll()) === null || o === void 0 ? void 0 : o.task) !== null && s !== void 0 ? s : null;
            }
            return this._sharedQueue.poll().task;
          }
          _getWorkerQueue(e3) {
            let t3 = this._queue[e3];
            if (t3 == null) {
              t3 = this._queue[e3] = new MinHeap();
            }
            return t3;
          }
        }
        t2["default"] = PriorityQueue;
        class MinHeap {
          constructor() {
            _defineProperty(this, "_heap", []);
          }
          peek() {
            var e3;
            return (e3 = this._heap[0]) !== null && e3 !== void 0 ? e3 : null;
          }
          add(e3) {
            const t3 = this._heap;
            t3.push(e3);
            if (t3.length === 1) {
              return;
            }
            let r2 = t3.length - 1;
            while (r2 > 0) {
              const i = Math.floor((r2 + 1) / 2) - 1;
              const s = t3[i];
              if (s.priority <= e3.priority) {
                break;
              }
              t3[r2] = s;
              t3[i] = e3;
              r2 = i;
            }
          }
          poll() {
            const e3 = this._heap;
            const t3 = e3[0];
            const r2 = e3.pop();
            if (t3 == null || e3.length === 0) {
              return t3 !== null && t3 !== void 0 ? t3 : null;
            }
            let i = 0;
            e3[0] = r2 !== null && r2 !== void 0 ? r2 : null;
            const s = e3[0];
            while (true) {
              let t4 = null;
              const r3 = (i + 1) * 2;
              const o = r3 - 1;
              const n = e3[r3];
              const u = e3[o];
              if (u != null && u.priority < s.priority) {
                t4 = o;
              }
              if (n != null && n.priority < (t4 == null ? s : u).priority) {
                t4 = r3;
              }
              if (t4 == null) {
                break;
              }
              e3[i] = e3[t4];
              e3[t4] = s;
              i = t4;
            }
            return t3;
          }
        }
      }, 30: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = void 0;
        var i = _interopRequireDefault(r2(481));
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        const canUseWorkerThreads = () => {
          try {
            r2(267);
            return true;
          } catch {
            return false;
          }
        };
        class WorkerPool extends i.default {
          send(e3, t3, r3, i2, s2) {
            this.getWorkerById(e3).send(t3, r3, i2, s2);
          }
          createWorker(e3) {
            let t3;
            if (this._options.enableWorkerThreads && canUseWorkerThreads()) {
              t3 = r2(925).Z;
            } else {
              t3 = r2(804).Z;
            }
            return new t3(e3);
          }
        }
        var s = WorkerPool;
        t2["default"] = s;
      }, 481: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = void 0;
        function path() {
          const e3 = _interopRequireWildcard(r2(17));
          path = function() {
            return e3;
          };
          return e3;
        }
        function _mergeStream() {
          const e3 = _interopRequireDefault(r2(942));
          _mergeStream = function() {
            return e3;
          };
          return e3;
        }
        var i = r2(582);
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        function _getRequireWildcardCache(e3) {
          if (typeof WeakMap !== "function") return null;
          var t3 = /* @__PURE__ */ new WeakMap();
          var r3 = /* @__PURE__ */ new WeakMap();
          return (_getRequireWildcardCache = function(e4) {
            return e4 ? r3 : t3;
          })(e3);
        }
        function _interopRequireWildcard(e3, t3) {
          if (!t3 && e3 && e3.__esModule) {
            return e3;
          }
          if (e3 === null || typeof e3 !== "object" && typeof e3 !== "function") {
            return { default: e3 };
          }
          var r3 = _getRequireWildcardCache(t3);
          if (r3 && r3.has(e3)) {
            return r3.get(e3);
          }
          var i2 = {};
          var s2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var o in e3) {
            if (o !== "default" && Object.prototype.hasOwnProperty.call(e3, o)) {
              var n = s2 ? Object.getOwnPropertyDescriptor(e3, o) : null;
              if (n && (n.get || n.set)) {
                Object.defineProperty(i2, o, n);
              } else {
                i2[o] = e3[o];
              }
            }
          }
          i2.default = e3;
          if (r3) {
            r3.set(e3, i2);
          }
          return i2;
        }
        function _defineProperty(e3, t3, r3) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r3;
          }
          return e3;
        }
        const s = 500;
        const emptyMethod = () => {
        };
        class BaseWorkerPool {
          constructor(e3, t3) {
            _defineProperty(this, "_stderr", void 0);
            _defineProperty(this, "_stdout", void 0);
            _defineProperty(this, "_options", void 0);
            _defineProperty(this, "_workers", void 0);
            this._options = t3;
            this._workers = new Array(t3.numWorkers);
            if (!path().isAbsolute(e3)) {
              e3 = __require.resolve(e3);
            }
            const r3 = (0, _mergeStream().default)();
            const i2 = (0, _mergeStream().default)();
            const { forkOptions: s2, maxRetries: o, resourceLimits: n, setupArgs: u } = t3;
            for (let _ = 0; _ < t3.numWorkers; _++) {
              const t4 = { forkOptions: s2, maxRetries: o, resourceLimits: n, setupArgs: u, workerId: _, workerPath: e3 };
              const l = this.createWorker(t4);
              const a = l.getStdout();
              const d = l.getStderr();
              if (a) {
                r3.add(a);
              }
              if (d) {
                i2.add(d);
              }
              this._workers[_] = l;
            }
            this._stdout = r3;
            this._stderr = i2;
          }
          getStderr() {
            return this._stderr;
          }
          getStdout() {
            return this._stdout;
          }
          getWorkers() {
            return this._workers;
          }
          getWorkerById(e3) {
            return this._workers[e3];
          }
          createWorker(e3) {
            throw Error("Missing method createWorker in WorkerPool");
          }
          async end() {
            const e3 = this._workers.map(async (e4) => {
              e4.send([i.CHILD_MESSAGE_END, false], emptyMethod, emptyMethod, emptyMethod);
              let t4 = false;
              const r3 = setTimeout(() => {
                e4.forceExit();
                t4 = true;
              }, s);
              await e4.waitForExit();
              clearTimeout(r3);
              return t4;
            });
            const t3 = await Promise.all(e3);
            return t3.reduce((e4, t4) => ({ forceExited: e4.forceExited || t4 }), { forceExited: false });
          }
        }
        t2["default"] = BaseWorkerPool;
      }, 582: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2.PARENT_MESSAGE_SETUP_ERROR = t2.PARENT_MESSAGE_OK = t2.PARENT_MESSAGE_CUSTOM = t2.PARENT_MESSAGE_CLIENT_ERROR = t2.CHILD_MESSAGE_INITIALIZE = t2.CHILD_MESSAGE_END = t2.CHILD_MESSAGE_CALL = void 0;
        const r2 = 0;
        t2.CHILD_MESSAGE_INITIALIZE = r2;
        const i = 1;
        t2.CHILD_MESSAGE_CALL = i;
        const s = 2;
        t2.CHILD_MESSAGE_END = s;
        const o = 0;
        t2.PARENT_MESSAGE_OK = o;
        const n = 1;
        t2.PARENT_MESSAGE_CLIENT_ERROR = n;
        const u = 2;
        t2.PARENT_MESSAGE_SETUP_ERROR = u;
        const _ = 3;
        t2.PARENT_MESSAGE_CUSTOM = _;
      }, 804: (e2, t2, r2) => {
        var i;
        i = { value: true };
        t2.Z = void 0;
        function _child_process() {
          const e3 = r2(81);
          _child_process = function() {
            return e3;
          };
          return e3;
        }
        function _stream() {
          const e3 = r2(781);
          _stream = function() {
            return e3;
          };
          return e3;
        }
        function _mergeStream() {
          const e3 = _interopRequireDefault(r2(942));
          _mergeStream = function() {
            return e3;
          };
          return e3;
        }
        function _supportsColor() {
          const e3 = r2(178);
          _supportsColor = function() {
            return e3;
          };
          return e3;
        }
        var s = r2(582);
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        function _defineProperty(e3, t3, r3) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r3;
          }
          return e3;
        }
        const o = 128;
        const n = o + 9;
        const u = o + 15;
        const _ = 500;
        class ChildProcessWorker {
          constructor(e3) {
            _defineProperty(this, "_child", void 0);
            _defineProperty(this, "_options", void 0);
            _defineProperty(this, "_request", void 0);
            _defineProperty(this, "_retries", void 0);
            _defineProperty(this, "_onProcessEnd", void 0);
            _defineProperty(this, "_onCustomMessage", void 0);
            _defineProperty(this, "_fakeStream", void 0);
            _defineProperty(this, "_stdout", void 0);
            _defineProperty(this, "_stderr", void 0);
            _defineProperty(this, "_exitPromise", void 0);
            _defineProperty(this, "_resolveExitPromise", void 0);
            this._options = e3;
            this._request = null;
            this._fakeStream = null;
            this._stdout = null;
            this._stderr = null;
            this._exitPromise = new Promise((e4) => {
              this._resolveExitPromise = e4;
            });
            this.initialize();
          }
          initialize() {
            const e3 = _supportsColor().stdout ? { FORCE_COLOR: "1" } : {};
            const t3 = (0, _child_process().fork)(r2.ab + "processChild.js", [], { cwd: process.cwd(), env: { ...process.env, JEST_WORKER_ID: String(this._options.workerId + 1), ...e3 }, execArgv: process.execArgv.filter((e4) => !/^--(debug|inspect)/.test(e4)), silent: true, ...this._options.forkOptions });
            if (t3.stdout) {
              if (!this._stdout) {
                this._stdout = (0, _mergeStream().default)(this._getFakeStream());
              }
              this._stdout.add(t3.stdout);
            }
            if (t3.stderr) {
              if (!this._stderr) {
                this._stderr = (0, _mergeStream().default)(this._getFakeStream());
              }
              this._stderr.add(t3.stderr);
            }
            t3.on("message", this._onMessage.bind(this));
            t3.on("exit", this._onExit.bind(this));
            t3.send([s.CHILD_MESSAGE_INITIALIZE, false, this._options.workerPath, this._options.setupArgs]);
            this._child = t3;
            this._retries++;
            if (this._retries > this._options.maxRetries) {
              const e4 = new Error(`Jest worker encountered ${this._retries} child process exceptions, exceeding retry limit`);
              this._onMessage([s.PARENT_MESSAGE_CLIENT_ERROR, e4.name, e4.message, e4.stack, { type: "WorkerError" }]);
            }
          }
          _shutdown() {
            if (this._fakeStream) {
              this._fakeStream.end();
              this._fakeStream = null;
            }
            this._resolveExitPromise();
          }
          _onMessage(e3) {
            let t3;
            switch (e3[0]) {
              case s.PARENT_MESSAGE_OK:
                this._onProcessEnd(null, e3[1]);
                break;
              case s.PARENT_MESSAGE_CLIENT_ERROR:
                t3 = e3[4];
                if (t3 != null && typeof t3 === "object") {
                  const r3 = t3;
                  const i2 = global[e3[1]];
                  const s2 = typeof i2 === "function" ? i2 : Error;
                  t3 = new s2(e3[2]);
                  t3.type = e3[1];
                  t3.stack = e3[3];
                  for (const e4 in r3) {
                    t3[e4] = r3[e4];
                  }
                }
                this._onProcessEnd(t3, null);
                break;
              case s.PARENT_MESSAGE_SETUP_ERROR:
                t3 = new Error("Error when calling setup: " + e3[2]);
                t3.type = e3[1];
                t3.stack = e3[3];
                this._onProcessEnd(t3, null);
                break;
              case s.PARENT_MESSAGE_CUSTOM:
                this._onCustomMessage(e3[1]);
                break;
              default:
                throw new TypeError("Unexpected response from worker: " + e3[0]);
            }
          }
          _onExit(e3) {
            if (e3 !== 0 && e3 !== null && e3 !== u && e3 !== n) {
              this.initialize();
              if (this._request) {
                this._child.send(this._request);
              }
            } else {
              this._shutdown();
            }
          }
          send(e3, t3, r3, i2) {
            t3(this);
            this._onProcessEnd = (...e4) => {
              this._request = null;
              return r3(...e4);
            };
            this._onCustomMessage = (...e4) => i2(...e4);
            this._request = e3;
            this._retries = 0;
            this._child.send(e3, () => {
            });
          }
          waitForExit() {
            return this._exitPromise;
          }
          forceExit() {
            this._child.kill("SIGTERM");
            const e3 = setTimeout(() => this._child.kill("SIGKILL"), _);
            this._exitPromise.then(() => clearTimeout(e3));
          }
          getWorkerId() {
            return this._options.workerId;
          }
          getStdout() {
            return this._stdout;
          }
          getStderr() {
            return this._stderr;
          }
          _getFakeStream() {
            if (!this._fakeStream) {
              this._fakeStream = new (_stream()).PassThrough();
            }
            return this._fakeStream;
          }
        }
        t2.Z = ChildProcessWorker;
      }, 925: (e2, t2, r2) => {
        var i;
        i = { value: true };
        t2.Z = void 0;
        function path() {
          const e3 = _interopRequireWildcard(r2(17));
          path = function() {
            return e3;
          };
          return e3;
        }
        function _stream() {
          const e3 = r2(781);
          _stream = function() {
            return e3;
          };
          return e3;
        }
        function _worker_threads() {
          const e3 = r2(267);
          _worker_threads = function() {
            return e3;
          };
          return e3;
        }
        function _mergeStream() {
          const e3 = _interopRequireDefault(r2(942));
          _mergeStream = function() {
            return e3;
          };
          return e3;
        }
        var s = r2(582);
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        function _getRequireWildcardCache(e3) {
          if (typeof WeakMap !== "function") return null;
          var t3 = /* @__PURE__ */ new WeakMap();
          var r3 = /* @__PURE__ */ new WeakMap();
          return (_getRequireWildcardCache = function(e4) {
            return e4 ? r3 : t3;
          })(e3);
        }
        function _interopRequireWildcard(e3, t3) {
          if (!t3 && e3 && e3.__esModule) {
            return e3;
          }
          if (e3 === null || typeof e3 !== "object" && typeof e3 !== "function") {
            return { default: e3 };
          }
          var r3 = _getRequireWildcardCache(t3);
          if (r3 && r3.has(e3)) {
            return r3.get(e3);
          }
          var i2 = {};
          var s2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var o in e3) {
            if (o !== "default" && Object.prototype.hasOwnProperty.call(e3, o)) {
              var n = s2 ? Object.getOwnPropertyDescriptor(e3, o) : null;
              if (n && (n.get || n.set)) {
                Object.defineProperty(i2, o, n);
              } else {
                i2[o] = e3[o];
              }
            }
          }
          i2.default = e3;
          if (r3) {
            r3.set(e3, i2);
          }
          return i2;
        }
        function _defineProperty(e3, t3, r3) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r3;
          }
          return e3;
        }
        class ExperimentalWorker {
          constructor(e3) {
            _defineProperty(this, "_worker", void 0);
            _defineProperty(this, "_options", void 0);
            _defineProperty(this, "_request", void 0);
            _defineProperty(this, "_retries", void 0);
            _defineProperty(this, "_onProcessEnd", void 0);
            _defineProperty(this, "_onCustomMessage", void 0);
            _defineProperty(this, "_fakeStream", void 0);
            _defineProperty(this, "_stdout", void 0);
            _defineProperty(this, "_stderr", void 0);
            _defineProperty(this, "_exitPromise", void 0);
            _defineProperty(this, "_resolveExitPromise", void 0);
            _defineProperty(this, "_forceExited", void 0);
            this._options = e3;
            this._request = null;
            this._fakeStream = null;
            this._stdout = null;
            this._stderr = null;
            this._exitPromise = new Promise((e4) => {
              this._resolveExitPromise = e4;
            });
            this._forceExited = false;
            this.initialize();
          }
          initialize() {
            this._worker = new (_worker_threads()).Worker(path().resolve(__dirname, "./threadChild.js"), { eval: false, resourceLimits: this._options.resourceLimits, stderr: true, stdout: true, workerData: this._options.workerData, ...this._options.forkOptions });
            if (this._worker.stdout) {
              if (!this._stdout) {
                this._stdout = (0, _mergeStream().default)(this._getFakeStream());
              }
              this._stdout.add(this._worker.stdout);
            }
            if (this._worker.stderr) {
              if (!this._stderr) {
                this._stderr = (0, _mergeStream().default)(this._getFakeStream());
              }
              this._stderr.add(this._worker.stderr);
            }
            this._worker.on("message", this._onMessage.bind(this));
            this._worker.on("exit", this._onExit.bind(this));
            this._worker.postMessage([s.CHILD_MESSAGE_INITIALIZE, false, this._options.workerPath, this._options.setupArgs, String(this._options.workerId + 1)]);
            this._retries++;
            if (this._retries > this._options.maxRetries) {
              const e3 = new Error("Call retries were exceeded");
              this._onMessage([s.PARENT_MESSAGE_CLIENT_ERROR, e3.name, e3.message, e3.stack, { type: "WorkerError" }]);
            }
          }
          _shutdown() {
            if (this._fakeStream) {
              this._fakeStream.end();
              this._fakeStream = null;
            }
            this._resolveExitPromise();
          }
          _onMessage(e3) {
            let t3;
            switch (e3[0]) {
              case s.PARENT_MESSAGE_OK:
                this._onProcessEnd(null, e3[1]);
                break;
              case s.PARENT_MESSAGE_CLIENT_ERROR:
                t3 = e3[4];
                if (t3 != null && typeof t3 === "object") {
                  const r3 = t3;
                  const i2 = global[e3[1]];
                  const s2 = typeof i2 === "function" ? i2 : Error;
                  t3 = new s2(e3[2]);
                  t3.type = e3[1];
                  t3.stack = e3[3];
                  for (const e4 in r3) {
                    t3[e4] = r3[e4];
                  }
                }
                this._onProcessEnd(t3, null);
                break;
              case s.PARENT_MESSAGE_SETUP_ERROR:
                t3 = new Error("Error when calling setup: " + e3[2]);
                t3.type = e3[1];
                t3.stack = e3[3];
                this._onProcessEnd(t3, null);
                break;
              case s.PARENT_MESSAGE_CUSTOM:
                this._onCustomMessage(e3[1]);
                break;
              default:
                throw new TypeError("Unexpected response from worker: " + e3[0]);
            }
          }
          _onExit(e3) {
            if (e3 !== 0 && !this._forceExited) {
              this.initialize();
              if (this._request) {
                this._worker.postMessage(this._request);
              }
            } else {
              this._shutdown();
            }
          }
          waitForExit() {
            return this._exitPromise;
          }
          forceExit() {
            this._forceExited = true;
            this._worker.terminate();
          }
          send(e3, t3, r3, i2) {
            t3(this);
            this._onProcessEnd = (...e4) => {
              var t4;
              this._request = null;
              const i3 = (t4 = r3) === null || t4 === void 0 ? void 0 : t4(...e4);
              r3 = null;
              return i3;
            };
            this._onCustomMessage = (...e4) => i2(...e4);
            this._request = e3;
            this._retries = 0;
            this._worker.postMessage(e3);
          }
          getWorkerId() {
            return this._options.workerId;
          }
          getStdout() {
            return this._stdout;
          }
          getStderr() {
            return this._stderr;
          }
          _getFakeStream() {
            if (!this._fakeStream) {
              this._fakeStream = new (_stream()).PassThrough();
            }
            return this._fakeStream;
          }
        }
        t2.Z = ExperimentalWorker;
      }, 922: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true });
        t2["default"] = messageParent;
        var i = r2(582);
        const s = (() => {
          try {
            const { isMainThread: e3, parentPort: t3 } = r2(267);
            return !e3 && t3 != null;
          } catch {
            return false;
          }
        })();
        function messageParent(e3, t3 = process) {
          if (s) {
            const { parentPort: t4 } = r2(267);
            t4.postMessage([i.PARENT_MESSAGE_CUSTOM, e3]);
          } else if (typeof t3.send === "function") {
            t3.send([i.PARENT_MESSAGE_CUSTOM, e3]);
          } else {
            throw new Error('"messageParent" can only be used inside a worker');
          }
        }
      }, 942: (e2, t2, r2) => {
        const { PassThrough: i } = r2(781);
        e2.exports = function() {
          var e3 = [];
          var t3 = new i({ objectMode: true });
          t3.setMaxListeners(0);
          t3.add = add;
          t3.isEmpty = isEmpty;
          t3.on("unpipe", remove);
          Array.prototype.slice.call(arguments).forEach(add);
          return t3;
          function add(r3) {
            if (Array.isArray(r3)) {
              r3.forEach(add);
              return this;
            }
            e3.push(r3);
            r3.once("end", remove.bind(null, r3));
            r3.once("error", t3.emit.bind(t3, "error"));
            r3.pipe(t3, { end: false });
            return this;
          }
          function isEmpty() {
            return e3.length == 0;
          }
          function remove(r3) {
            e3 = e3.filter(function(e4) {
              return e4 !== r3;
            });
            if (!e3.length && t3.readable) {
              t3.end();
            }
          }
        };
      }, 178: (e2, t2, r2) => {
        const i = r2(37);
        const s = r2(224);
        const o = r2(914);
        const { env: n } = process;
        let u;
        if (o("no-color") || o("no-colors") || o("color=false") || o("color=never")) {
          u = 0;
        } else if (o("color") || o("colors") || o("color=true") || o("color=always")) {
          u = 1;
        }
        function envForceColor() {
          if ("FORCE_COLOR" in n) {
            if (n.FORCE_COLOR === "true") {
              return 1;
            }
            if (n.FORCE_COLOR === "false") {
              return 0;
            }
            return n.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(n.FORCE_COLOR, 10), 3);
          }
        }
        function translateLevel(e3) {
          if (e3 === 0) {
            return false;
          }
          return { level: e3, hasBasic: true, has256: e3 >= 2, has16m: e3 >= 3 };
        }
        function supportsColor(e3, { streamIsTTY: t3, sniffFlags: r3 = true } = {}) {
          const s2 = envForceColor();
          if (s2 !== void 0) {
            u = s2;
          }
          const _ = r3 ? u : s2;
          if (_ === 0) {
            return 0;
          }
          if (r3) {
            if (o("color=16m") || o("color=full") || o("color=truecolor")) {
              return 3;
            }
            if (o("color=256")) {
              return 2;
            }
          }
          if (e3 && !t3 && _ === void 0) {
            return 0;
          }
          const l = _ || 0;
          if (n.TERM === "dumb") {
            return l;
          }
          if (process.platform === "win32") {
            const e4 = i.release().split(".");
            if (Number(e4[0]) >= 10 && Number(e4[2]) >= 10586) {
              return Number(e4[2]) >= 14931 ? 3 : 2;
            }
            return 1;
          }
          if ("CI" in n) {
            if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE", "DRONE"].some((e4) => e4 in n) || n.CI_NAME === "codeship") {
              return 1;
            }
            return l;
          }
          if ("TEAMCITY_VERSION" in n) {
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(n.TEAMCITY_VERSION) ? 1 : 0;
          }
          if (n.COLORTERM === "truecolor") {
            return 3;
          }
          if ("TERM_PROGRAM" in n) {
            const e4 = Number.parseInt((n.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
            switch (n.TERM_PROGRAM) {
              case "iTerm.app":
                return e4 >= 3 ? 3 : 2;
              case "Apple_Terminal":
                return 2;
            }
          }
          if (/-256(color)?$/i.test(n.TERM)) {
            return 2;
          }
          if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(n.TERM)) {
            return 1;
          }
          if ("COLORTERM" in n) {
            return 1;
          }
          return l;
        }
        function getSupportLevel(e3, t3 = {}) {
          const r3 = supportsColor(e3, { streamIsTTY: e3 && e3.isTTY, ...t3 });
          return translateLevel(r3);
        }
        e2.exports = { supportsColor: getSupportLevel, stdout: getSupportLevel({ isTTY: s.isatty(1) }), stderr: getSupportLevel({ isTTY: s.isatty(2) }) };
      }, 81: (e2) => {
        e2.exports = require_child_process();
      }, 37: (e2) => {
        e2.exports = require_os();
      }, 17: (e2) => {
        e2.exports = require_path();
      }, 781: (e2) => {
        e2.exports = require_stream();
      }, 224: (e2) => {
        e2.exports = require_tty();
      }, 267: (e2) => {
        e2.exports = require_worker_threads();
      } };
      var t = {};
      function __nccwpck_require__2(r2) {
        var i = t[r2];
        if (i !== void 0) {
          return i.exports;
        }
        var s = t[r2] = { exports: {} };
        var o = true;
        try {
          e[r2](s, s.exports, __nccwpck_require__2);
          o = false;
        } finally {
          if (o) delete t[r2];
        }
        return s.exports;
      }
      if (typeof __nccwpck_require__2 !== "undefined") __nccwpck_require__2.ab = __dirname + "/";
      var r = {};
      (() => {
        var e2 = r;
        Object.defineProperty(e2, "__esModule", { value: true });
        Object.defineProperty(e2, "FifoQueue", { enumerable: true, get: function() {
          return o.default;
        } });
        Object.defineProperty(e2, "PriorityQueue", { enumerable: true, get: function() {
          return s.default;
        } });
        e2.Worker = void 0;
        Object.defineProperty(e2, "messageParent", { enumerable: true, get: function() {
          return n.default;
        } });
        function _os() {
          const e3 = __nccwpck_require__2(37);
          _os = function() {
            return e3;
          };
          return e3;
        }
        var t2 = _interopRequireDefault(__nccwpck_require__2(460));
        var i = _interopRequireDefault(__nccwpck_require__2(30));
        var s = _interopRequireDefault(__nccwpck_require__2(601));
        var o = _interopRequireDefault(__nccwpck_require__2(552));
        var n = _interopRequireDefault(__nccwpck_require__2(922));
        function _interopRequireDefault(e3) {
          return e3 && e3.__esModule ? e3 : { default: e3 };
        }
        function _defineProperty(e3, t3, r2) {
          if (t3 in e3) {
            Object.defineProperty(e3, t3, { value: r2, enumerable: true, configurable: true, writable: true });
          } else {
            e3[t3] = r2;
          }
          return e3;
        }
        function getExposedMethods(e3, t3) {
          let r2 = t3.exposedMethods;
          if (!r2) {
            const t4 = __require(e3);
            r2 = Object.keys(t4).filter((e4) => typeof t4[e4] === "function");
            if (typeof t4 === "function") {
              r2 = [...r2, "default"];
            }
          }
          return r2;
        }
        class Worker {
          constructor(e3, r2) {
            var s2, o2, n2, u, _, l;
            _defineProperty(this, "_ending", void 0);
            _defineProperty(this, "_farm", void 0);
            _defineProperty(this, "_options", void 0);
            _defineProperty(this, "_workerPool", void 0);
            this._options = { ...r2 };
            this._ending = false;
            const a = { enableWorkerThreads: (s2 = this._options.enableWorkerThreads) !== null && s2 !== void 0 ? s2 : false, forkOptions: (o2 = this._options.forkOptions) !== null && o2 !== void 0 ? o2 : {}, maxRetries: (n2 = this._options.maxRetries) !== null && n2 !== void 0 ? n2 : 3, numWorkers: (u = this._options.numWorkers) !== null && u !== void 0 ? u : Math.max((0, _os().cpus)().length - 1, 1), resourceLimits: (_ = this._options.resourceLimits) !== null && _ !== void 0 ? _ : {}, setupArgs: (l = this._options.setupArgs) !== null && l !== void 0 ? l : [] };
            if (this._options.WorkerPool) {
              this._workerPool = new this._options.WorkerPool(e3, a);
            } else {
              this._workerPool = new i.default(e3, a);
            }
            this._farm = new t2.default(a.numWorkers, this._workerPool.send.bind(this._workerPool), { computeWorkerKey: this._options.computeWorkerKey, taskQueue: this._options.taskQueue, workerSchedulingPolicy: this._options.workerSchedulingPolicy });
            this._bindExposedWorkerMethods(e3, this._options);
          }
          _bindExposedWorkerMethods(e3, t3) {
            getExposedMethods(e3, t3).forEach((e4) => {
              if (e4.startsWith("_")) {
                return;
              }
              if (this.constructor.prototype.hasOwnProperty(e4)) {
                throw new TypeError("Cannot define a method called " + e4);
              }
              this[e4] = this._callFunctionWithArgs.bind(this, e4);
            });
          }
          _callFunctionWithArgs(e3, ...t3) {
            if (this._ending) {
              throw new Error("Farm is ended, no more calls can be done to it");
            }
            return this._farm.doWork(e3, ...t3);
          }
          getStderr() {
            return this._workerPool.getStderr();
          }
          getStdout() {
            return this._workerPool.getStdout();
          }
          async end() {
            if (this._ending) {
              throw new Error("Farm is ended, no more calls can be done to it");
            }
            this._ending = true;
            return this._workerPool.end();
          }
        }
        e2.Worker = Worker;
      })();
      module2.exports = r;
    })();
  }
});

// ../../../node_modules/next/dist/server/lib/squoosh/main.js
var require_main = __commonJS({
  "../../../node_modules/next/dist/server/lib/squoosh/main.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      decodeBuffer: function() {
        return decodeBuffer;
      },
      getMetadata: function() {
        return getMetadata;
      },
      processBuffer: function() {
        return processBuffer;
      }
    });
    var _jestworker = require_jest_worker();
    var _path = _interop_require_wildcard(require_path());
    var _utils = require_utils2();
    var _os = require_os();
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interop_require_wildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {
        __proto__: null
      };
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var getWorker = (0, _utils.execOnce)(() => new _jestworker.Worker(_path.resolve(__dirname, "impl"), {
      enableWorkerThreads: true,
      // There will be at most 6 workers needed since each worker will take
      // at least 1 operation type.
      numWorkers: Math.max(1, Math.min((0, _os.cpus)().length - 1, 6)),
      computeWorkerKey: (method) => method
    }));
    async function getMetadata(buffer) {
      const worker = getWorker();
      const { width, height } = await worker.decodeBuffer(buffer);
      return {
        width,
        height
      };
    }
    async function processBuffer(buffer, operations, encoding, quality) {
      const worker = getWorker();
      let imageData = await worker.decodeBuffer(buffer);
      for (const operation of operations) {
        if (operation.type === "rotate") {
          imageData = await worker.rotate(imageData, operation.numRotations);
        } else if (operation.type === "resize") {
          const opt = {
            image: imageData,
            width: 0,
            height: 0
          };
          if (operation.width && imageData.width && imageData.width > operation.width) {
            opt.width = operation.width;
          }
          if (operation.height && imageData.height && imageData.height > operation.height) {
            opt.height = operation.height;
          }
          if (opt.width > 0 || opt.height > 0) {
            imageData = await worker.resize(opt);
          }
        }
      }
      switch (encoding) {
        case "jpeg":
          return Buffer.from(await worker.encodeJpeg(imageData, {
            quality
          }));
        case "webp":
          return Buffer.from(await worker.encodeWebp(imageData, {
            quality
          }));
        case "avif":
          const avifQuality = quality - 20;
          return Buffer.from(await worker.encodeAvif(imageData, {
            quality: Math.max(avifQuality, 0)
          }));
        case "png":
          return Buffer.from(await worker.encodePng(imageData));
        default:
          throw Error(`Unsupported encoding format`);
      }
    }
    async function decodeBuffer(buffer) {
      const worker = getWorker();
      const imageData = await worker.decodeBuffer(buffer);
      return imageData;
    }
  }
});

// ../../../node_modules/next/dist/server/image-optimizer.js
var require_image_optimizer = __commonJS({
  "../../../node_modules/next/dist/server/image-optimizer.js"(exports2) {
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _export(target, all) {
      for (var name in all) Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
      });
    }
    _export(exports2, {
      ImageError: function() {
        return ImageError;
      },
      ImageOptimizerCache: function() {
        return ImageOptimizerCache;
      },
      detectContentType: function() {
        return detectContentType;
      },
      fetchExternalImage: function() {
        return fetchExternalImage;
      },
      fetchInternalImage: function() {
        return fetchInternalImage;
      },
      getHash: function() {
        return getHash;
      },
      getImageSize: function() {
        return getImageSize;
      },
      getMaxAge: function() {
        return getMaxAge;
      },
      imageOptimizer: function() {
        return imageOptimizer;
      },
      optimizeImage: function() {
        return optimizeImage;
      },
      sendResponse: function() {
        return sendResponse;
      }
    });
    var _crypto = require_crypto();
    var _fs = require_fs();
    var _os = require_os();
    var _accept = require_accept();
    var _contentdisposition = _interop_require_default(require_content_disposition());
    var _getorientation = require_get_orientation();
    var _imagesize = _interop_require_default(require_image_size());
    var _isanimated = _interop_require_default(require_is_animated());
    var _path = require_path();
    var _url = _interop_require_default(require_url());
    var _imageblursvg = require_image_blur_svg();
    var _matchlocalpattern = require_match_local_pattern();
    var _matchremotepattern = require_match_remote_pattern();
    var _mockrequest = require_mock_request();
    var _sendpayload = require_send_payload();
    var _servestatic = require_serve_static();
    var _log = _interop_require_wildcard(require_log());
    var _url1 = require_url2();
    function _interop_require_default(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function") return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interop_require_wildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {
        __proto__: null
      };
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj.default = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var AVIF = "image/avif";
    var WEBP = "image/webp";
    var PNG = "image/png";
    var JPEG = "image/jpeg";
    var GIF = "image/gif";
    var SVG = "image/svg+xml";
    var ICO = "image/x-icon";
    var CACHE_VERSION = 3;
    var ANIMATABLE_TYPES = [
      WEBP,
      PNG,
      GIF
    ];
    var VECTOR_TYPES = [
      SVG
    ];
    var BLUR_IMG_SIZE = 8;
    var BLUR_QUALITY = 70;
    var sharp;
    try {
      sharp = __require(process.env.NEXT_SHARP_PATH || "sharp");
      if (sharp && sharp.concurrency() > 1) {
        const divisor = true ? 4 : 2;
        sharp.concurrency(Math.floor(Math.max((0, _os.cpus)().length / divisor, 1)));
      }
    } catch (e) {
    }
    var showSharpMissingWarning = false;
    function getSupportedMimeType(options, accept = "") {
      const mimeType = (0, _accept.mediaType)(accept, options);
      return accept.includes(mimeType) ? mimeType : "";
    }
    function getHash(items) {
      const hash = (0, _crypto.createHash)("sha256");
      for (let item of items) {
        if (typeof item === "number") hash.update(String(item));
        else {
          hash.update(item);
        }
      }
      return hash.digest("base64").replace(/\//g, "-");
    }
    async function writeToCacheDir(dir, extension, maxAge, expireAt, buffer, etag) {
      const filename = (0, _path.join)(dir, `${maxAge}.${expireAt}.${etag}.${extension}`);
      await _fs.promises.rm(dir, {
        recursive: true,
        force: true
      }).catch(() => {
      });
      await _fs.promises.mkdir(dir, {
        recursive: true
      });
      await _fs.promises.writeFile(filename, buffer);
    }
    function detectContentType(buffer) {
      if ([
        255,
        216,
        255
      ].every((b, i) => buffer[i] === b)) {
        return JPEG;
      }
      if ([
        137,
        80,
        78,
        71,
        13,
        10,
        26,
        10
      ].every((b, i) => buffer[i] === b)) {
        return PNG;
      }
      if ([
        71,
        73,
        70,
        56
      ].every((b, i) => buffer[i] === b)) {
        return GIF;
      }
      if ([
        82,
        73,
        70,
        70,
        0,
        0,
        0,
        0,
        87,
        69,
        66,
        80
      ].every((b, i) => !b || buffer[i] === b)) {
        return WEBP;
      }
      if ([
        60,
        63,
        120,
        109,
        108
      ].every((b, i) => buffer[i] === b)) {
        return SVG;
      }
      if ([
        0,
        0,
        0,
        0,
        102,
        116,
        121,
        112,
        97,
        118,
        105,
        102
      ].every((b, i) => !b || buffer[i] === b)) {
        return AVIF;
      }
      if ([
        0,
        0,
        1,
        0
      ].every((b, i) => buffer[i] === b)) {
        return ICO;
      }
      return null;
    }
    var ImageOptimizerCache = class {
      static validateParams(req, query, nextConfig, isDev) {
        var _nextConfig_images, _nextConfig_images1;
        const imageData = nextConfig.images;
        const { deviceSizes = [], imageSizes = [], domains = [], minimumCacheTTL = 60, formats = [
          "image/webp"
        ] } = imageData;
        const remotePatterns = ((_nextConfig_images = nextConfig.images) == null ? void 0 : _nextConfig_images.remotePatterns) || [];
        const localPatterns = (_nextConfig_images1 = nextConfig.images) == null ? void 0 : _nextConfig_images1.localPatterns;
        const { url, w, q } = query;
        let href;
        if (domains.length > 0) {
          _log.warnOnce('The "images.domains" configuration is deprecated. Please use "images.remotePatterns" configuration instead.');
        }
        if (!url) {
          return {
            errorMessage: '"url" parameter is required'
          };
        } else if (Array.isArray(url)) {
          return {
            errorMessage: '"url" parameter cannot be an array'
          };
        }
        if (url.length > 3072) {
          return {
            errorMessage: '"url" parameter is too long'
          };
        }
        if (url.startsWith("//")) {
          return {
            errorMessage: '"url" parameter cannot be a protocol-relative URL (//)'
          };
        }
        let isAbsolute;
        if (url.startsWith("/")) {
          var _parseUrl;
          href = url;
          isAbsolute = false;
          if (/\/_next\/image($|\/)/.test(decodeURIComponent(((_parseUrl = (0, _url1.parseUrl)(url)) == null ? void 0 : _parseUrl.pathname) ?? ""))) {
            return {
              errorMessage: '"url" parameter cannot be recursive'
            };
          }
          if (!(0, _matchlocalpattern.hasLocalMatch)(localPatterns, url)) {
            return {
              errorMessage: '"url" parameter is not allowed'
            };
          }
        } else {
          let hrefParsed;
          try {
            hrefParsed = new URL(url);
            href = hrefParsed.toString();
            isAbsolute = true;
          } catch (_error) {
            return {
              errorMessage: '"url" parameter is invalid'
            };
          }
          if (![
            "http:",
            "https:"
          ].includes(hrefParsed.protocol)) {
            return {
              errorMessage: '"url" parameter is invalid'
            };
          }
          if (!(0, _matchremotepattern.hasRemoteMatch)(domains, remotePatterns, hrefParsed)) {
            return {
              errorMessage: '"url" parameter is not allowed'
            };
          }
        }
        if (!w) {
          return {
            errorMessage: '"w" parameter (width) is required'
          };
        } else if (Array.isArray(w)) {
          return {
            errorMessage: '"w" parameter (width) cannot be an array'
          };
        }
        if (!q) {
          return {
            errorMessage: '"q" parameter (quality) is required'
          };
        } else if (Array.isArray(q)) {
          return {
            errorMessage: '"q" parameter (quality) cannot be an array'
          };
        }
        const width = parseInt(w, 10);
        if (width <= 0 || isNaN(width)) {
          return {
            errorMessage: '"w" parameter (width) must be a number greater than 0'
          };
        }
        const sizes = [
          ...deviceSizes || [],
          ...imageSizes || []
        ];
        if (isDev) {
          sizes.push(BLUR_IMG_SIZE);
        }
        const isValidSize = sizes.includes(width) || isDev && width <= BLUR_IMG_SIZE;
        if (!isValidSize) {
          return {
            errorMessage: `"w" parameter (width) of ${width} is not allowed`
          };
        }
        const quality = parseInt(q);
        if (isNaN(quality) || quality < 1 || quality > 100) {
          return {
            errorMessage: '"q" parameter (quality) must be a number between 1 and 100'
          };
        }
        const mimeType = getSupportedMimeType(formats || [], req.headers["accept"]);
        const isStatic = url.startsWith(`${nextConfig.basePath || ""}/_next/static/media`);
        return {
          href,
          sizes,
          isAbsolute,
          isStatic,
          width,
          quality,
          mimeType,
          minimumCacheTTL
        };
      }
      static getCacheKey({ href, width, quality, mimeType }) {
        return getHash([
          CACHE_VERSION,
          href,
          width,
          quality,
          mimeType
        ]);
      }
      constructor({ distDir, nextConfig }) {
        this.cacheDir = (0, _path.join)(distDir, "cache", "images");
        this.nextConfig = nextConfig;
      }
      async get(cacheKey) {
        try {
          const cacheDir = (0, _path.join)(this.cacheDir, cacheKey);
          const files = await _fs.promises.readdir(cacheDir);
          const now = Date.now();
          for (const file of files) {
            const [maxAgeSt, expireAtSt, etag, extension] = file.split(".", 4);
            const buffer = await _fs.promises.readFile((0, _path.join)(cacheDir, file));
            const expireAt = Number(expireAtSt);
            const maxAge = Number(maxAgeSt);
            return {
              value: {
                kind: "IMAGE",
                etag,
                buffer,
                extension
              },
              revalidateAfter: Math.max(maxAge, this.nextConfig.images.minimumCacheTTL) * 1e3 + Date.now(),
              curRevalidate: maxAge,
              isStale: now > expireAt
            };
          }
        } catch (_) {
        }
        return null;
      }
      async set(cacheKey, value, { revalidate }) {
        if ((value == null ? void 0 : value.kind) !== "IMAGE") {
          throw new Error("invariant attempted to set non-image to image-cache");
        }
        if (typeof revalidate !== "number") {
          throw new Error("invariant revalidate must be a number for image-cache");
        }
        const expireAt = Math.max(revalidate, this.nextConfig.images.minimumCacheTTL) * 1e3 + Date.now();
        try {
          await writeToCacheDir((0, _path.join)(this.cacheDir, cacheKey), value.extension, revalidate, expireAt, value.buffer, value.etag);
        } catch (err) {
          _log.error(`Failed to write image to cache ${cacheKey}`, err);
        }
      }
    };
    var ImageError = class extends Error {
      constructor(statusCode, message2) {
        super(message2);
        if (statusCode >= 400) {
          this.statusCode = statusCode;
        } else {
          this.statusCode = 500;
        }
      }
    };
    function parseCacheControl(str) {
      const map = /* @__PURE__ */ new Map();
      if (!str) {
        return map;
      }
      for (let directive of str.split(",")) {
        let [key, value] = directive.trim().split("=", 2);
        key = key.toLowerCase();
        if (value) {
          value = value.toLowerCase();
        }
        map.set(key, value);
      }
      return map;
    }
    function getMaxAge(str) {
      const map = parseCacheControl(str);
      if (map) {
        let age = map.get("s-maxage") || map.get("max-age") || "";
        if (age.startsWith('"') && age.endsWith('"')) {
          age = age.slice(1, -1);
        }
        const n = parseInt(age, 10);
        if (!isNaN(n)) {
          return n;
        }
      }
      return 0;
    }
    async function optimizeImage({ buffer, contentType, quality, width, height, nextConfigOutput }) {
      let optimizedBuffer = buffer;
      if (sharp) {
        const transformer = sharp(buffer, {
          sequentialRead: true
        });
        transformer.rotate();
        if (height) {
          transformer.resize(width, height);
        } else {
          transformer.resize(width, void 0, {
            withoutEnlargement: true
          });
        }
        if (contentType === AVIF) {
          if (transformer.avif) {
            const avifQuality = quality - 15;
            transformer.avif({
              quality: Math.max(avifQuality, 0),
              chromaSubsampling: "4:2:0"
            });
          } else {
            _log.warnOnce(`Your installed version of the 'sharp' package does not support AVIF images. Run 'npm i sharp@latest' to upgrade to the latest version.
Read more: https://nextjs.org/docs/messages/sharp-version-avif`);
            transformer.webp({
              quality
            });
          }
        } else if (contentType === WEBP) {
          transformer.webp({
            quality
          });
        } else if (contentType === PNG) {
          transformer.png({
            quality
          });
        } else if (contentType === JPEG) {
          transformer.jpeg({
            quality,
            progressive: true
          });
        }
        optimizedBuffer = await transformer.toBuffer();
      } else {
        if (showSharpMissingWarning && nextConfigOutput === "standalone") {
          _log.error(`Error: 'sharp' is required to be installed in standalone mode for the image optimization to function correctly. Read more at: https://nextjs.org/docs/messages/sharp-missing-in-production`);
          throw new ImageError(500, "Internal Server Error");
        }
        if (showSharpMissingWarning) {
          _log.warnOnce(`For production Image Optimization with Next.js, the optional 'sharp' package is strongly recommended. Run 'npm i sharp', and Next.js will use it automatically for Image Optimization.
Read more: https://nextjs.org/docs/messages/sharp-missing-in-production`);
          showSharpMissingWarning = false;
        }
        const orientation = await (0, _getorientation.getOrientation)(buffer);
        const operations = [];
        if (orientation === _getorientation.Orientation.RIGHT_TOP) {
          operations.push({
            type: "rotate",
            numRotations: 1
          });
        } else if (orientation === _getorientation.Orientation.BOTTOM_RIGHT) {
          operations.push({
            type: "rotate",
            numRotations: 2
          });
        } else if (orientation === _getorientation.Orientation.LEFT_BOTTOM) {
          operations.push({
            type: "rotate",
            numRotations: 3
          });
        } else {
        }
        if (height) {
          operations.push({
            type: "resize",
            width,
            height
          });
        } else {
          operations.push({
            type: "resize",
            width
          });
        }
        const { processBuffer } = require_main();
        if (contentType === AVIF) {
          optimizedBuffer = await processBuffer(buffer, operations, "avif", quality);
        } else if (contentType === WEBP) {
          optimizedBuffer = await processBuffer(buffer, operations, "webp", quality);
        } else if (contentType === PNG) {
          optimizedBuffer = await processBuffer(buffer, operations, "png", quality);
        } else if (contentType === JPEG) {
          optimizedBuffer = await processBuffer(buffer, operations, "jpeg", quality);
        }
      }
      return optimizedBuffer;
    }
    async function fetchExternalImage(href) {
      const res = await fetch(href);
      if (!res.ok) {
        _log.error("upstream image response failed for", href, res.status);
        throw new ImageError(res.status, '"url" parameter is valid but upstream response is invalid');
      }
      const buffer = Buffer.from(await res.arrayBuffer());
      const contentType = res.headers.get("Content-Type");
      const cacheControl = res.headers.get("Cache-Control");
      return {
        buffer,
        contentType,
        cacheControl
      };
    }
    async function fetchInternalImage(href, _req, _res, handleRequest) {
      try {
        const mocked = (0, _mockrequest.createRequestResponseMocks)({
          url: href,
          method: _req.method || "GET",
          headers: _req.headers,
          socket: _req.socket
        });
        await handleRequest(mocked.req, mocked.res, _url.default.parse(href, true));
        await mocked.res.hasStreamed;
        if (!mocked.res.statusCode) {
          _log.error("image response failed for", href, mocked.res.statusCode);
          throw new ImageError(mocked.res.statusCode, '"url" parameter is valid but internal response is invalid');
        }
        const buffer = Buffer.concat(mocked.res.buffers);
        const contentType = mocked.res.getHeader("Content-Type");
        const cacheControl = mocked.res.getHeader("Cache-Control");
        return {
          buffer,
          contentType,
          cacheControl
        };
      } catch (err) {
        _log.error("upstream image response failed for", href, err);
        throw new ImageError(500, '"url" parameter is valid but upstream response is invalid');
      }
    }
    async function imageOptimizer(imageUpstream, paramsResult, nextConfig, isDev) {
      var _imageUpstream_contentType;
      const { href, quality, width, mimeType } = paramsResult;
      const upstreamBuffer = imageUpstream.buffer;
      const maxAge = getMaxAge(imageUpstream.cacheControl);
      const upstreamType = detectContentType(upstreamBuffer) || ((_imageUpstream_contentType = imageUpstream.contentType) == null ? void 0 : _imageUpstream_contentType.toLowerCase().trim());
      if (upstreamType) {
        if (upstreamType.startsWith("image/svg") && !nextConfig.images.dangerouslyAllowSVG) {
          _log.error(`The requested resource "${href}" has type "${upstreamType}" but dangerouslyAllowSVG is disabled`);
          throw new ImageError(400, '"url" parameter is valid but image type is not allowed');
        }
        if (ANIMATABLE_TYPES.includes(upstreamType) && (0, _isanimated.default)(upstreamBuffer)) {
          _log.warnOnce(`The requested resource "${href}" is an animated image so it will not be optimized. Consider adding the "unoptimized" property to the <Image>.`);
          return {
            buffer: upstreamBuffer,
            contentType: upstreamType,
            maxAge
          };
        }
        if (VECTOR_TYPES.includes(upstreamType)) {
          return {
            buffer: upstreamBuffer,
            contentType: upstreamType,
            maxAge
          };
        }
        if (!upstreamType.startsWith("image/") || upstreamType.includes(",")) {
          _log.error("The requested resource isn't a valid image for", href, "received", upstreamType);
          throw new ImageError(400, "The requested resource isn't a valid image.");
        }
      }
      let contentType;
      if (mimeType) {
        contentType = mimeType;
      } else if ((upstreamType == null ? void 0 : upstreamType.startsWith("image/")) && (0, _servestatic.getExtension)(upstreamType) && upstreamType !== WEBP && upstreamType !== AVIF) {
        contentType = upstreamType;
      } else {
        contentType = JPEG;
      }
      try {
        let optimizedBuffer = await optimizeImage({
          buffer: upstreamBuffer,
          contentType,
          quality,
          width,
          nextConfigOutput: nextConfig.output
        });
        if (optimizedBuffer) {
          if (isDev && width <= BLUR_IMG_SIZE && quality === BLUR_QUALITY) {
            const { getMetadata } = require_main();
            const meta = await getMetadata(optimizedBuffer);
            const opts = {
              blurWidth: meta.width,
              blurHeight: meta.height,
              blurDataURL: `data:${contentType};base64,${optimizedBuffer.toString("base64")}`
            };
            optimizedBuffer = Buffer.from(unescape((0, _imageblursvg.getImageBlurSvg)(opts)));
            contentType = "image/svg+xml";
          }
          return {
            buffer: optimizedBuffer,
            contentType,
            maxAge: Math.max(maxAge, nextConfig.images.minimumCacheTTL)
          };
        } else {
          throw new ImageError(500, "Unable to optimize buffer");
        }
      } catch (error) {
        if (upstreamBuffer && upstreamType) {
          return {
            buffer: upstreamBuffer,
            contentType: upstreamType,
            maxAge: nextConfig.images.minimumCacheTTL
          };
        } else {
          throw new ImageError(400, "Unable to optimize image and unable to fallback to upstream image");
        }
      }
    }
    function getFileNameWithExtension(url, contentType) {
      const [urlWithoutQueryParams] = url.split("?", 1);
      const fileNameWithExtension = urlWithoutQueryParams.split("/").pop();
      if (!contentType || !fileNameWithExtension) {
        return "image.bin";
      }
      const [fileName] = fileNameWithExtension.split(".", 1);
      const extension = (0, _servestatic.getExtension)(contentType);
      return `${fileName}.${extension}`;
    }
    function setResponseHeaders(req, res, url, etag, contentType, isStatic, xCache, imagesConfig, maxAge, isDev) {
      res.setHeader("Vary", "Accept");
      res.setHeader("Cache-Control", isStatic ? "public, max-age=315360000, immutable" : `public, max-age=${isDev ? 0 : maxAge}, must-revalidate`);
      if ((0, _sendpayload.sendEtagResponse)(req, res, etag)) {
        return {
          finished: true
        };
      }
      if (contentType) {
        res.setHeader("Content-Type", contentType);
      }
      const fileName = getFileNameWithExtension(url, contentType);
      res.setHeader("Content-Disposition", (0, _contentdisposition.default)(fileName, {
        type: imagesConfig.contentDispositionType
      }));
      res.setHeader("Content-Security-Policy", imagesConfig.contentSecurityPolicy);
      res.setHeader("X-Nextjs-Cache", xCache);
      return {
        finished: false
      };
    }
    function sendResponse(req, res, url, extension, buffer, isStatic, xCache, imagesConfig, maxAge, isDev) {
      const contentType = (0, _servestatic.getContentType)(extension);
      const etag = getHash([
        buffer
      ]);
      const result = setResponseHeaders(req, res, url, etag, contentType, isStatic, xCache, imagesConfig, maxAge, isDev);
      if (!result.finished) {
        res.setHeader("Content-Length", Buffer.byteLength(buffer));
        res.end(buffer);
      }
    }
    async function getImageSize(buffer, extension) {
      if (extension === "avif") {
        if (sharp) {
          const transformer = sharp(buffer);
          const { width: width2, height: height2 } = await transformer.metadata();
          return {
            width: width2,
            height: height2
          };
        } else {
          const { decodeBuffer } = require_main();
          const { width: width2, height: height2 } = await decodeBuffer(buffer);
          return {
            width: width2,
            height: height2
          };
        }
      }
      const { width, height } = (0, _imagesize.default)(buffer);
      return {
        width,
        height
      };
    }
  }
});
export default require_image_optimizer();
/*! Bundled license information:

next/dist/compiled/content-disposition/index.js:
  (*!
   * content-disposition
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

next/dist/compiled/fresh/index.js:
  (*!
   * fresh
   * Copyright(c) 2012 TJ Holowaychuk
   * Copyright(c) 2016-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)

next/dist/compiled/node-html-parser/index.js:
  (*! https://mths.be/he v1.2.0 by @mathias | MIT license *)

next/dist/compiled/send/index.js:
  (*!
   * depd
   * Copyright(c) 2014-2017 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * depd
   * Copyright(c) 2014 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * depd
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * depd
   * Copyright(c) 2014-2015 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * destroy
   * Copyright(c) 2014 Jonathan Ong
   * MIT Licensed
   *)
  (*!
   * ee-first
   * Copyright(c) 2014 Jonathan Ong
   * MIT Licensed
   *)
  (*!
   * encodeurl
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * escape-html
   * Copyright(c) 2012-2013 TJ Holowaychuk
   * Copyright(c) 2015 Andreas Lubbe
   * Copyright(c) 2015 Tiancheng "Timothy" Gu
   * MIT Licensed
   *)
  (*!
   * etag
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * http-errors
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * on-finished
   * Copyright(c) 2013 Jonathan Ong
   * Copyright(c) 2014 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * range-parser
   * Copyright(c) 2012-2014 TJ Holowaychuk
   * Copyright(c) 2015-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * send
   * Copyright(c) 2012 TJ Holowaychuk
   * Copyright(c) 2014-2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * statuses
   * Copyright(c) 2014 Jonathan Ong
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
  (*!
   * toidentifier
   * Copyright(c) 2016 Douglas Christopher Wilson
   * MIT Licensed
   *)
*/
//# sourceMappingURL=next_dist_server_image-optimizer.js.map
